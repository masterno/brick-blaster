{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\noahm\\\\OneDrive\\\\Desktop\\\\Coding\\\\brick_blaster2\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // For development, we'll use local storage only\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      // Simulate API call\n      const mockUser = {\n        id: 1,\n        email,\n        username: email.split('@')[0]\n      };\n      localStorage.setItem('user', JSON.stringify(mockUser));\n      setUser(mockUser);\n      setError(null);\n      return mockUser;\n    } catch (err) {\n      setError('Login failed');\n      throw err;\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      // Simulate API call\n      const mockUser = {\n        id: 1,\n        email,\n        username\n      };\n      localStorage.setItem('user', JSON.stringify(mockUser));\n      setUser(mockUser);\n      setError(null);\n      return mockUser;\n    } catch (err) {\n      setError('Registration failed');\n      throw err;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  const value = {\n    user,\n    loading,\n    error,\n    isAuthenticated: !!user,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"FOpntwB10H5hCfVzE7D/PZlVbdo=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","error","setError","storedUser","localStorage","getItem","JSON","parse","login","email","password","mockUser","id","username","split","setItem","stringify","err","register","logout","removeItem","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["c:/Users/noahm/OneDrive/Desktop/Coding/brick_blaster2/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext(null);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // For development, we'll use local storage only\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n    setLoading(false);\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      // Simulate API call\n      const mockUser = { id: 1, email, username: email.split('@')[0] };\n      localStorage.setItem('user', JSON.stringify(mockUser));\n      setUser(mockUser);\n      setError(null);\n      return mockUser;\n    } catch (err) {\n      setError('Login failed');\n      throw err;\n    }\n  };\n\n  const register = async (username, email, password) => {\n    try {\n      // Simulate API call\n      const mockUser = { id: 1, email, username };\n      localStorage.setItem('user', JSON.stringify(mockUser));\n      setUser(mockUser);\n      setError(null);\n      return mockUser;\n    } catch (err) {\n      setError('Registration failed');\n      throw err;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    loading,\n    error,\n    isAuthenticated: !!user,\n    login,\n    register,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}