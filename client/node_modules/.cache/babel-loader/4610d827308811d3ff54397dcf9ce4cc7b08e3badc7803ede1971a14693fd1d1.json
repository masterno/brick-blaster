{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noahm\\\\OneDrive\\\\Desktop\\\\Coding\\\\brick_blaster2\\\\client\\\\src\\\\components\\\\Game\\\\GameCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useCallback } from 'react';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport LevelManager from './LevelManager';\nimport PauseMenu from '../UI/PauseMenu';\nimport GameOver from '../UI/GameOver';\nimport SoundManager from '../../utils/SoundManager';\nimport '../../styles/components/GameCanvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameCanvas = ({\n  lives,\n  setLives,\n  score,\n  setScore,\n  currentLevel,\n  setCurrentLevel,\n  isPaused,\n  setIsPaused,\n  isGameOver,\n  setIsGameOver,\n  isVictory,\n  setIsVictory\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const gameObjectsRef = useRef(null);\n  const requestIdRef = useRef({\n    id: null,\n    lastTime: 0\n  });\n  const levelManagerRef = useRef(null);\n  const soundManagerRef = useRef(null);\n  const drawHUD = useCallback(ctx => {\n    if (!ctx || !canvasRef.current) return;\n    ctx.save();\n\n    // Draw score\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '20px Arial';\n    ctx.fillText(`Score: ${score}`, 20, 30);\n\n    // Draw lives\n    ctx.fillText(`Lives: ${lives}`, canvasRef.current.width - 100, 30);\n\n    // Draw level\n    ctx.fillText(`Level: ${currentLevel}`, canvasRef.current.width / 2 - 30, 30);\n    ctx.restore();\n  }, [score, lives, currentLevel]);\n  const drawGameObjects = useCallback(ctx => {\n    const objects = gameObjectsRef.current;\n    if (!objects) return;\n\n    // Draw paddle\n    objects.paddle.draw(ctx);\n\n    // Draw ball\n    objects.ball.draw(ctx);\n\n    // Draw bricks\n    objects.bricks.forEach(brick => brick.draw(ctx));\n  }, []);\n  const resetBallAndPaddle = useCallback(() => {\n    if (!gameObjectsRef.current || !canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const objects = gameObjectsRef.current;\n\n    // Reset paddle position and state\n    objects.paddle.x = canvas.width / 2 - objects.paddle.width / 2;\n    objects.paddle.y = canvas.height - 40;\n    objects.paddle.leftPressed = false;\n    objects.paddle.rightPressed = false;\n\n    // Reset ball position and state\n    objects.ball.x = canvas.width / 2;\n    objects.ball.y = canvas.height - 60;\n    objects.ball.dx = 0;\n    objects.ball.dy = 0;\n    objects.ball.isLaunched = false;\n  }, []);\n  const handleBallOut = useCallback(() => {\n    const newLives = lives - 1;\n    setLives(newLives);\n    if (newLives <= 0) {\n      setIsGameOver(true);\n      setIsVictory(false);\n      setIsPaused(false);\n    } else {\n      resetBallAndPaddle();\n    }\n  }, [lives, setLives, setIsGameOver, setIsVictory, setIsPaused, resetBallAndPaddle]);\n  const handleKeyDown = useCallback(e => {\n    const objects = gameObjectsRef.current;\n    if (!objects) return;\n    if (e.code === 'Space') {\n      if (isGameOver) {\n        handleRestart();\n      } else {\n        setIsPaused(!isPaused);\n      }\n      return;\n    }\n    if (isPaused || isGameOver) return;\n    switch (e.code) {\n      case 'ArrowLeft':\n        objects.paddle.moveLeft();\n        break;\n      case 'ArrowRight':\n        objects.paddle.moveRight();\n        break;\n      default:\n        break;\n    }\n  }, [isGameOver, isPaused, setIsPaused, handleRestart]);\n  const handleKeyUp = useCallback(e => {\n    const objects = gameObjectsRef.current;\n    if (!objects) return;\n    switch (e.code) {\n      case 'ArrowLeft':\n        objects.paddle.stopLeft();\n        break;\n      case 'ArrowRight':\n        objects.paddle.stopRight();\n        break;\n      default:\n        break;\n    }\n  }, []);\n  const handleRestart = useCallback(() => {\n    if (!levelManagerRef.current) return;\n    setIsPaused(false);\n    setIsGameOver(false);\n    setIsVictory(false);\n    setScore(0);\n    setLives(3);\n    setCurrentLevel(1);\n\n    // Reset level manager to ensure fresh state\n    levelManagerRef.current = new LevelManager();\n    resetBallAndPaddle();\n  }, [resetBallAndPaddle, setCurrentLevel, setIsGameOver, setIsVictory, setIsPaused, setLives, setScore]);\n  const animate = useCallback(timestamp => {\n    var _canvasRef$current;\n    if (isPaused || isGameOver) return;\n    const deltaTime = timestamp - (requestIdRef.current.lastTime || timestamp);\n    requestIdRef.current.lastTime = timestamp;\n    const ctx = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.getContext('2d', {\n      alpha: false\n    });\n    const objects = gameObjectsRef.current;\n    if (!ctx || !objects) return;\n\n    // Clear canvas\n    ctx.fillStyle = '#000000';\n    ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n    // Update game objects\n    if (objects.ball.y + objects.ball.radius > canvasRef.current.height) {\n      handleBallOut();\n    } else {\n      objects.paddle.update(deltaTime / 1000);\n      objects.ball.update(deltaTime / 1000);\n\n      // Handle paddle collision\n      if (objects.ball.checkPaddleCollision(objects.paddle)) {\n        objects.ball.bounceOffPaddle(objects.paddle);\n        if (soundManagerRef.current) {\n          soundManagerRef.current.playPaddleHit();\n        }\n      }\n\n      // Only stick to paddle if not launched\n      if (!objects.ball.isLaunched) {\n        objects.ball.stickToPaddle(objects.paddle);\n      }\n\n      // Check brick collisions\n      let remainingBricks = 0;\n      let brickHit = false;\n\n      // Create a new array to store updated bricks\n      const updatedBricks = [];\n      for (const brick of objects.bricks) {\n        if (!brick.isDestroyed()) {\n          remainingBricks++;\n          if (!brickHit && objects.ball.checkBrickCollision(brick)) {\n            objects.ball.bounceOffBrick(brick);\n            brickHit = true;\n            if (brick.hit()) {\n              setScore(prev => prev + 100);\n              if (soundManagerRef.current) {\n                soundManagerRef.current.playBrickHit();\n              }\n            }\n          }\n        }\n        updatedBricks.push(brick);\n      }\n\n      // Update the bricks array with the new state\n      objects.bricks = updatedBricks;\n\n      // Check if level is complete\n      if (objects.bricks.length > 0 && remainingBricks === 0) {\n        const nextLevel = currentLevel + 1;\n        if (nextLevel <= levelManagerRef.current.getMaxLevel()) {\n          setCurrentLevel(nextLevel);\n        } else {\n          setIsGameOver(true);\n          setIsVictory(true);\n        }\n      }\n    }\n\n    // Draw game objects\n    drawGameObjects(ctx);\n    drawHUD(ctx);\n\n    // Request next frame\n    requestIdRef.current.id = requestAnimationFrame(animate);\n  }, [drawGameObjects, drawHUD, handleBallOut, currentLevel, isPaused, isGameOver, setCurrentLevel, setIsGameOver, setIsVictory, setScore]);\n\n  // Initialize managers and game state\n  useEffect(() => {\n    try {\n      // First initialize managers\n      levelManagerRef.current = new LevelManager();\n      soundManagerRef.current = new SoundManager();\n\n      // Initialize canvas\n      const canvas = canvasRef.current;\n      if (!canvas) {\n        console.error('Canvas not found');\n        return;\n      }\n      canvas.width = 800;\n      canvas.height = 600;\n\n      // Initialize game objects\n      gameObjectsRef.current = {\n        paddle: new Paddle(canvas.width / 2 - 50, canvas.height - 40),\n        ball: new Ball(canvas.width / 2, canvas.height - 60),\n        bricks: []\n      };\n\n      // Load initial level (with error handling)\n      const levelData = levelManagerRef.current.loadLevel(1);\n      if (!levelData) {\n        console.error('Failed to load initial level');\n        return;\n      }\n      gameObjectsRef.current.bricks = levelData.bricks || [];\n\n      // Add event listeners\n      window.addEventListener('keydown', handleKeyDown);\n      window.addEventListener('keyup', handleKeyUp);\n\n      // Start animation\n      requestIdRef.current.id = requestAnimationFrame(animate);\n      return () => {\n        if (requestIdRef.current.id) {\n          cancelAnimationFrame(requestIdRef.current.id);\n        }\n        window.removeEventListener('keydown', handleKeyDown);\n        window.removeEventListener('keyup', handleKeyUp);\n        if (soundManagerRef.current) {\n          soundManagerRef.current.cleanup();\n        }\n      };\n    } catch (error) {\n      console.error('Error initializing game:', error);\n    }\n  }, [handleKeyDown, handleKeyUp, animate]);\n\n  // Handle level changes\n  useEffect(() => {\n    try {\n      if (!gameObjectsRef.current || !levelManagerRef.current) {\n        console.warn('Game objects or level manager not initialized');\n        return;\n      }\n      const levelData = levelManagerRef.current.loadLevel(currentLevel);\n      if (!levelData) {\n        console.error('Failed to load level:', currentLevel);\n        return;\n      }\n      gameObjectsRef.current.bricks = levelData.bricks || [];\n      resetBallAndPaddle();\n    } catch (error) {\n      console.error('Error loading level:', error);\n    }\n  }, [currentLevel, resetBallAndPaddle]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), isPaused && !isGameOver && /*#__PURE__*/_jsxDEV(PauseMenu, {\n      onResume: () => setIsPaused(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 35\n    }, this), isGameOver && /*#__PURE__*/_jsxDEV(GameOver, {\n      score: score,\n      victory: isVictory,\n      onRestart: handleRestart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n};\n_s(GameCanvas, \"1FP+yQlQnQYaFTEEpH1hasuMMpY=\");\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useCallback","Ball","Paddle","LevelManager","PauseMenu","GameOver","SoundManager","jsxDEV","_jsxDEV","GameCanvas","lives","setLives","score","setScore","currentLevel","setCurrentLevel","isPaused","setIsPaused","isGameOver","setIsGameOver","isVictory","setIsVictory","_s","canvasRef","gameObjectsRef","requestIdRef","id","lastTime","levelManagerRef","soundManagerRef","drawHUD","ctx","current","save","fillStyle","font","fillText","width","restore","drawGameObjects","objects","paddle","draw","ball","bricks","forEach","brick","resetBallAndPaddle","canvas","x","y","height","leftPressed","rightPressed","dx","dy","isLaunched","handleBallOut","newLives","handleKeyDown","e","code","handleRestart","moveLeft","moveRight","handleKeyUp","stopLeft","stopRight","animate","timestamp","_canvasRef$current","deltaTime","getContext","alpha","fillRect","radius","update","checkPaddleCollision","bounceOffPaddle","playPaddleHit","stickToPaddle","remainingBricks","brickHit","updatedBricks","isDestroyed","checkBrickCollision","bounceOffBrick","hit","prev","playBrickHit","push","length","nextLevel","getMaxLevel","requestAnimationFrame","console","error","levelData","loadLevel","window","addEventListener","cancelAnimationFrame","removeEventListener","cleanup","warn","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onResume","victory","onRestart","_c","$RefreshReg$"],"sources":["C:/Users/noahm/OneDrive/Desktop/Coding/brick_blaster2/client/src/components/Game/GameCanvas.js"],"sourcesContent":["import React, { useRef, useEffect, useCallback } from 'react';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport LevelManager from './LevelManager';\nimport PauseMenu from '../UI/PauseMenu';\nimport GameOver from '../UI/GameOver';\nimport SoundManager from '../../utils/SoundManager';\nimport '../../styles/components/GameCanvas.css';\n\nconst GameCanvas = ({ \n  lives, setLives, \n  score, setScore, \n  currentLevel, setCurrentLevel,\n  isPaused, setIsPaused,\n  isGameOver, setIsGameOver,\n  isVictory, setIsVictory \n}) => {\n  const canvasRef = useRef(null);\n  const gameObjectsRef = useRef(null);\n  const requestIdRef = useRef({ id: null, lastTime: 0 });\n  const levelManagerRef = useRef(null);\n  const soundManagerRef = useRef(null);\n\n  const drawHUD = useCallback((ctx) => {\n    if (!ctx || !canvasRef.current) return;\n    \n    ctx.save();\n    \n    // Draw score\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '20px Arial';\n    ctx.fillText(`Score: ${score}`, 20, 30);\n    \n    // Draw lives\n    ctx.fillText(`Lives: ${lives}`, canvasRef.current.width - 100, 30);\n    \n    // Draw level\n    ctx.fillText(`Level: ${currentLevel}`, canvasRef.current.width / 2 - 30, 30);\n    \n    ctx.restore();\n  }, [score, lives, currentLevel]);\n\n  const drawGameObjects = useCallback((ctx) => {\n    const objects = gameObjectsRef.current;\n    if (!objects) return;\n\n    // Draw paddle\n    objects.paddle.draw(ctx);\n    \n    // Draw ball\n    objects.ball.draw(ctx);\n    \n    // Draw bricks\n    objects.bricks.forEach(brick => brick.draw(ctx));\n  }, []);\n\n  const resetBallAndPaddle = useCallback(() => {\n    if (!gameObjectsRef.current || !canvasRef.current) return;\n    \n    const canvas = canvasRef.current;\n    const objects = gameObjectsRef.current;\n    \n    // Reset paddle position and state\n    objects.paddle.x = canvas.width / 2 - objects.paddle.width / 2;\n    objects.paddle.y = canvas.height - 40;\n    objects.paddle.leftPressed = false;\n    objects.paddle.rightPressed = false;\n    \n    // Reset ball position and state\n    objects.ball.x = canvas.width / 2;\n    objects.ball.y = canvas.height - 60;\n    objects.ball.dx = 0;\n    objects.ball.dy = 0;\n    objects.ball.isLaunched = false;\n  }, []);\n\n  const handleBallOut = useCallback(() => {\n    const newLives = lives - 1;\n    setLives(newLives);\n    \n    if (newLives <= 0) {\n      setIsGameOver(true);\n      setIsVictory(false);\n      setIsPaused(false);\n    } else {\n      resetBallAndPaddle();\n    }\n  }, [lives, setLives, setIsGameOver, setIsVictory, setIsPaused, resetBallAndPaddle]);\n\n  const handleKeyDown = useCallback((e) => {\n    const objects = gameObjectsRef.current;\n    if (!objects) return;\n\n    if (e.code === 'Space') {\n      if (isGameOver) {\n        handleRestart();\n      } else {\n        setIsPaused(!isPaused);\n      }\n      return;\n    }\n\n    if (isPaused || isGameOver) return;\n\n    switch (e.code) {\n      case 'ArrowLeft':\n        objects.paddle.moveLeft();\n        break;\n      case 'ArrowRight':\n        objects.paddle.moveRight();\n        break;\n      default:\n        break;\n    }\n  }, [isGameOver, isPaused, setIsPaused, handleRestart]);\n\n  const handleKeyUp = useCallback((e) => {\n    const objects = gameObjectsRef.current;\n    if (!objects) return;\n\n    switch (e.code) {\n      case 'ArrowLeft':\n        objects.paddle.stopLeft();\n        break;\n      case 'ArrowRight':\n        objects.paddle.stopRight();\n        break;\n      default:\n        break;\n    }\n  }, []);\n\n  const handleRestart = useCallback(() => {\n    if (!levelManagerRef.current) return;\n\n    setIsPaused(false);\n    setIsGameOver(false);\n    setIsVictory(false);\n    setScore(0);\n    setLives(3);\n    setCurrentLevel(1);\n    \n    // Reset level manager to ensure fresh state\n    levelManagerRef.current = new LevelManager();\n    resetBallAndPaddle();\n  }, [resetBallAndPaddle, setCurrentLevel, setIsGameOver, setIsVictory, setIsPaused, setLives, setScore]);\n\n  const animate = useCallback((timestamp) => {\n    if (isPaused || isGameOver) return;\n\n    const deltaTime = timestamp - (requestIdRef.current.lastTime || timestamp);\n    requestIdRef.current.lastTime = timestamp;\n\n    const ctx = canvasRef.current?.getContext('2d', { alpha: false });\n    const objects = gameObjectsRef.current;\n\n    if (!ctx || !objects) return;\n\n    // Clear canvas\n    ctx.fillStyle = '#000000';\n    ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n    // Update game objects\n    if (objects.ball.y + objects.ball.radius > canvasRef.current.height) {\n      handleBallOut();\n    } else {\n      objects.paddle.update(deltaTime / 1000);\n      objects.ball.update(deltaTime / 1000);\n\n      // Handle paddle collision\n      if (objects.ball.checkPaddleCollision(objects.paddle)) {\n        objects.ball.bounceOffPaddle(objects.paddle);\n        if (soundManagerRef.current) {\n          soundManagerRef.current.playPaddleHit();\n        }\n      }\n\n      // Only stick to paddle if not launched\n      if (!objects.ball.isLaunched) {\n        objects.ball.stickToPaddle(objects.paddle);\n      }\n\n      // Check brick collisions\n      let remainingBricks = 0;\n      let brickHit = false;\n\n      // Create a new array to store updated bricks\n      const updatedBricks = [];\n\n      for (const brick of objects.bricks) {\n        if (!brick.isDestroyed()) {\n          remainingBricks++;\n          if (!brickHit && objects.ball.checkBrickCollision(brick)) {\n            objects.ball.bounceOffBrick(brick);\n            brickHit = true;\n            if (brick.hit()) {\n              setScore(prev => prev + 100);\n              if (soundManagerRef.current) {\n                soundManagerRef.current.playBrickHit();\n              }\n            }\n          }\n        }\n        updatedBricks.push(brick);\n      }\n\n      // Update the bricks array with the new state\n      objects.bricks = updatedBricks;\n\n      // Check if level is complete\n      if (objects.bricks.length > 0 && remainingBricks === 0) {\n        const nextLevel = currentLevel + 1;\n        if (nextLevel <= levelManagerRef.current.getMaxLevel()) {\n          setCurrentLevel(nextLevel);\n        } else {\n          setIsGameOver(true);\n          setIsVictory(true);\n        }\n      }\n    }\n\n    // Draw game objects\n    drawGameObjects(ctx);\n    drawHUD(ctx);\n\n    // Request next frame\n    requestIdRef.current.id = requestAnimationFrame(animate);\n  }, [drawGameObjects, drawHUD, handleBallOut, currentLevel, isPaused, isGameOver, \n      setCurrentLevel, setIsGameOver, setIsVictory, setScore]);\n\n  // Initialize managers and game state\n  useEffect(() => {\n    try {\n      // First initialize managers\n      levelManagerRef.current = new LevelManager();\n      soundManagerRef.current = new SoundManager();\n\n      // Initialize canvas\n      const canvas = canvasRef.current;\n      if (!canvas) {\n        console.error('Canvas not found');\n        return;\n      }\n\n      canvas.width = 800;\n      canvas.height = 600;\n\n      // Initialize game objects\n      gameObjectsRef.current = {\n        paddle: new Paddle(canvas.width / 2 - 50, canvas.height - 40),\n        ball: new Ball(canvas.width / 2, canvas.height - 60),\n        bricks: []\n      };\n\n      // Load initial level (with error handling)\n      const levelData = levelManagerRef.current.loadLevel(1);\n      if (!levelData) {\n        console.error('Failed to load initial level');\n        return;\n      }\n\n      gameObjectsRef.current.bricks = levelData.bricks || [];\n\n      // Add event listeners\n      window.addEventListener('keydown', handleKeyDown);\n      window.addEventListener('keyup', handleKeyUp);\n\n      // Start animation\n      requestIdRef.current.id = requestAnimationFrame(animate);\n\n      return () => {\n        if (requestIdRef.current.id) {\n          cancelAnimationFrame(requestIdRef.current.id);\n        }\n        window.removeEventListener('keydown', handleKeyDown);\n        window.removeEventListener('keyup', handleKeyUp);\n        if (soundManagerRef.current) {\n          soundManagerRef.current.cleanup();\n        }\n      };\n    } catch (error) {\n      console.error('Error initializing game:', error);\n    }\n  }, [handleKeyDown, handleKeyUp, animate]);\n\n  // Handle level changes\n  useEffect(() => {\n    try {\n      if (!gameObjectsRef.current || !levelManagerRef.current) {\n        console.warn('Game objects or level manager not initialized');\n        return;\n      }\n      \n      const levelData = levelManagerRef.current.loadLevel(currentLevel);\n      if (!levelData) {\n        console.error('Failed to load level:', currentLevel);\n        return;\n      }\n\n      gameObjectsRef.current.bricks = levelData.bricks || [];\n      resetBallAndPaddle();\n    } catch (error) {\n      console.error('Error loading level:', error);\n    }\n  }, [currentLevel, resetBallAndPaddle]);\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"canvas-wrapper\">\n        <canvas ref={canvasRef} />\n      </div>\n      {isPaused && !isGameOver && <PauseMenu onResume={() => setIsPaused(false)} />}\n      {isGameOver && <GameOver score={score} victory={isVictory} onRestart={handleRestart} />}\n    </div>\n  );\n};\n\nexport default GameCanvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}