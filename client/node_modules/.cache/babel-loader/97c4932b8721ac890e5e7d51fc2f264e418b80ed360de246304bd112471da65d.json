{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noahm\\\\OneDrive\\\\Desktop\\\\Coding\\\\brick_blaster2\\\\client\\\\src\\\\components\\\\Game\\\\GameCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useCallback } from 'react';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport { useGameLoop } from './GameLoop';\nimport LevelManager from './LevelManager';\nimport PauseMenu from '../UI/PauseMenu';\nimport '../../styles/components/GameCanvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameCanvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const gameObjectsRef = useRef(null);\n  const requestIdRef = useRef({\n    id: null,\n    lastTime: null\n  });\n  const levelManagerRef = useRef(new LevelManager());\n  const {\n    isPaused,\n    isGameOver,\n    setScore,\n    score,\n    lives,\n    setLives,\n    currentLevel,\n    setIsPaused,\n    setIsGameOver,\n    setIsVictory,\n    stop,\n    setCurrentLevel\n  } = useGameLoop();\n  const drawHUD = useCallback(ctx => {\n    ctx.save();\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '20px Arial';\n\n    // Draw score\n    ctx.textAlign = 'left';\n    ctx.fillText(`Score: ${score}`, 10, 30);\n\n    // Draw level\n    ctx.textAlign = 'center';\n    ctx.fillText(`Level ${currentLevel}`, canvasRef.current.width / 2, 30);\n\n    // Draw lives\n    ctx.textAlign = 'right';\n    ctx.fillText(`Lives: ${lives}`, canvasRef.current.width - 10, 30);\n    ctx.restore();\n  }, [score, lives, currentLevel]);\n  const resetBallAndPaddle = useCallback(() => {\n    if (!gameObjectsRef.current || !canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const paddleY = canvas.height - 40;\n    const paddleWidth = 100;\n\n    // Reset paddle\n    const paddle = gameObjectsRef.current.paddle;\n    paddle.x = canvas.width / 2 - paddleWidth / 2;\n    paddle.y = paddleY;\n    paddle.dx = 0;\n    paddle.leftPressed = false;\n    paddle.rightPressed = false;\n\n    // Reset ball\n    const ball = gameObjectsRef.current.ball;\n    ball.x = canvas.width / 2;\n    ball.y = paddleY - ball.radius;\n    ball.dx = 0;\n    ball.dy = 0;\n    ball.isLaunched = false;\n  }, []);\n  const handleBallOut = useCallback(objects => {\n    if (!objects.ball.isLaunched) return;\n    setLives(prev => {\n      const newLives = prev - 1;\n      if (newLives <= 0) {\n        setIsGameOver(true);\n        stop();\n      }\n      return newLives;\n    });\n    if (lives > 1) {\n      resetBallAndPaddle();\n    }\n  }, [lives, setLives, setIsGameOver, stop, resetBallAndPaddle]);\n  const resetLevel = useCallback(() => {\n    if (!gameObjectsRef.current) return;\n    const levelData = levelManagerRef.current.loadLevel(currentLevel);\n    gameObjectsRef.current.bricks = levelData.bricks;\n  }, [currentLevel]);\n  const drawGameObjects = useCallback((ctx, objects) => {\n    if (!ctx || !objects) return;\n    ctx.save();\n    objects.bricks.forEach(brick => {\n      if (!brick.isDestroyed()) {\n        brick.draw(ctx);\n      }\n    });\n    objects.ball.draw(ctx);\n    objects.paddle.draw(ctx);\n    ctx.restore();\n  }, []);\n  const gameLoop = useCallback(timestamp => {\n    if (!canvasRef.current || !gameObjectsRef.current) return;\n    const ctx = canvasRef.current.getContext('2d', {\n      alpha: false\n    });\n    const objects = gameObjectsRef.current;\n    if (!requestIdRef.current.lastTime) {\n      requestIdRef.current.lastTime = timestamp;\n      requestIdRef.current.id = requestAnimationFrame(gameLoop);\n      return;\n    }\n    const deltaTime = Math.min((timestamp - requestIdRef.current.lastTime) / 1000, 0.032);\n    requestIdRef.current.lastTime = timestamp;\n\n    // Clear canvas\n    ctx.fillStyle = 'rgb(0, 0, 0)';\n    ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    if (!isPaused && !isGameOver) {\n      // Update paddle\n      objects.paddle.update(deltaTime);\n\n      // Handle paddle collision before updating ball\n      if (objects.ball.checkPaddleCollision(objects.paddle)) {\n        objects.ball.bounceOffPaddle(objects.paddle);\n      }\n\n      // Only stick to paddle if not launched\n      if (!objects.ball.isLaunched) {\n        objects.ball.stickToPaddle(objects.paddle);\n      }\n\n      // Update ball position\n      objects.ball.update(deltaTime);\n\n      // Check for brick collisions\n      let remainingBricks = 0;\n      for (const brick of objects.bricks) {\n        if (!brick.isDestroyed()) {\n          remainingBricks++;\n          if (objects.ball.checkBrickCollision(brick)) {\n            objects.ball.bounceOffBrick(brick);\n            if (brick.hit()) {\n              setScore(prev => prev + 100);\n            }\n            break;\n          }\n        }\n      }\n\n      // Check if ball is out of bounds\n      if (objects.ball.y > canvasRef.current.height) {\n        handleBallOut(objects);\n      }\n\n      // Check if level is complete\n      if (objects.bricks.length > 0 && remainingBricks === 0) {\n        const nextLevel = currentLevel + 1;\n        if (nextLevel <= levelManagerRef.current.getMaxLevel()) {\n          setCurrentLevel(nextLevel);\n          resetLevel();\n          resetBallAndPaddle();\n        } else {\n          setIsGameOver(true);\n          setIsVictory(true);\n          stop();\n        }\n      }\n    }\n\n    // Draw game objects\n    drawGameObjects(ctx, objects);\n    drawHUD(ctx);\n    requestIdRef.current.id = requestAnimationFrame(gameLoop);\n  }, [isPaused, isGameOver, drawGameObjects, drawHUD, handleBallOut, currentLevel, setCurrentLevel, setScore, resetBallAndPaddle, resetLevel, setIsGameOver, setIsVictory, stop]);\n  const handleKeyDown = useCallback(e => {\n    if (isGameOver) return;\n    const objects = gameObjectsRef.current;\n    switch (e.key.toLowerCase()) {\n      case 'a':\n      case 'arrowleft':\n        if (!isPaused) objects.paddle.moveLeft();\n        break;\n      case 'd':\n      case 'arrowright':\n        if (!isPaused) objects.paddle.moveRight();\n        break;\n      case ' ':\n        if (!isPaused && objects.ball) objects.ball.launch();\n        break;\n      case 'escape':\n        setIsPaused(prev => !prev);\n        break;\n      default:\n        break;\n    }\n  }, [isPaused, isGameOver, setIsPaused]);\n  const handleKeyUp = useCallback(e => {\n    if (isGameOver || isPaused) return;\n    const objects = gameObjectsRef.current;\n    switch (e.key.toLowerCase()) {\n      case 'a':\n      case 'arrowleft':\n        objects.paddle.stopLeft();\n        break;\n      case 'd':\n      case 'arrowright':\n        objects.paddle.stopRight();\n        break;\n      default:\n        break;\n    }\n  }, [isPaused, isGameOver]);\n  const handleResume = useCallback(() => {\n    setIsPaused(false);\n  }, [setIsPaused]);\n  const handleRestart = useCallback(() => {\n    setIsPaused(false);\n    resetLevel();\n    resetBallAndPaddle();\n  }, [setIsPaused, resetLevel, resetBallAndPaddle]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    canvas.width = 800;\n    canvas.height = 600;\n\n    // Only initialize game objects if they don't exist\n    if (!gameObjectsRef.current) {\n      const paddleY = canvas.height - 40;\n      const paddleWidth = 100;\n      gameObjectsRef.current = {\n        paddle: new Paddle(canvas.width / 2 - paddleWidth / 2, paddleY),\n        ball: new Ball(canvas.width / 2, paddleY - 10),\n        bricks: []\n      };\n      const levelData = levelManagerRef.current.loadLevel(currentLevel);\n      gameObjectsRef.current.bricks = levelData.bricks;\n    }\n    const animationId = requestAnimationFrame(gameLoop);\n    requestIdRef.current.id = animationId;\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n    return () => {\n      if (requestIdRef.current.id) {\n        cancelAnimationFrame(requestIdRef.current.id);\n      }\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [handleKeyDown, handleKeyUp, currentLevel]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"game-canvas\",\n        width: 800,\n        height: 600,\n        tabIndex: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), isPaused && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pause-overlay\",\n        children: /*#__PURE__*/_jsxDEV(PauseMenu, {\n          onResume: handleResume,\n          onRestart: handleRestart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n};\n_s(GameCanvas, \"9k7Cj9lk+xE5n0BIiOcYhmibiNQ=\", false, function () {\n  return [useGameLoop];\n});\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","useCallback","Ball","Paddle","useGameLoop","LevelManager","PauseMenu","jsxDEV","_jsxDEV","GameCanvas","_s","canvasRef","gameObjectsRef","requestIdRef","id","lastTime","levelManagerRef","isPaused","isGameOver","setScore","score","lives","setLives","currentLevel","setIsPaused","setIsGameOver","setIsVictory","stop","setCurrentLevel","drawHUD","ctx","save","fillStyle","font","textAlign","fillText","current","width","restore","resetBallAndPaddle","canvas","paddleY","height","paddleWidth","paddle","x","y","dx","leftPressed","rightPressed","ball","radius","dy","isLaunched","handleBallOut","objects","prev","newLives","resetLevel","levelData","loadLevel","bricks","drawGameObjects","forEach","brick","isDestroyed","draw","gameLoop","timestamp","getContext","alpha","requestAnimationFrame","deltaTime","Math","min","fillRect","update","checkPaddleCollision","bounceOffPaddle","stickToPaddle","remainingBricks","checkBrickCollision","bounceOffBrick","hit","length","nextLevel","getMaxLevel","handleKeyDown","e","key","toLowerCase","moveLeft","moveRight","launch","handleKeyUp","stopLeft","stopRight","handleResume","handleRestart","animationId","window","addEventListener","cancelAnimationFrame","removeEventListener","className","children","ref","tabIndex","fileName","_jsxFileName","lineNumber","columnNumber","onResume","onRestart","_c","$RefreshReg$"],"sources":["C:/Users/noahm/OneDrive/Desktop/Coding/brick_blaster2/client/src/components/Game/GameCanvas.js"],"sourcesContent":["import React, { useEffect, useRef, useCallback } from 'react';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport { useGameLoop } from './GameLoop';\nimport LevelManager from './LevelManager';\nimport PauseMenu from '../UI/PauseMenu';\nimport '../../styles/components/GameCanvas.css';\n\nconst GameCanvas = () => {\n  const canvasRef = useRef(null);\n  const gameObjectsRef = useRef(null);\n  const requestIdRef = useRef({ id: null, lastTime: null });\n  const levelManagerRef = useRef(new LevelManager());\n\n  const {\n    isPaused,\n    isGameOver,\n    setScore,\n    score,\n    lives,\n    setLives,\n    currentLevel,\n    setIsPaused,\n    setIsGameOver,\n    setIsVictory,\n    stop,\n    setCurrentLevel\n  } = useGameLoop();\n\n  const drawHUD = useCallback((ctx) => {\n    ctx.save();\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '20px Arial';\n    \n    // Draw score\n    ctx.textAlign = 'left';\n    ctx.fillText(`Score: ${score}`, 10, 30);\n    \n    // Draw level\n    ctx.textAlign = 'center';\n    ctx.fillText(`Level ${currentLevel}`, canvasRef.current.width / 2, 30);\n    \n    // Draw lives\n    ctx.textAlign = 'right';\n    ctx.fillText(`Lives: ${lives}`, canvasRef.current.width - 10, 30);\n    ctx.restore();\n  }, [score, lives, currentLevel]);\n\n  const resetBallAndPaddle = useCallback(() => {\n    if (!gameObjectsRef.current || !canvasRef.current) return;\n\n    const canvas = canvasRef.current;\n    const paddleY = canvas.height - 40;\n    const paddleWidth = 100;\n    \n    // Reset paddle\n    const paddle = gameObjectsRef.current.paddle;\n    paddle.x = canvas.width / 2 - paddleWidth / 2;\n    paddle.y = paddleY;\n    paddle.dx = 0;\n    paddle.leftPressed = false;\n    paddle.rightPressed = false;\n    \n    // Reset ball\n    const ball = gameObjectsRef.current.ball;\n    ball.x = canvas.width / 2;\n    ball.y = paddleY - ball.radius;\n    ball.dx = 0;\n    ball.dy = 0;\n    ball.isLaunched = false;\n  }, []);\n\n  const handleBallOut = useCallback((objects) => {\n    if (!objects.ball.isLaunched) return;\n    \n    setLives(prev => {\n      const newLives = prev - 1;\n      if (newLives <= 0) {\n        setIsGameOver(true);\n        stop();\n      }\n      return newLives;\n    });\n    \n    if (lives > 1) {\n      resetBallAndPaddle();\n    }\n  }, [lives, setLives, setIsGameOver, stop, resetBallAndPaddle]);\n\n  const resetLevel = useCallback(() => {\n    if (!gameObjectsRef.current) return;\n    const levelData = levelManagerRef.current.loadLevel(currentLevel);\n    gameObjectsRef.current.bricks = levelData.bricks;\n  }, [currentLevel]);\n\n  const drawGameObjects = useCallback((ctx, objects) => {\n    if (!ctx || !objects) return;\n    \n    ctx.save();\n    objects.bricks.forEach(brick => {\n      if (!brick.isDestroyed()) {\n        brick.draw(ctx);\n      }\n    });\n    objects.ball.draw(ctx);\n    objects.paddle.draw(ctx);\n    ctx.restore();\n  }, []);\n\n  const gameLoop = useCallback((timestamp) => {\n    if (!canvasRef.current || !gameObjectsRef.current) return;\n    \n    const ctx = canvasRef.current.getContext('2d', { alpha: false });\n    const objects = gameObjectsRef.current;\n\n    if (!requestIdRef.current.lastTime) {\n      requestIdRef.current.lastTime = timestamp;\n      requestIdRef.current.id = requestAnimationFrame(gameLoop);\n      return;\n    }\n    \n    const deltaTime = Math.min((timestamp - requestIdRef.current.lastTime) / 1000, 0.032);\n    requestIdRef.current.lastTime = timestamp;\n    \n    // Clear canvas\n    ctx.fillStyle = 'rgb(0, 0, 0)';\n    ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n    if (!isPaused && !isGameOver) {\n      // Update paddle\n      objects.paddle.update(deltaTime);\n      \n      // Handle paddle collision before updating ball\n      if (objects.ball.checkPaddleCollision(objects.paddle)) {\n        objects.ball.bounceOffPaddle(objects.paddle);\n      }\n\n      // Only stick to paddle if not launched\n      if (!objects.ball.isLaunched) {\n        objects.ball.stickToPaddle(objects.paddle);\n      }\n\n      // Update ball position\n      objects.ball.update(deltaTime);\n\n      // Check for brick collisions\n      let remainingBricks = 0;\n      \n      for (const brick of objects.bricks) {\n        if (!brick.isDestroyed()) {\n          remainingBricks++;\n          if (objects.ball.checkBrickCollision(brick)) {\n            objects.ball.bounceOffBrick(brick);\n            if (brick.hit()) {\n              setScore(prev => prev + 100);\n            }\n            break;\n          }\n        }\n      }\n\n      // Check if ball is out of bounds\n      if (objects.ball.y > canvasRef.current.height) {\n        handleBallOut(objects);\n      }\n\n      // Check if level is complete\n      if (objects.bricks.length > 0 && remainingBricks === 0) {\n        const nextLevel = currentLevel + 1;\n        if (nextLevel <= levelManagerRef.current.getMaxLevel()) {\n          setCurrentLevel(nextLevel);\n          resetLevel();\n          resetBallAndPaddle();\n        } else {\n          setIsGameOver(true);\n          setIsVictory(true);\n          stop();\n        }\n      }\n    }\n\n    // Draw game objects\n    drawGameObjects(ctx, objects);\n    drawHUD(ctx);\n\n    requestIdRef.current.id = requestAnimationFrame(gameLoop);\n  }, [isPaused, isGameOver, drawGameObjects, drawHUD, handleBallOut, currentLevel, setCurrentLevel, setScore, resetBallAndPaddle, resetLevel, setIsGameOver, setIsVictory, stop]);\n\n  const handleKeyDown = useCallback((e) => {\n    if (isGameOver) return;\n    \n    const objects = gameObjectsRef.current;\n    switch (e.key.toLowerCase()) {\n      case 'a':\n      case 'arrowleft':\n        if (!isPaused) objects.paddle.moveLeft();\n        break;\n      case 'd':\n      case 'arrowright':\n        if (!isPaused) objects.paddle.moveRight();\n        break;\n      case ' ':\n        if (!isPaused && objects.ball) objects.ball.launch();\n        break;\n      case 'escape':\n        setIsPaused(prev => !prev);\n        break;\n      default:\n        break;\n    }\n  }, [isPaused, isGameOver, setIsPaused]);\n\n  const handleKeyUp = useCallback((e) => {\n    if (isGameOver || isPaused) return;\n    \n    const objects = gameObjectsRef.current;\n    switch (e.key.toLowerCase()) {\n      case 'a':\n      case 'arrowleft':\n        objects.paddle.stopLeft();\n        break;\n      case 'd':\n      case 'arrowright':\n        objects.paddle.stopRight();\n        break;\n      default:\n        break;\n    }\n  }, [isPaused, isGameOver]);\n\n  const handleResume = useCallback(() => {\n    setIsPaused(false);\n  }, [setIsPaused]);\n\n  const handleRestart = useCallback(() => {\n    setIsPaused(false);\n    resetLevel();\n    resetBallAndPaddle();\n  }, [setIsPaused, resetLevel, resetBallAndPaddle]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    canvas.width = 800;\n    canvas.height = 600;\n\n    // Only initialize game objects if they don't exist\n    if (!gameObjectsRef.current) {\n      const paddleY = canvas.height - 40;\n      const paddleWidth = 100;\n      \n      gameObjectsRef.current = {\n        paddle: new Paddle(canvas.width / 2 - paddleWidth / 2, paddleY),\n        ball: new Ball(canvas.width / 2, paddleY - 10),\n        bricks: []\n      };\n\n      const levelData = levelManagerRef.current.loadLevel(currentLevel);\n      gameObjectsRef.current.bricks = levelData.bricks;\n    }\n\n    const animationId = requestAnimationFrame(gameLoop);\n    requestIdRef.current.id = animationId;\n\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n\n    return () => {\n      if (requestIdRef.current.id) {\n        cancelAnimationFrame(requestIdRef.current.id);\n      }\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [handleKeyDown, handleKeyUp, currentLevel]);\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"canvas-wrapper\">\n        <canvas\n          ref={canvasRef}\n          className=\"game-canvas\"\n          width={800}\n          height={600}\n          tabIndex={0}\n        />\n        {isPaused && (\n          <div className=\"pause-overlay\">\n            <PauseMenu\n              onResume={handleResume}\n              onRestart={handleRestart}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default GameCanvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}