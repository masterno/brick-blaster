{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noahm\\\\OneDrive\\\\Desktop\\\\Coding\\\\brick_blaster2\\\\client\\\\src\\\\components\\\\Game\\\\GameCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useCallback } from 'react';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport { useGameLoop } from './GameLoop';\nimport LevelManager from './LevelManager';\nimport PauseMenu from '../UI/PauseMenu';\nimport '../../styles/components/GameCanvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameCanvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const gameObjectsRef = useRef(null);\n  const requestIdRef = useRef({\n    id: null,\n    lastTime: null\n  });\n  const levelManagerRef = useRef(new LevelManager());\n  const {\n    isPaused,\n    isGameOver,\n    setScore,\n    score,\n    lives,\n    setLives,\n    currentLevel,\n    setIsPaused,\n    setIsGameOver,\n    stop,\n    setCurrentLevel\n  } = useGameLoop();\n  const drawHUD = useCallback(ctx => {\n    ctx.save();\n    ctx.font = '16px Arial';\n    ctx.fillStyle = '#00FF00';\n    ctx.textAlign = 'left';\n    ctx.fillText(`Score: ${score}`, 10, 30);\n    ctx.textAlign = 'center';\n    ctx.fillText(`Level: ${currentLevel}`, canvasRef.current.width / 2, 30);\n    ctx.textAlign = 'right';\n    ctx.fillText(`Lives: ${lives}`, canvasRef.current.width - 10, 30);\n    ctx.restore();\n  }, [score, lives, currentLevel]);\n  const handleBallOut = useCallback(objects => {\n    setLives(prev => {\n      const newLives = prev - 1;\n      if (newLives <= 0) {\n        setIsGameOver(true);\n        stop();\n      }\n      return newLives;\n    });\n    if (lives > 1) {\n      objects.ball.reset();\n      objects.paddle.reset();\n    }\n  }, [lives, setLives, setIsGameOver, stop]);\n  const resetLevel = useCallback(() => {\n    if (gameObjectsRef.current) {\n      const levelData = levelManagerRef.current.loadLevel(currentLevel);\n      gameObjectsRef.current.bricks = levelData.bricks;\n      gameObjectsRef.current.ball.reset();\n      gameObjectsRef.current.paddle.reset();\n    }\n  }, [currentLevel]);\n  const handleResume = useCallback(() => {\n    setIsPaused(false);\n  }, [setIsPaused]);\n  const handleRestart = useCallback(() => {\n    setIsPaused(false);\n    resetLevel();\n  }, [setIsPaused, resetLevel]);\n  const gameLoop = useCallback(timestamp => {\n    if (!canvasRef.current) return;\n    const ctx = canvasRef.current.getContext('2d', {\n      alpha: false\n    });\n    if (!requestIdRef.current.lastTime) {\n      requestIdRef.current.lastTime = timestamp;\n      requestIdRef.current.id = requestAnimationFrame(gameLoop);\n      return;\n    }\n    const deltaTime = Math.min((timestamp - requestIdRef.current.lastTime) / 1000, 0.032);\n    requestIdRef.current.lastTime = timestamp;\n    const objects = gameObjectsRef.current;\n\n    // Clear canvas\n    ctx.fillStyle = 'rgb(0, 0, 0)';\n    ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    if (!isPaused && !isGameOver) {\n      // Update paddle\n      objects.paddle.update(deltaTime);\n\n      // Update ball position\n      objects.ball.update(deltaTime);\n\n      // Handle paddle collision\n      if (objects.ball.checkPaddleCollision(objects.paddle)) {\n        objects.ball.bounceOffPaddle(objects.paddle);\n      }\n\n      // Check for brick collisions\n      let allBricksDestroyed = true;\n      for (const brick of objects.bricks) {\n        if (!brick.isDestroyed()) {\n          allBricksDestroyed = false;\n          if (objects.ball.checkBrickCollision(brick)) {\n            objects.ball.bounceOffBrick(brick);\n            brick.hit();\n            setScore(prev => prev + 100);\n          }\n        }\n      }\n\n      // Only stick to paddle if not launched\n      if (!objects.ball.isLaunched) {\n        objects.ball.stickToPaddle(objects.paddle);\n      }\n\n      // Check if level is complete\n      if (allBricksDestroyed) {\n        objects.ball.reset();\n        objects.paddle.reset();\n        setCurrentLevel(prev => prev + 1);\n        const levelData = levelManagerRef.current.loadLevel(currentLevel + 1);\n        gameObjectsRef.current.bricks = levelData.bricks;\n      }\n\n      // Check if ball is out of bounds\n      if (objects.ball.isLaunched && objects.ball.y > canvasRef.current.height) {\n        handleBallOut(objects);\n      }\n    }\n\n    // Draw game objects (always draw even when paused)\n    ctx.save();\n    objects.bricks.forEach(brick => {\n      if (!brick.isDestroyed()) {\n        brick.draw(ctx);\n      }\n    });\n    objects.ball.draw(ctx);\n    objects.paddle.draw(ctx);\n    ctx.restore();\n\n    // Draw HUD (always draw even when paused)\n    drawHUD(ctx);\n    requestIdRef.current.id = requestAnimationFrame(gameLoop);\n  }, [isPaused, isGameOver, handleBallOut, drawHUD, setScore, setCurrentLevel, currentLevel]);\n\n  // Keyboard handlers\n  const handleKeyDown = useCallback(e => {\n    if (isGameOver) return;\n    const objects = gameObjectsRef.current;\n    switch (e.key.toLowerCase()) {\n      case 'a':\n      case 'arrowleft':\n        if (!isPaused) objects.paddle.moveLeft();\n        break;\n      case 'd':\n      case 'arrowright':\n        if (!isPaused) objects.paddle.moveRight();\n        break;\n      case ' ':\n        if (!isPaused && objects.ball) objects.ball.launch();\n        break;\n      case 'escape':\n        setIsPaused(prev => !prev);\n        break;\n      default:\n        break;\n    }\n  }, [isPaused, isGameOver, setIsPaused]);\n  const handleKeyUp = useCallback(e => {\n    if (isGameOver || isPaused) return;\n    const objects = gameObjectsRef.current;\n    switch (e.key.toLowerCase()) {\n      case 'a':\n      case 'arrowleft':\n        objects.paddle.stopLeft();\n        break;\n      case 'd':\n      case 'arrowright':\n        objects.paddle.stopRight();\n        break;\n      default:\n        break;\n    }\n  }, [isPaused, isGameOver]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    canvas.width = 800;\n    canvas.height = 600;\n    const paddleY = canvas.height - 40;\n    gameObjectsRef.current = {\n      paddle: new Paddle(canvas.width / 2 - 50, paddleY),\n      ball: new Ball(canvas.width / 2, paddleY - 10),\n      bricks: []\n    };\n    resetLevel();\n    const animationId = requestAnimationFrame(gameLoop);\n    requestIdRef.current.id = animationId;\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n    return () => {\n      cancelAnimationFrame(animationId);\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [gameLoop, handleKeyDown, handleKeyUp, resetLevel]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"game-canvas\",\n        width: 800,\n        height: 600,\n        tabIndex: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), isPaused && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pause-overlay\",\n        children: /*#__PURE__*/_jsxDEV(PauseMenu, {\n          onResume: handleResume,\n          onRestart: handleRestart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n};\n_s(GameCanvas, \"bLBZFiOLcEkBaXdmiPD32F8VAPo=\", false, function () {\n  return [useGameLoop];\n});\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","useCallback","Ball","Paddle","useGameLoop","LevelManager","PauseMenu","jsxDEV","_jsxDEV","GameCanvas","_s","canvasRef","gameObjectsRef","requestIdRef","id","lastTime","levelManagerRef","isPaused","isGameOver","setScore","score","lives","setLives","currentLevel","setIsPaused","setIsGameOver","stop","setCurrentLevel","drawHUD","ctx","save","font","fillStyle","textAlign","fillText","current","width","restore","handleBallOut","objects","prev","newLives","ball","reset","paddle","resetLevel","levelData","loadLevel","bricks","handleResume","handleRestart","gameLoop","timestamp","getContext","alpha","requestAnimationFrame","deltaTime","Math","min","fillRect","height","update","checkPaddleCollision","bounceOffPaddle","allBricksDestroyed","brick","isDestroyed","checkBrickCollision","bounceOffBrick","hit","isLaunched","stickToPaddle","y","forEach","draw","handleKeyDown","e","key","toLowerCase","moveLeft","moveRight","launch","handleKeyUp","stopLeft","stopRight","canvas","paddleY","animationId","window","addEventListener","cancelAnimationFrame","removeEventListener","className","children","ref","tabIndex","fileName","_jsxFileName","lineNumber","columnNumber","onResume","onRestart","_c","$RefreshReg$"],"sources":["C:/Users/noahm/OneDrive/Desktop/Coding/brick_blaster2/client/src/components/Game/GameCanvas.js"],"sourcesContent":["import React, { useEffect, useRef, useCallback } from 'react';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport { useGameLoop } from './GameLoop';\nimport LevelManager from './LevelManager';\nimport PauseMenu from '../UI/PauseMenu';\nimport '../../styles/components/GameCanvas.css';\n\nconst GameCanvas = () => {\n  const canvasRef = useRef(null);\n  const gameObjectsRef = useRef(null);\n  const requestIdRef = useRef({ id: null, lastTime: null });\n  const levelManagerRef = useRef(new LevelManager());\n\n  const {\n    isPaused,\n    isGameOver,\n    setScore,\n    score,\n    lives,\n    setLives,\n    currentLevel,\n    setIsPaused,\n    setIsGameOver,\n    stop,\n    setCurrentLevel\n  } = useGameLoop();\n\n  const drawHUD = useCallback((ctx) => {\n    ctx.save();\n    ctx.font = '16px Arial';\n    ctx.fillStyle = '#00FF00';\n    ctx.textAlign = 'left';\n    ctx.fillText(`Score: ${score}`, 10, 30);\n    ctx.textAlign = 'center';\n    ctx.fillText(`Level: ${currentLevel}`, canvasRef.current.width / 2, 30);\n    ctx.textAlign = 'right';\n    ctx.fillText(`Lives: ${lives}`, canvasRef.current.width - 10, 30);\n    ctx.restore();\n  }, [score, lives, currentLevel]);\n\n  const handleBallOut = useCallback((objects) => {\n    setLives(prev => {\n      const newLives = prev - 1;\n      if (newLives <= 0) {\n        setIsGameOver(true);\n        stop();\n      }\n      return newLives;\n    });\n    \n    if (lives > 1) {\n      objects.ball.reset();\n      objects.paddle.reset();\n    }\n  }, [lives, setLives, setIsGameOver, stop]);\n\n  const resetLevel = useCallback(() => {\n    if (gameObjectsRef.current) {\n      const levelData = levelManagerRef.current.loadLevel(currentLevel);\n      gameObjectsRef.current.bricks = levelData.bricks;\n      gameObjectsRef.current.ball.reset();\n      gameObjectsRef.current.paddle.reset();\n    }\n  }, [currentLevel]);\n\n  const handleResume = useCallback(() => {\n    setIsPaused(false);\n  }, [setIsPaused]);\n\n  const handleRestart = useCallback(() => {\n    setIsPaused(false);\n    resetLevel();\n  }, [setIsPaused, resetLevel]);\n\n  const gameLoop = useCallback((timestamp) => {\n    if (!canvasRef.current) return;\n    const ctx = canvasRef.current.getContext('2d', { alpha: false });\n\n    if (!requestIdRef.current.lastTime) {\n      requestIdRef.current.lastTime = timestamp;\n      requestIdRef.current.id = requestAnimationFrame(gameLoop);\n      return;\n    }\n    \n    const deltaTime = Math.min((timestamp - requestIdRef.current.lastTime) / 1000, 0.032);\n    requestIdRef.current.lastTime = timestamp;\n\n    const objects = gameObjectsRef.current;\n    \n    // Clear canvas\n    ctx.fillStyle = 'rgb(0, 0, 0)';\n    ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n    if (!isPaused && !isGameOver) {\n      // Update paddle\n      objects.paddle.update(deltaTime);\n      \n      // Update ball position\n      objects.ball.update(deltaTime);\n\n      // Handle paddle collision\n      if (objects.ball.checkPaddleCollision(objects.paddle)) {\n        objects.ball.bounceOffPaddle(objects.paddle);\n      }\n\n      // Check for brick collisions\n      let allBricksDestroyed = true;\n      for (const brick of objects.bricks) {\n        if (!brick.isDestroyed()) {\n          allBricksDestroyed = false;\n          if (objects.ball.checkBrickCollision(brick)) {\n            objects.ball.bounceOffBrick(brick);\n            brick.hit();\n            setScore(prev => prev + 100);\n          }\n        }\n      }\n      \n      // Only stick to paddle if not launched\n      if (!objects.ball.isLaunched) {\n        objects.ball.stickToPaddle(objects.paddle);\n      }\n\n      // Check if level is complete\n      if (allBricksDestroyed) {\n        objects.ball.reset();\n        objects.paddle.reset();\n        setCurrentLevel(prev => prev + 1);\n        const levelData = levelManagerRef.current.loadLevel(currentLevel + 1);\n        gameObjectsRef.current.bricks = levelData.bricks;\n      }\n\n      // Check if ball is out of bounds\n      if (objects.ball.isLaunched && objects.ball.y > canvasRef.current.height) {\n        handleBallOut(objects);\n      }\n    }\n\n    // Draw game objects (always draw even when paused)\n    ctx.save();\n    objects.bricks.forEach(brick => {\n      if (!brick.isDestroyed()) {\n        brick.draw(ctx);\n      }\n    });\n    objects.ball.draw(ctx);\n    objects.paddle.draw(ctx);\n    ctx.restore();\n\n    // Draw HUD (always draw even when paused)\n    drawHUD(ctx);\n\n    requestIdRef.current.id = requestAnimationFrame(gameLoop);\n  }, [isPaused, isGameOver, handleBallOut, drawHUD, setScore, setCurrentLevel, currentLevel]);\n\n  // Keyboard handlers\n  const handleKeyDown = useCallback((e) => {\n    if (isGameOver) return;\n    \n    const objects = gameObjectsRef.current;\n    switch (e.key.toLowerCase()) {\n      case 'a':\n      case 'arrowleft':\n        if (!isPaused) objects.paddle.moveLeft();\n        break;\n      case 'd':\n      case 'arrowright':\n        if (!isPaused) objects.paddle.moveRight();\n        break;\n      case ' ':\n        if (!isPaused && objects.ball) objects.ball.launch();\n        break;\n      case 'escape':\n        setIsPaused(prev => !prev);\n        break;\n      default:\n        break;\n    }\n  }, [isPaused, isGameOver, setIsPaused]);\n\n  const handleKeyUp = useCallback((e) => {\n    if (isGameOver || isPaused) return;\n    \n    const objects = gameObjectsRef.current;\n    switch (e.key.toLowerCase()) {\n      case 'a':\n      case 'arrowleft':\n        objects.paddle.stopLeft();\n        break;\n      case 'd':\n      case 'arrowright':\n        objects.paddle.stopRight();\n        break;\n      default:\n        break;\n    }\n  }, [isPaused, isGameOver]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    canvas.width = 800;\n    canvas.height = 600;\n\n    const paddleY = canvas.height - 40;\n    gameObjectsRef.current = {\n      paddle: new Paddle(canvas.width / 2 - 50, paddleY),\n      ball: new Ball(canvas.width / 2, paddleY - 10),\n      bricks: []\n    };\n\n    resetLevel();\n\n    const animationId = requestAnimationFrame(gameLoop);\n    requestIdRef.current.id = animationId;\n\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n\n    return () => {\n      cancelAnimationFrame(animationId);\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [gameLoop, handleKeyDown, handleKeyUp, resetLevel]);\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"canvas-wrapper\">\n        <canvas\n          ref={canvasRef}\n          className=\"game-canvas\"\n          width={800}\n          height={600}\n          tabIndex={0}\n        />\n        {isPaused && (\n          <div className=\"pause-overlay\">\n            <PauseMenu\n              onResume={handleResume}\n              onRestart={handleRestart}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default GameCanvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}