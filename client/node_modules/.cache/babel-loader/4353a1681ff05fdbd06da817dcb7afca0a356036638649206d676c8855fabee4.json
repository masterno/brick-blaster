{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noahm\\\\OneDrive\\\\Desktop\\\\Coding\\\\brick_blaster2\\\\client\\\\src\\\\components\\\\Game\\\\GameCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport PauseMenu from '../UI/PauseMenu';\nimport GameOver from '../UI/GameOver';\nimport LevelManager from './LevelManager';\nimport '../../styles/components/GameCanvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameCanvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const gameObjectsRef = useRef(null);\n  const requestIdRef = useRef(null);\n  const [score, setScore] = useState(0);\n  const [lives, setLives] = useState(3);\n  const [currentLevel, setCurrentLevel] = useState(1);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [isVictory, setIsVictory] = useState(false);\n\n  // Create levelManager ref to avoid dependency issues\n  const levelManagerRef = useRef(new LevelManager());\n\n  // Memoize the game loop callback to avoid recreating it on every render\n  const gameLoop = useCallback(timestamp => {\n    if (!canvasRef.current) return;\n    const ctx = canvasRef.current.getContext('2d');\n    if (!requestIdRef.current.lastTime) {\n      requestIdRef.current.lastTime = timestamp;\n      requestIdRef.current.id = requestAnimationFrame(gameLoop);\n      return;\n    }\n\n    // Cap deltaTime to prevent jumps but keep it reasonable\n    const deltaTime = Math.min((timestamp - requestIdRef.current.lastTime) / 1000, 0.1);\n    requestIdRef.current.lastTime = timestamp;\n    if (!isPaused && !isGameOver) {\n      const objects = gameObjectsRef.current;\n\n      // Clear canvas\n      ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      ctx.fillStyle = '#000000';\n      ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n      // Update game objects with deltaTime\n      objects.paddle.update(deltaTime);\n      if (!objects.ball.isLaunched) {\n        objects.ball.stickToPaddle(objects.paddle);\n      } else {\n        objects.ball.update(deltaTime);\n      }\n\n      // Draw game objects\n      objects.bricks.forEach(brick => {\n        if (!brick.isDestroyed()) {\n          brick.draw(ctx);\n        }\n      });\n      objects.ball.draw(ctx);\n      objects.paddle.draw(ctx);\n\n      // Handle collisions\n      if (objects.ball.checkPaddleCollision(objects.paddle)) {\n        objects.ball.bounceOffPaddle(objects.paddle);\n      }\n      objects.bricks.forEach(brick => {\n        if (!brick.isDestroyed() && objects.ball.checkBrickCollision(brick)) {\n          objects.ball.bounceOffBrick(brick);\n          if (brick.hit()) {\n            setScore(s => s + 100);\n          }\n        }\n      });\n\n      // Check if ball is out of bounds\n      if (objects.ball.isLaunched && objects.ball.y > canvasRef.current.height) {\n        handleBallOut(objects);\n      }\n    }\n    requestIdRef.current.id = requestAnimationFrame(gameLoop);\n  }, [isPaused, isGameOver, handleBallOut]);\n\n  // Memoize keyboard handlers to avoid recreating them on every render\n  const handleKeyDown = useCallback(e => {\n    var _gameObjectsRef$curre, _gameObjectsRef$curre2, _gameObjectsRef$curre3;\n    if (!isPaused && !isGameOver) {\n      switch (e.key.toLowerCase()) {\n        case 'a':\n        case 'arrowleft':\n          if ((_gameObjectsRef$curre = gameObjectsRef.current) !== null && _gameObjectsRef$curre !== void 0 && _gameObjectsRef$curre.paddle) {\n            gameObjectsRef.current.paddle.moveLeft();\n          }\n          break;\n        case 'd':\n        case 'arrowright':\n          if ((_gameObjectsRef$curre2 = gameObjectsRef.current) !== null && _gameObjectsRef$curre2 !== void 0 && _gameObjectsRef$curre2.paddle) {\n            gameObjectsRef.current.paddle.moveRight();\n          }\n          break;\n        case ' ':\n          if ((_gameObjectsRef$curre3 = gameObjectsRef.current) !== null && _gameObjectsRef$curre3 !== void 0 && _gameObjectsRef$curre3.ball && !gameObjectsRef.current.ball.isLaunched) {\n            gameObjectsRef.current.ball.launch();\n          }\n          break;\n        case 'escape':\n          setIsPaused(prev => !prev);\n          break;\n        default:\n          break;\n      }\n    }\n  }, [isPaused, isGameOver]);\n  const handleKeyUp = useCallback(e => {\n    var _gameObjectsRef$curre4, _gameObjectsRef$curre5;\n    if (!isPaused && !isGameOver) {\n      switch (e.key.toLowerCase()) {\n        case 'a':\n        case 'arrowleft':\n          if ((_gameObjectsRef$curre4 = gameObjectsRef.current) !== null && _gameObjectsRef$curre4 !== void 0 && _gameObjectsRef$curre4.paddle) {\n            gameObjectsRef.current.paddle.stopLeft();\n          }\n          break;\n        case 'd':\n        case 'arrowright':\n          if ((_gameObjectsRef$curre5 = gameObjectsRef.current) !== null && _gameObjectsRef$curre5 !== void 0 && _gameObjectsRef$curre5.paddle) {\n            gameObjectsRef.current.paddle.stopRight();\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }, [isPaused, isGameOver]);\n  const handleBallOut = useCallback(objects => {\n    setLives(l => l - 1);\n    if (lives > 1) {\n      objects.ball.reset();\n    } else {\n      setIsGameOver(true);\n    }\n  }, [lives]);\n\n  // Initialize game objects and setup effect\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Set canvas size\n    canvas.width = 800;\n    canvas.height = 600;\n\n    // Initialize game objects if not already initialized\n    if (!gameObjectsRef.current) {\n      gameObjectsRef.current = {\n        ball: new Ball(canvas.width / 2, canvas.height - 30),\n        paddle: new Paddle(canvas.width / 2 - 50, canvas.height - 20),\n        bricks: levelManagerRef.current.loadLevel(currentLevel).bricks\n      };\n    }\n\n    // Initialize requestIdRef with timing info\n    requestIdRef.current = {\n      id: null,\n      lastTime: 0\n    };\n    canvas.tabIndex = 0;\n    canvas.focus();\n    canvas.addEventListener('keydown', handleKeyDown);\n    canvas.addEventListener('keyup', handleKeyUp);\n\n    // Start game loop\n    requestIdRef.current.id = requestAnimationFrame(gameLoop);\n    return () => {\n      if (requestIdRef.current.id) {\n        cancelAnimationFrame(requestIdRef.current.id);\n      }\n      canvas.removeEventListener('keydown', handleKeyDown);\n      canvas.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [gameLoop, handleKeyDown, handleKeyUp, currentLevel, isPaused, isGameOver]);\n  const handleRestart = () => {\n    if (gameObjectsRef.current) {\n      gameObjectsRef.current.ball.reset();\n      gameObjectsRef.current.paddle.reset();\n      gameObjectsRef.current.bricks = levelManagerRef.current.loadLevel(1).bricks;\n      setScore(0);\n      setLives(3);\n      setCurrentLevel(1);\n      setIsGameOver(false);\n      setIsVictory(false);\n      setIsPaused(false);\n    }\n  };\n  const navigate = useNavigate();\n  const handleMainMenu = () => {\n    if (requestIdRef.current.id) {\n      cancelAnimationFrame(requestIdRef.current.id);\n    }\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"game-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), isPaused && !isGameOver && /*#__PURE__*/_jsxDEV(PauseMenu, {\n      onResume: () => setIsPaused(false),\n      onRestart: handleRestart,\n      onMainMenu: handleMainMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this), isGameOver && /*#__PURE__*/_jsxDEV(GameOver, {\n      score: score,\n      level: currentLevel,\n      isVictory: isVictory,\n      onRestart: handleRestart,\n      onMainMenu: handleMainMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n};\n_s(GameCanvas, \"FIiz3xxYUYmR7sNu90VXYbGO8WQ=\", false, function () {\n  return [useNavigate];\n});\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","useNavigate","Ball","Paddle","PauseMenu","GameOver","LevelManager","jsxDEV","_jsxDEV","GameCanvas","_s","canvasRef","gameObjectsRef","requestIdRef","score","setScore","lives","setLives","currentLevel","setCurrentLevel","isPaused","setIsPaused","isGameOver","setIsGameOver","isVictory","setIsVictory","levelManagerRef","gameLoop","timestamp","current","ctx","getContext","lastTime","id","requestAnimationFrame","deltaTime","Math","min","objects","clearRect","width","height","fillStyle","fillRect","paddle","update","ball","isLaunched","stickToPaddle","bricks","forEach","brick","isDestroyed","draw","checkPaddleCollision","bounceOffPaddle","checkBrickCollision","bounceOffBrick","hit","s","y","handleBallOut","handleKeyDown","e","_gameObjectsRef$curre","_gameObjectsRef$curre2","_gameObjectsRef$curre3","key","toLowerCase","moveLeft","moveRight","launch","prev","handleKeyUp","_gameObjectsRef$curre4","_gameObjectsRef$curre5","stopLeft","stopRight","l","reset","canvas","loadLevel","tabIndex","focus","addEventListener","cancelAnimationFrame","removeEventListener","handleRestart","navigate","handleMainMenu","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onResume","onRestart","onMainMenu","level","_c","$RefreshReg$"],"sources":["C:/Users/noahm/OneDrive/Desktop/Coding/brick_blaster2/client/src/components/Game/GameCanvas.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport PauseMenu from '../UI/PauseMenu';\nimport GameOver from '../UI/GameOver';\nimport LevelManager from './LevelManager';\nimport '../../styles/components/GameCanvas.css';\n\nconst GameCanvas = () => {\n  const canvasRef = useRef(null);\n  const gameObjectsRef = useRef(null);\n  const requestIdRef = useRef(null);\n  const [score, setScore] = useState(0);\n  const [lives, setLives] = useState(3);\n  const [currentLevel, setCurrentLevel] = useState(1);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [isVictory, setIsVictory] = useState(false);\n  \n  // Create levelManager ref to avoid dependency issues\n  const levelManagerRef = useRef(new LevelManager());\n\n  // Memoize the game loop callback to avoid recreating it on every render\n  const gameLoop = useCallback((timestamp) => {\n    if (!canvasRef.current) return;\n    const ctx = canvasRef.current.getContext('2d');\n\n    if (!requestIdRef.current.lastTime) {\n      requestIdRef.current.lastTime = timestamp;\n      requestIdRef.current.id = requestAnimationFrame(gameLoop);\n      return;\n    }\n    \n    // Cap deltaTime to prevent jumps but keep it reasonable\n    const deltaTime = Math.min((timestamp - requestIdRef.current.lastTime) / 1000, 0.1);\n    requestIdRef.current.lastTime = timestamp;\n\n    if (!isPaused && !isGameOver) {\n      const objects = gameObjectsRef.current;\n      \n      // Clear canvas\n      ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      ctx.fillStyle = '#000000';\n      ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n      // Update game objects with deltaTime\n      objects.paddle.update(deltaTime);\n      \n      if (!objects.ball.isLaunched) {\n        objects.ball.stickToPaddle(objects.paddle);\n      } else {\n        objects.ball.update(deltaTime);\n      }\n\n      // Draw game objects\n      objects.bricks.forEach(brick => {\n        if (!brick.isDestroyed()) {\n          brick.draw(ctx);\n        }\n      });\n\n      objects.ball.draw(ctx);\n      objects.paddle.draw(ctx);\n\n      // Handle collisions\n      if (objects.ball.checkPaddleCollision(objects.paddle)) {\n        objects.ball.bounceOffPaddle(objects.paddle);\n      }\n\n      objects.bricks.forEach((brick) => {\n        if (!brick.isDestroyed() && objects.ball.checkBrickCollision(brick)) {\n          objects.ball.bounceOffBrick(brick);\n          if (brick.hit()) {\n            setScore(s => s + 100);\n          }\n        }\n      });\n\n      // Check if ball is out of bounds\n      if (objects.ball.isLaunched && objects.ball.y > canvasRef.current.height) {\n        handleBallOut(objects);\n      }\n    }\n\n    requestIdRef.current.id = requestAnimationFrame(gameLoop);\n  }, [isPaused, isGameOver, handleBallOut]);\n\n  // Memoize keyboard handlers to avoid recreating them on every render\n  const handleKeyDown = useCallback((e) => {\n    if (!isPaused && !isGameOver) {\n      switch (e.key.toLowerCase()) {\n        case 'a':\n        case 'arrowleft':\n          if (gameObjectsRef.current?.paddle) {\n            gameObjectsRef.current.paddle.moveLeft();\n          }\n          break;\n        case 'd':\n        case 'arrowright':\n          if (gameObjectsRef.current?.paddle) {\n            gameObjectsRef.current.paddle.moveRight();\n          }\n          break;\n        case ' ':\n          if (gameObjectsRef.current?.ball && !gameObjectsRef.current.ball.isLaunched) {\n            gameObjectsRef.current.ball.launch();\n          }\n          break;\n        case 'escape':\n          setIsPaused(prev => !prev);\n          break;\n        default:\n          break;\n      }\n    }\n  }, [isPaused, isGameOver]);\n\n  const handleKeyUp = useCallback((e) => {\n    if (!isPaused && !isGameOver) {\n      switch (e.key.toLowerCase()) {\n        case 'a':\n        case 'arrowleft':\n          if (gameObjectsRef.current?.paddle) {\n            gameObjectsRef.current.paddle.stopLeft();\n          }\n          break;\n        case 'd':\n        case 'arrowright':\n          if (gameObjectsRef.current?.paddle) {\n            gameObjectsRef.current.paddle.stopRight();\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }, [isPaused, isGameOver]);\n\n  const handleBallOut = useCallback((objects) => {\n    setLives(l => l - 1);\n    if (lives > 1) {\n      objects.ball.reset();\n    } else {\n      setIsGameOver(true);\n    }\n  }, [lives]);\n\n  // Initialize game objects and setup effect\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Set canvas size\n    canvas.width = 800;\n    canvas.height = 600;\n    \n    // Initialize game objects if not already initialized\n    if (!gameObjectsRef.current) {\n      gameObjectsRef.current = {\n        ball: new Ball(canvas.width / 2, canvas.height - 30),\n        paddle: new Paddle(canvas.width / 2 - 50, canvas.height - 20),\n        bricks: levelManagerRef.current.loadLevel(currentLevel).bricks\n      };\n    }\n\n    // Initialize requestIdRef with timing info\n    requestIdRef.current = {\n      id: null,\n      lastTime: 0\n    };\n\n    canvas.tabIndex = 0;\n    canvas.focus();\n    canvas.addEventListener('keydown', handleKeyDown);\n    canvas.addEventListener('keyup', handleKeyUp);\n\n    // Start game loop\n    requestIdRef.current.id = requestAnimationFrame(gameLoop);\n\n    return () => {\n      if (requestIdRef.current.id) {\n        cancelAnimationFrame(requestIdRef.current.id);\n      }\n      canvas.removeEventListener('keydown', handleKeyDown);\n      canvas.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [gameLoop, handleKeyDown, handleKeyUp, currentLevel, isPaused, isGameOver]);\n\n  const handleRestart = () => {\n    if (gameObjectsRef.current) {\n      gameObjectsRef.current.ball.reset();\n      gameObjectsRef.current.paddle.reset();\n      gameObjectsRef.current.bricks = levelManagerRef.current.loadLevel(1).bricks;\n      setScore(0);\n      setLives(3);\n      setCurrentLevel(1);\n      setIsGameOver(false);\n      setIsVictory(false);\n      setIsPaused(false);\n    }\n  };\n\n  const navigate = useNavigate();\n  const handleMainMenu = () => {\n    if (requestIdRef.current.id) {\n      cancelAnimationFrame(requestIdRef.current.id);\n    }\n    navigate('/');\n  };\n\n  return (\n    <div className=\"game-container\">\n      <canvas\n        ref={canvasRef}\n        className=\"game-canvas\"\n      />\n      {isPaused && !isGameOver && (\n        <PauseMenu\n          onResume={() => setIsPaused(false)}\n          onRestart={handleRestart}\n          onMainMenu={handleMainMenu}\n        />\n      )}\n      {isGameOver && (\n        <GameOver\n          score={score}\n          level={currentLevel}\n          isVictory={isVictory}\n          onRestart={handleRestart}\n          onMainMenu={handleMainMenu}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default GameCanvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}