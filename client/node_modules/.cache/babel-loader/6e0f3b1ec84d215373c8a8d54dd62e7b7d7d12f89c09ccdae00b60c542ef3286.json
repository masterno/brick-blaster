{"ast":null,"code":"class Paddle {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.width = 100;\n    this.height = 15;\n    this.speed = 8;\n    this.dx = 0;\n    this.initialX = x;\n    this.initialY = y;\n    this.leftPressed = false;\n    this.rightPressed = false;\n    this.touchStartX = null;\n    this.mouseX = null;\n    this.isMouseControlled = false;\n\n    // Bind event handlers\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n    this.handleTouchStart = this.handleTouchStart.bind(this);\n    this.handleTouchMove = this.handleTouchMove.bind(this);\n    this.handleTouchEnd = this.handleTouchEnd.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n\n    // Add event listeners\n    document.addEventListener('keydown', this.handleKeyDown);\n    document.addEventListener('keyup', this.handleKeyUp);\n    document.addEventListener('touchstart', this.handleTouchStart);\n    document.addEventListener('touchmove', this.handleTouchMove);\n    document.addEventListener('touchend', this.handleTouchEnd);\n    document.addEventListener('mousemove', this.handleMouseMove);\n    document.addEventListener('mouseenter', this.handleMouseEnter);\n    document.addEventListener('mouseleave', this.handleMouseLeave);\n  }\n  reset() {\n    this.x = this.initialX;\n    this.y = this.initialY;\n    this.dx = 0;\n    this.leftPressed = false;\n    this.rightPressed = false;\n    this.isMouseControlled = false;\n  }\n  handleMouseMove(e) {\n    const canvas = e.target.closest('canvas');\n    if (!canvas) return;\n    const rect = canvas.getBoundingClientRect();\n    const mouseX = e.clientX - rect.left;\n    const paddleCenter = this.width / 2;\n\n    // Keep paddle within canvas bounds\n    if (mouseX >= paddleCenter && mouseX <= canvas.width - paddleCenter) {\n      this.x = mouseX - paddleCenter;\n      this.isMouseControlled = true;\n    }\n  }\n  handleMouseEnter(e) {\n    this.isMouseControlled = true;\n  }\n  handleMouseLeave(e) {\n    this.isMouseControlled = false;\n  }\n  handleKeyDown(e) {\n    if (e.key === 'ArrowLeft' || e.key.toLowerCase() === 'a') {\n      e.preventDefault();\n      this.leftPressed = true;\n      this.isMouseControlled = false;\n    }\n    if (e.key === 'ArrowRight' || e.key.toLowerCase() === 'd') {\n      e.preventDefault();\n      this.rightPressed = true;\n      this.isMouseControlled = false;\n    }\n  }\n  handleKeyUp(e) {\n    if (e.key === 'ArrowLeft' || e.key.toLowerCase() === 'a') {\n      this.leftPressed = false;\n    }\n    if (e.key === 'ArrowRight' || e.key.toLowerCase() === 'd') {\n      this.rightPressed = false;\n    }\n  }\n  handleTouchStart(e) {\n    e.preventDefault();\n    const touch = e.touches[0];\n    this.touchStartX = touch.clientX;\n    this.isMouseControlled = false;\n  }\n  handleTouchMove(e) {\n    e.preventDefault();\n    if (!this.touchStartX) return;\n    const touch = e.touches[0];\n    const deltaX = touch.clientX - this.touchStartX;\n\n    // Update paddle position based on touch movement\n    this.x = Math.max(0, Math.min(800 - this.width, this.x + deltaX));\n\n    // Update touch start position for next move\n    this.touchStartX = touch.clientX;\n  }\n  handleTouchEnd(e) {\n    e.preventDefault();\n    this.touchStartX = null;\n  }\n  update() {\n    if (!this.isMouseControlled) {\n      // Update paddle position based on keyboard input\n      if (this.leftPressed) {\n        this.dx = -this.speed;\n      } else if (this.rightPressed) {\n        this.dx = this.speed;\n      } else {\n        this.dx = 0;\n      }\n\n      // Update position\n      this.x += this.dx;\n\n      // Keep paddle within canvas bounds\n      if (this.x < 0) {\n        this.x = 0;\n      } else if (this.x + this.width > 800) {\n        this.x = 800 - this.width;\n      }\n    }\n  }\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.rect(this.x, this.y, this.width, this.height);\n    ctx.fillStyle = '#00FF00';\n    ctx.fill();\n    ctx.closePath();\n  }\n  cleanup() {\n    // Remove event listeners\n    document.removeEventListener('keydown', this.handleKeyDown);\n    document.removeEventListener('keyup', this.handleKeyUp);\n    document.removeEventListener('touchstart', this.handleTouchStart);\n    document.removeEventListener('touchmove', this.handleTouchMove);\n    document.removeEventListener('touchend', this.handleTouchEnd);\n    document.removeEventListener('mousemove', this.handleMouseMove);\n    document.removeEventListener('mouseenter', this.handleMouseEnter);\n    document.removeEventListener('mouseleave', this.handleMouseLeave);\n  }\n}\nexport default Paddle;","map":{"version":3,"names":["Paddle","constructor","x","y","width","height","speed","dx","initialX","initialY","leftPressed","rightPressed","touchStartX","mouseX","isMouseControlled","handleKeyDown","bind","handleKeyUp","handleTouchStart","handleTouchMove","handleTouchEnd","handleMouseMove","handleMouseEnter","handleMouseLeave","document","addEventListener","reset","e","canvas","target","closest","rect","getBoundingClientRect","clientX","left","paddleCenter","key","toLowerCase","preventDefault","touch","touches","deltaX","Math","max","min","update","draw","ctx","beginPath","fillStyle","fill","closePath","cleanup","removeEventListener"],"sources":["C:/Users/noahm/OneDrive/Desktop/Coding/brick_blaster2/client/src/components/Game/entities/Paddle.js"],"sourcesContent":["class Paddle {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.width = 100;\n    this.height = 15;\n    this.speed = 8;\n    this.dx = 0;\n    this.initialX = x;\n    this.initialY = y;\n    this.leftPressed = false;\n    this.rightPressed = false;\n    this.touchStartX = null;\n    this.mouseX = null;\n    this.isMouseControlled = false;\n\n    // Bind event handlers\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n    this.handleTouchStart = this.handleTouchStart.bind(this);\n    this.handleTouchMove = this.handleTouchMove.bind(this);\n    this.handleTouchEnd = this.handleTouchEnd.bind(this);\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n\n    // Add event listeners\n    document.addEventListener('keydown', this.handleKeyDown);\n    document.addEventListener('keyup', this.handleKeyUp);\n    document.addEventListener('touchstart', this.handleTouchStart);\n    document.addEventListener('touchmove', this.handleTouchMove);\n    document.addEventListener('touchend', this.handleTouchEnd);\n    document.addEventListener('mousemove', this.handleMouseMove);\n    document.addEventListener('mouseenter', this.handleMouseEnter);\n    document.addEventListener('mouseleave', this.handleMouseLeave);\n  }\n\n  reset() {\n    this.x = this.initialX;\n    this.y = this.initialY;\n    this.dx = 0;\n    this.leftPressed = false;\n    this.rightPressed = false;\n    this.isMouseControlled = false;\n  }\n\n  handleMouseMove(e) {\n    const canvas = e.target.closest('canvas');\n    if (!canvas) return;\n    \n    const rect = canvas.getBoundingClientRect();\n    const mouseX = e.clientX - rect.left;\n    const paddleCenter = this.width / 2;\n    \n    // Keep paddle within canvas bounds\n    if (mouseX >= paddleCenter && mouseX <= canvas.width - paddleCenter) {\n      this.x = mouseX - paddleCenter;\n      this.isMouseControlled = true;\n    }\n  }\n\n  handleMouseEnter(e) {\n    this.isMouseControlled = true;\n  }\n\n  handleMouseLeave(e) {\n    this.isMouseControlled = false;\n  }\n\n  handleKeyDown(e) {\n    if (e.key === 'ArrowLeft' || e.key.toLowerCase() === 'a') {\n      e.preventDefault();\n      this.leftPressed = true;\n      this.isMouseControlled = false;\n    }\n    if (e.key === 'ArrowRight' || e.key.toLowerCase() === 'd') {\n      e.preventDefault();\n      this.rightPressed = true;\n      this.isMouseControlled = false;\n    }\n  }\n\n  handleKeyUp(e) {\n    if (e.key === 'ArrowLeft' || e.key.toLowerCase() === 'a') {\n      this.leftPressed = false;\n    }\n    if (e.key === 'ArrowRight' || e.key.toLowerCase() === 'd') {\n      this.rightPressed = false;\n    }\n  }\n\n  handleTouchStart(e) {\n    e.preventDefault();\n    const touch = e.touches[0];\n    this.touchStartX = touch.clientX;\n    this.isMouseControlled = false;\n  }\n\n  handleTouchMove(e) {\n    e.preventDefault();\n    if (!this.touchStartX) return;\n\n    const touch = e.touches[0];\n    const deltaX = touch.clientX - this.touchStartX;\n    \n    // Update paddle position based on touch movement\n    this.x = Math.max(0, Math.min(800 - this.width, this.x + deltaX));\n    \n    // Update touch start position for next move\n    this.touchStartX = touch.clientX;\n  }\n\n  handleTouchEnd(e) {\n    e.preventDefault();\n    this.touchStartX = null;\n  }\n\n  update() {\n    if (!this.isMouseControlled) {\n      // Update paddle position based on keyboard input\n      if (this.leftPressed) {\n        this.dx = -this.speed;\n      } else if (this.rightPressed) {\n        this.dx = this.speed;\n      } else {\n        this.dx = 0;\n      }\n\n      // Update position\n      this.x += this.dx;\n\n      // Keep paddle within canvas bounds\n      if (this.x < 0) {\n        this.x = 0;\n      } else if (this.x + this.width > 800) {\n        this.x = 800 - this.width;\n      }\n    }\n  }\n\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.rect(this.x, this.y, this.width, this.height);\n    ctx.fillStyle = '#00FF00';\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  cleanup() {\n    // Remove event listeners\n    document.removeEventListener('keydown', this.handleKeyDown);\n    document.removeEventListener('keyup', this.handleKeyUp);\n    document.removeEventListener('touchstart', this.handleTouchStart);\n    document.removeEventListener('touchmove', this.handleTouchMove);\n    document.removeEventListener('touchend', this.handleTouchEnd);\n    document.removeEventListener('mousemove', this.handleMouseMove);\n    document.removeEventListener('mouseenter', this.handleMouseEnter);\n    document.removeEventListener('mouseleave', this.handleMouseLeave);\n  }\n}\n\nexport default Paddle;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}