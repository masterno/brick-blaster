{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noahm\\\\OneDrive\\\\Desktop\\\\Coding\\\\brick_blaster2\\\\client\\\\src\\\\components\\\\Game\\\\GameCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport PauseMenu from '../UI/PauseMenu';\nimport GameOver from '../UI/GameOver';\nimport LevelManager from './LevelManager';\nimport '../../styles/components/GameCanvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameCanvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [gameObjects, setGameObjects] = useState(null);\n  const [isPaused, setIsPaused] = useState(false);\n  const navigate = useNavigate();\n  const levelManager = new LevelManager();\n\n  // Game state\n  const [score, setScore] = useState(0);\n  const [lives, setLives] = useState(3);\n  const [currentLevel, setCurrentLevel] = useState(1);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [isVictory, setIsVictory] = useState(false);\n  const [animationFrameId, setAnimationFrameId] = useState(null);\n\n  // Initialize game objects and start game loop\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Set canvas size\n    canvas.width = 800;\n    canvas.height = 600;\n    const ctx = canvas.getContext('2d');\n\n    // Initialize game objects\n    const objects = {\n      ball: new Ball(canvas.width / 2, canvas.height - 30),\n      paddle: new Paddle(canvas.width / 2, canvas.height - 20),\n      bricks: levelManager.loadLevel(currentLevel).bricks\n    };\n    setGameObjects(objects);\n\n    // Game loop function\n    const gameLoop = () => {\n      if (!isPaused && !isGameOver) {\n        // Clear canvas\n        ctx.fillStyle = '#000000';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        // Update and draw game objects\n        objects.ball.update();\n        objects.paddle.update();\n\n        // Draw objects\n        objects.bricks.forEach(brick => brick.draw(ctx));\n        objects.ball.draw(ctx);\n        objects.paddle.draw(ctx);\n\n        // Draw HUD\n        ctx.font = '16px Courier New';\n        ctx.fillStyle = '#00FF00';\n\n        // Score on the left\n        ctx.textAlign = 'left';\n        ctx.fillText(`Score: ${score}`, 10, 40);\n\n        // Level in the center\n        ctx.textAlign = 'center';\n        ctx.fillText(`Level: ${currentLevel}`, canvas.width / 2, 40);\n\n        // Lives on the right\n        ctx.textAlign = 'right';\n        ctx.fillText(`Lives: ${lives}`, canvas.width - 10, 40);\n\n        // Request next frame\n        const id = requestAnimationFrame(gameLoop);\n        setAnimationFrameId(id);\n      }\n    };\n\n    // Start game loop\n    gameLoop();\n\n    // Add pause event listener\n    const handlePause = e => {\n      if (e.key === 'Escape') {\n        setIsPaused(prev => !prev);\n      }\n    };\n    document.addEventListener('keydown', handlePause);\n\n    // Cleanup\n    return () => {\n      if (animationFrameId) {\n        cancelAnimationFrame(animationFrameId);\n      }\n      if (objects.paddle) {\n        objects.paddle.cleanup();\n      }\n      document.removeEventListener('keydown', handlePause);\n    };\n  }, [currentLevel, score, lives, isPaused, isGameOver, animationFrameId]);\n  const handleRestart = () => {\n    if (gameObjects) {\n      setScore(0);\n      setLives(3);\n      setCurrentLevel(1);\n      setIsGameOver(false);\n      setIsVictory(false);\n      setIsPaused(false);\n      gameObjects.ball.reset();\n      gameObjects.paddle.reset();\n      gameObjects.bricks = levelManager.loadLevel(1).bricks;\n    }\n  };\n  const handleResume = () => {\n    setIsPaused(false);\n  };\n  const handleMainMenu = () => {\n    if (animationFrameId) {\n      cancelAnimationFrame(animationFrameId);\n    }\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"game-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), isPaused && !isGameOver && /*#__PURE__*/_jsxDEV(PauseMenu, {\n      onResume: handleResume,\n      onRestart: handleRestart,\n      onMainMenu: handleMainMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), isGameOver && /*#__PURE__*/_jsxDEV(GameOver, {\n      score: score,\n      level: currentLevel,\n      onRestart: handleRestart,\n      onMainMenu: handleMainMenu,\n      isVictory: isVictory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(GameCanvas, \"ArCbB8yZq5uqPsqfguPVKwq4wGM=\", false, function () {\n  return [useNavigate];\n});\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","Ball","Paddle","PauseMenu","GameOver","LevelManager","jsxDEV","_jsxDEV","GameCanvas","_s","canvasRef","gameObjects","setGameObjects","isPaused","setIsPaused","navigate","levelManager","score","setScore","lives","setLives","currentLevel","setCurrentLevel","isGameOver","setIsGameOver","isVictory","setIsVictory","animationFrameId","setAnimationFrameId","canvas","current","width","height","ctx","getContext","objects","ball","paddle","bricks","loadLevel","gameLoop","fillStyle","fillRect","update","forEach","brick","draw","font","textAlign","fillText","id","requestAnimationFrame","handlePause","e","key","prev","document","addEventListener","cancelAnimationFrame","cleanup","removeEventListener","handleRestart","reset","handleResume","handleMainMenu","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onResume","onRestart","onMainMenu","level","_c","$RefreshReg$"],"sources":["C:/Users/noahm/OneDrive/Desktop/Coding/brick_blaster2/client/src/components/Game/GameCanvas.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport PauseMenu from '../UI/PauseMenu';\nimport GameOver from '../UI/GameOver';\nimport LevelManager from './LevelManager';\nimport '../../styles/components/GameCanvas.css';\n\nconst GameCanvas = () => {\n  const canvasRef = useRef(null);\n  const [gameObjects, setGameObjects] = useState(null);\n  const [isPaused, setIsPaused] = useState(false);\n  const navigate = useNavigate();\n  const levelManager = new LevelManager();\n  \n  // Game state\n  const [score, setScore] = useState(0);\n  const [lives, setLives] = useState(3);\n  const [currentLevel, setCurrentLevel] = useState(1);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [isVictory, setIsVictory] = useState(false);\n  const [animationFrameId, setAnimationFrameId] = useState(null);\n\n  // Initialize game objects and start game loop\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Set canvas size\n    canvas.width = 800;\n    canvas.height = 600;\n    const ctx = canvas.getContext('2d');\n    \n    // Initialize game objects\n    const objects = {\n      ball: new Ball(canvas.width / 2, canvas.height - 30),\n      paddle: new Paddle(canvas.width / 2, canvas.height - 20),\n      bricks: levelManager.loadLevel(currentLevel).bricks\n    };\n    setGameObjects(objects);\n\n    // Game loop function\n    const gameLoop = () => {\n      if (!isPaused && !isGameOver) {\n        // Clear canvas\n        ctx.fillStyle = '#000000';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        // Update and draw game objects\n        objects.ball.update();\n        objects.paddle.update();\n\n        // Draw objects\n        objects.bricks.forEach(brick => brick.draw(ctx));\n        objects.ball.draw(ctx);\n        objects.paddle.draw(ctx);\n\n        // Draw HUD\n        ctx.font = '16px Courier New';\n        ctx.fillStyle = '#00FF00';\n        \n        // Score on the left\n        ctx.textAlign = 'left';\n        ctx.fillText(`Score: ${score}`, 10, 40);\n        \n        // Level in the center\n        ctx.textAlign = 'center';\n        ctx.fillText(`Level: ${currentLevel}`, canvas.width / 2, 40);\n        \n        // Lives on the right\n        ctx.textAlign = 'right';\n        ctx.fillText(`Lives: ${lives}`, canvas.width - 10, 40);\n\n        // Request next frame\n        const id = requestAnimationFrame(gameLoop);\n        setAnimationFrameId(id);\n      }\n    };\n\n    // Start game loop\n    gameLoop();\n\n    // Add pause event listener\n    const handlePause = (e) => {\n      if (e.key === 'Escape') {\n        setIsPaused(prev => !prev);\n      }\n    };\n\n    document.addEventListener('keydown', handlePause);\n\n    // Cleanup\n    return () => {\n      if (animationFrameId) {\n        cancelAnimationFrame(animationFrameId);\n      }\n      if (objects.paddle) {\n        objects.paddle.cleanup();\n      }\n      document.removeEventListener('keydown', handlePause);\n    };\n  }, [currentLevel, score, lives, isPaused, isGameOver, animationFrameId]);\n\n  const handleRestart = () => {\n    if (gameObjects) {\n      setScore(0);\n      setLives(3);\n      setCurrentLevel(1);\n      setIsGameOver(false);\n      setIsVictory(false);\n      setIsPaused(false);\n      \n      gameObjects.ball.reset();\n      gameObjects.paddle.reset();\n      gameObjects.bricks = levelManager.loadLevel(1).bricks;\n    }\n  };\n\n  const handleResume = () => {\n    setIsPaused(false);\n  };\n\n  const handleMainMenu = () => {\n    if (animationFrameId) {\n      cancelAnimationFrame(animationFrameId);\n    }\n    navigate('/');\n  };\n\n  return (\n    <div className=\"game-container\">\n      <canvas\n        ref={canvasRef}\n        className=\"game-canvas\"\n      />\n      \n      {isPaused && !isGameOver && (\n        <PauseMenu\n          onResume={handleResume}\n          onRestart={handleRestart}\n          onMainMenu={handleMainMenu}\n        />\n      )}\n      \n      {isGameOver && (\n        <GameOver\n          score={score}\n          level={currentLevel}\n          onRestart={handleRestart}\n          onMainMenu={handleMainMenu}\n          isVictory={isVictory}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default GameCanvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}