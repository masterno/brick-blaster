{"ast":null,"code":"class Ball {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.radius = 8;\n    this.baseSpeed = 600; // Increased for 60 FPS\n    this.speed = this.baseSpeed;\n    this.dx = 0;\n    this.dy = 0;\n    this.isLaunched = false;\n    this.canvasWidth = 800;\n    this.canvasHeight = 600;\n  }\n  setSpeed(multiplier) {\n    this.speed = this.baseSpeed * multiplier;\n    if (this.isLaunched) {\n      const currentAngle = Math.atan2(this.dy, this.dx);\n      this.dx = this.speed * Math.cos(currentAngle);\n      this.dy = this.speed * Math.sin(currentAngle);\n    }\n  }\n  launch() {\n    if (!this.isLaunched) {\n      this.isLaunched = true;\n      const angle = -Math.PI / 3; // -60 degrees\n      this.dx = this.speed * Math.cos(angle);\n      this.dy = this.speed * Math.sin(angle);\n    }\n  }\n  update(deltaTime) {\n    if (this.isLaunched) {\n      this.x += this.dx * deltaTime;\n      this.y += this.dy * deltaTime;\n\n      // Bounce off walls\n      if (this.x - this.radius <= 0) {\n        this.x = this.radius;\n        this.dx = Math.abs(this.dx);\n      } else if (this.x + this.radius >= this.canvasWidth) {\n        this.x = this.canvasWidth - this.radius;\n        this.dx = -Math.abs(this.dx);\n      }\n      if (this.y - this.radius <= 0) {\n        this.y = this.radius;\n        this.dy = Math.abs(this.dy);\n      }\n    }\n  }\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.arc(Math.round(this.x), Math.round(this.y), this.radius, 0, Math.PI * 2);\n    ctx.fillStyle = '#00FF00';\n    ctx.fill();\n    ctx.closePath();\n  }\n  reset() {\n    this.isLaunched = false;\n    this.dx = 0;\n    this.dy = 0;\n  }\n  stickToPaddle(paddle) {\n    this.x = paddle.x + paddle.width / 2;\n    this.y = paddle.y - this.radius;\n  }\n  checkPaddleCollision(paddle) {\n    if (!this.isLaunched) return false;\n    return this.x + this.radius > paddle.x && this.x - this.radius < paddle.x + paddle.width && this.y + this.radius > paddle.y && this.y - this.radius < paddle.y + paddle.height;\n  }\n  bounceOffPaddle(paddle) {\n    // Calculate hit position relative to paddle center (-1 to 1)\n    const hitX = (this.x - (paddle.x + paddle.width / 2)) / (paddle.width / 2);\n\n    // Calculate bounce angle (-60 to 60 degrees)\n    const maxAngle = Math.PI / 3; // 60 degrees\n    const angle = hitX * maxAngle;\n\n    // Set new velocity maintaining speed\n    this.dy = -Math.abs(this.speed * Math.cos(angle));\n    this.dx = this.speed * Math.sin(angle);\n\n    // Ensure ball is above paddle\n    this.y = paddle.y - this.radius;\n  }\n  checkBrickCollision(brick) {\n    if (!this.isLaunched || brick.isDestroyed()) return false;\n    return this.x + this.radius > brick.x && this.x - this.radius < brick.x + brick.width && this.y + this.radius > brick.y && this.y - this.radius < brick.y + brick.height;\n  }\n  bounceOffBrick(brick) {\n    // Calculate collision point relative to brick center\n    const relX = this.x - (brick.x + brick.width / 2);\n    const relY = this.y - (brick.y + brick.height / 2);\n\n    // Determine if collision is more horizontal or vertical\n    if (Math.abs(relX) * brick.height > Math.abs(relY) * brick.width) {\n      // Horizontal collision\n      this.dx = -this.dx;\n    } else {\n      // Vertical collision\n      this.dy = -this.dy;\n    }\n  }\n}\nexport default Ball;","map":{"version":3,"names":["Ball","constructor","x","y","radius","baseSpeed","speed","dx","dy","isLaunched","canvasWidth","canvasHeight","setSpeed","multiplier","currentAngle","Math","atan2","cos","sin","launch","angle","PI","update","deltaTime","abs","draw","ctx","beginPath","arc","round","fillStyle","fill","closePath","reset","stickToPaddle","paddle","width","checkPaddleCollision","height","bounceOffPaddle","hitX","maxAngle","checkBrickCollision","brick","isDestroyed","bounceOffBrick","relX","relY"],"sources":["C:/Users/noahm/OneDrive/Desktop/Coding/brick_blaster2/client/src/components/Game/entities/Ball.js"],"sourcesContent":["class Ball {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.radius = 8;\n    this.baseSpeed = 600; // Increased for 60 FPS\n    this.speed = this.baseSpeed;\n    this.dx = 0;\n    this.dy = 0;\n    this.isLaunched = false;\n    this.canvasWidth = 800;\n    this.canvasHeight = 600;\n  }\n\n  setSpeed(multiplier) {\n    this.speed = this.baseSpeed * multiplier;\n    if (this.isLaunched) {\n      const currentAngle = Math.atan2(this.dy, this.dx);\n      this.dx = this.speed * Math.cos(currentAngle);\n      this.dy = this.speed * Math.sin(currentAngle);\n    }\n  }\n\n  launch() {\n    if (!this.isLaunched) {\n      this.isLaunched = true;\n      const angle = -Math.PI / 3; // -60 degrees\n      this.dx = this.speed * Math.cos(angle);\n      this.dy = this.speed * Math.sin(angle);\n    }\n  }\n\n  update(deltaTime) {\n    if (this.isLaunched) {\n      this.x += this.dx * deltaTime;\n      this.y += this.dy * deltaTime;\n\n      // Bounce off walls\n      if (this.x - this.radius <= 0) {\n        this.x = this.radius;\n        this.dx = Math.abs(this.dx);\n      } else if (this.x + this.radius >= this.canvasWidth) {\n        this.x = this.canvasWidth - this.radius;\n        this.dx = -Math.abs(this.dx);\n      }\n\n      if (this.y - this.radius <= 0) {\n        this.y = this.radius;\n        this.dy = Math.abs(this.dy);\n      }\n    }\n  }\n\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.arc(Math.round(this.x), Math.round(this.y), this.radius, 0, Math.PI * 2);\n    ctx.fillStyle = '#00FF00';\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  reset() {\n    this.isLaunched = false;\n    this.dx = 0;\n    this.dy = 0;\n  }\n\n  stickToPaddle(paddle) {\n    this.x = paddle.x + paddle.width / 2;\n    this.y = paddle.y - this.radius;\n  }\n\n  checkPaddleCollision(paddle) {\n    if (!this.isLaunched) return false;\n\n    return (this.x + this.radius > paddle.x &&\n            this.x - this.radius < paddle.x + paddle.width &&\n            this.y + this.radius > paddle.y &&\n            this.y - this.radius < paddle.y + paddle.height);\n  }\n\n  bounceOffPaddle(paddle) {\n    // Calculate hit position relative to paddle center (-1 to 1)\n    const hitX = (this.x - (paddle.x + paddle.width / 2)) / (paddle.width / 2);\n    \n    // Calculate bounce angle (-60 to 60 degrees)\n    const maxAngle = Math.PI / 3; // 60 degrees\n    const angle = hitX * maxAngle;\n    \n    // Set new velocity maintaining speed\n    this.dy = -Math.abs(this.speed * Math.cos(angle));\n    this.dx = this.speed * Math.sin(angle);\n    \n    // Ensure ball is above paddle\n    this.y = paddle.y - this.radius;\n  }\n\n  checkBrickCollision(brick) {\n    if (!this.isLaunched || brick.isDestroyed()) return false;\n\n    return (this.x + this.radius > brick.x &&\n            this.x - this.radius < brick.x + brick.width &&\n            this.y + this.radius > brick.y &&\n            this.y - this.radius < brick.y + brick.height);\n  }\n\n  bounceOffBrick(brick) {\n    // Calculate collision point relative to brick center\n    const relX = this.x - (brick.x + brick.width / 2);\n    const relY = this.y - (brick.y + brick.height / 2);\n\n    // Determine if collision is more horizontal or vertical\n    if (Math.abs(relX) * brick.height > Math.abs(relY) * brick.width) {\n      // Horizontal collision\n      this.dx = -this.dx;\n    } else {\n      // Vertical collision\n      this.dy = -this.dy;\n    }\n  }\n}\n\nexport default Ball;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}