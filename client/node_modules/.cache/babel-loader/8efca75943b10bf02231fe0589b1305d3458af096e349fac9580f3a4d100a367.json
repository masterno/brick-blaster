{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noahm\\\\OneDrive\\\\Desktop\\\\Coding\\\\brick_blaster2\\\\client\\\\src\\\\components\\\\UI\\\\LevelSelector.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport LevelManager from '../Game/LevelManager';\nimport '../../styles/components/LevelSelector.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LevelSelector = () => {\n  _s();\n  const navigate = useNavigate();\n  const levelManager = new LevelManager();\n  const maxLevel = levelManager.getMaxLevel();\n  const levels = Array.from({\n    length: maxLevel\n  }, (_, i) => ({\n    number: i + 1,\n    name: levelManager.levels[i].name\n  }));\n  const handleLevelSelect = level => {\n    navigate('/game', {\n      state: {\n        selectedLevel: level\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"level-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Level\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"level-grid\",\n      children: levels.map(level => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"level-button\",\n        onClick: () => handleLevelSelect(level.number),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"level-number\",\n          children: [\"Level \", level.number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"level-name\",\n          children: level.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, level.number, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(LevelSelector, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = LevelSelector;\nexport default LevelSelector;\nvar _c;\n$RefreshReg$(_c, \"LevelSelector\");","map":{"version":3,"names":["React","useNavigate","LevelManager","jsxDEV","_jsxDEV","LevelSelector","_s","navigate","levelManager","maxLevel","getMaxLevel","levels","Array","from","length","_","i","number","name","handleLevelSelect","level","state","selectedLevel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/noahm/OneDrive/Desktop/Coding/brick_blaster2/client/src/components/UI/LevelSelector.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport LevelManager from '../Game/LevelManager';\nimport '../../styles/components/LevelSelector.css';\n\nconst LevelSelector = () => {\n  const navigate = useNavigate();\n  const levelManager = new LevelManager();\n  const maxLevel = levelManager.getMaxLevel();\n  const levels = Array.from({ length: maxLevel }, (_, i) => ({\n    number: i + 1,\n    name: levelManager.levels[i].name\n  }));\n\n  const handleLevelSelect = (level) => {\n    navigate('/game', { state: { selectedLevel: level } });\n  };\n\n  return (\n    <div className=\"level-selector\">\n      <h2>Select Level</h2>\n      <div className=\"level-grid\">\n        {levels.map((level) => (\n          <button\n            key={level.number}\n            className=\"level-button\"\n            onClick={() => handleLevelSelect(level.number)}\n          >\n            <span className=\"level-number\">Level {level.number}</span>\n            <span className=\"level-name\">{level.name}</span>\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default LevelSelector;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAO,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,YAAY,GAAG,IAAIN,YAAY,CAAC,CAAC;EACvC,MAAMO,QAAQ,GAAGD,YAAY,CAACE,WAAW,CAAC,CAAC;EAC3C,MAAMC,MAAM,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAEL;EAAS,CAAC,EAAE,CAACM,CAAC,EAAEC,CAAC,MAAM;IACzDC,MAAM,EAAED,CAAC,GAAG,CAAC;IACbE,IAAI,EAAEV,YAAY,CAACG,MAAM,CAACK,CAAC,CAAC,CAACE;EAC/B,CAAC,CAAC,CAAC;EAEH,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnCb,QAAQ,CAAC,OAAO,EAAE;MAAEc,KAAK,EAAE;QAAEC,aAAa,EAAEF;MAAM;IAAE,CAAC,CAAC;EACxD,CAAC;EAED,oBACEhB,OAAA;IAAKmB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BpB,OAAA;MAAAoB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBxB,OAAA;MAAKmB,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBb,MAAM,CAACkB,GAAG,CAAET,KAAK,iBAChBhB,OAAA;QAEEmB,SAAS,EAAC,cAAc;QACxBO,OAAO,EAAEA,CAAA,KAAMX,iBAAiB,CAACC,KAAK,CAACH,MAAM,CAAE;QAAAO,QAAA,gBAE/CpB,OAAA;UAAMmB,SAAS,EAAC,cAAc;UAAAC,QAAA,GAAC,QAAM,EAACJ,KAAK,CAACH,MAAM;QAAA;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1DxB,OAAA;UAAMmB,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAEJ,KAAK,CAACF;QAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAL3CR,KAAK,CAACH,MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMX,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CA9BID,aAAa;EAAA,QACAJ,WAAW;AAAA;AAAA8B,EAAA,GADxB1B,aAAa;AAgCnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}