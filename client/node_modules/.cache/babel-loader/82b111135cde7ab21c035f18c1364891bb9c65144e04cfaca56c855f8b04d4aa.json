{"ast":null,"code":"class Paddle {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.width = 100;\n    this.height = 20;\n    this.speed = 400;\n    this.initialX = x;\n    this.initialY = y;\n    this.leftPressed = false;\n    this.rightPressed = false;\n    this.canvasWidth = 800;\n  }\n  reset() {\n    this.x = this.canvasWidth / 2 - this.width / 2;\n    this.leftPressed = false;\n    this.rightPressed = false;\n  }\n  moveLeft() {\n    this.leftPressed = true;\n  }\n  moveRight() {\n    this.rightPressed = true;\n  }\n  stopLeft() {\n    this.leftPressed = false;\n  }\n  stopRight() {\n    this.rightPressed = false;\n  }\n  update(deltaTime) {\n    if (this.leftPressed) {\n      this.x = Math.max(0, this.x - this.speed * deltaTime);\n    }\n    if (this.rightPressed) {\n      this.x = Math.min(this.canvasWidth - this.width, this.x + this.speed * deltaTime);\n    }\n  }\n  draw(ctx) {\n    ctx.fillStyle = '#00FF00';\n    ctx.fillRect(Math.round(this.x), this.y, this.width, this.height);\n  }\n}\nexport default Paddle;","map":{"version":3,"names":["Paddle","constructor","x","y","width","height","speed","initialX","initialY","leftPressed","rightPressed","canvasWidth","reset","moveLeft","moveRight","stopLeft","stopRight","update","deltaTime","Math","max","min","draw","ctx","fillStyle","fillRect","round"],"sources":["C:/Users/noahm/OneDrive/Desktop/Coding/brick_blaster2/client/src/components/Game/entities/Paddle.js"],"sourcesContent":["class Paddle {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.width = 100;\n    this.height = 20;\n    this.speed = 400; \n    this.initialX = x;\n    this.initialY = y;\n    this.leftPressed = false;\n    this.rightPressed = false;\n    this.canvasWidth = 800;\n  }\n\n  reset() {\n    this.x = this.canvasWidth / 2 - this.width / 2;\n    this.leftPressed = false;\n    this.rightPressed = false;\n  }\n\n  moveLeft() {\n    this.leftPressed = true;\n  }\n\n  moveRight() {\n    this.rightPressed = true;\n  }\n\n  stopLeft() {\n    this.leftPressed = false;\n  }\n\n  stopRight() {\n    this.rightPressed = false;\n  }\n\n  update(deltaTime) {\n    if (this.leftPressed) {\n      this.x = Math.max(0, this.x - this.speed * deltaTime);\n    }\n    if (this.rightPressed) {\n      this.x = Math.min(this.canvasWidth - this.width, this.x + this.speed * deltaTime);\n    }\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = '#00FF00';\n    ctx.fillRect(Math.round(this.x), this.y, this.width, this.height);\n  }\n}\n\nexport default Paddle;\n"],"mappings":"AAAA,MAAMA,MAAM,CAAC;EACXC,WAAWA,CAACC,CAAC,EAAEC,CAAC,EAAE;IAChB,IAAI,CAACD,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,KAAK,GAAG,GAAG;IAChB,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,KAAK,GAAG,GAAG;IAChB,IAAI,CAACC,QAAQ,GAAGL,CAAC;IACjB,IAAI,CAACM,QAAQ,GAAGL,CAAC;IACjB,IAAI,CAACM,WAAW,GAAG,KAAK;IACxB,IAAI,CAACC,YAAY,GAAG,KAAK;IACzB,IAAI,CAACC,WAAW,GAAG,GAAG;EACxB;EAEAC,KAAKA,CAAA,EAAG;IACN,IAAI,CAACV,CAAC,GAAG,IAAI,CAACS,WAAW,GAAG,CAAC,GAAG,IAAI,CAACP,KAAK,GAAG,CAAC;IAC9C,IAAI,CAACK,WAAW,GAAG,KAAK;IACxB,IAAI,CAACC,YAAY,GAAG,KAAK;EAC3B;EAEAG,QAAQA,CAAA,EAAG;IACT,IAAI,CAACJ,WAAW,GAAG,IAAI;EACzB;EAEAK,SAASA,CAAA,EAAG;IACV,IAAI,CAACJ,YAAY,GAAG,IAAI;EAC1B;EAEAK,QAAQA,CAAA,EAAG;IACT,IAAI,CAACN,WAAW,GAAG,KAAK;EAC1B;EAEAO,SAASA,CAAA,EAAG;IACV,IAAI,CAACN,YAAY,GAAG,KAAK;EAC3B;EAEAO,MAAMA,CAACC,SAAS,EAAE;IAChB,IAAI,IAAI,CAACT,WAAW,EAAE;MACpB,IAAI,CAACP,CAAC,GAAGiB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAClB,CAAC,GAAG,IAAI,CAACI,KAAK,GAAGY,SAAS,CAAC;IACvD;IACA,IAAI,IAAI,CAACR,YAAY,EAAE;MACrB,IAAI,CAACR,CAAC,GAAGiB,IAAI,CAACE,GAAG,CAAC,IAAI,CAACV,WAAW,GAAG,IAAI,CAACP,KAAK,EAAE,IAAI,CAACF,CAAC,GAAG,IAAI,CAACI,KAAK,GAAGY,SAAS,CAAC;IACnF;EACF;EAEAI,IAAIA,CAACC,GAAG,EAAE;IACRA,GAAG,CAACC,SAAS,GAAG,SAAS;IACzBD,GAAG,CAACE,QAAQ,CAACN,IAAI,CAACO,KAAK,CAAC,IAAI,CAACxB,CAAC,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,KAAK,EAAE,IAAI,CAACC,MAAM,CAAC;EACnE;AACF;AAEA,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}