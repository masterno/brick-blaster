{"ast":null,"code":"class Brick {\n  constructor(x, y, width, height, type = 'standard') {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.type = type;\n    this.broken = false;\n    this.hits = type === 'durable' ? 2 : 1;\n  }\n  hit() {\n    if (this.type === 'unbreakable') return false;\n    this.hits--;\n    if (this.hits <= 0) {\n      this.broken = true;\n      return true;\n    }\n    return false;\n  }\n  checkCollision(ball) {\n    return !this.broken && ball.x + ball.radius > this.x && ball.x - ball.radius < this.x + this.width && ball.y + ball.radius > this.y && ball.y - ball.radius < this.y + this.height;\n  }\n  draw(ctx) {\n    if (this.broken) return;\n    ctx.beginPath();\n    ctx.rect(this.x, this.y, this.width, this.height);\n    switch (this.type) {\n      case 'durable':\n        ctx.fillStyle = this.hits === 2 ? '#FFD700' : '#FFA500';\n        break;\n      case 'explosive':\n        ctx.fillStyle = '#FF4500';\n        break;\n      case 'unbreakable':\n        ctx.fillStyle = '#808080';\n        break;\n      default:\n        ctx.fillStyle = '#FF0000';\n    }\n    ctx.fill();\n    ctx.strokeStyle = '#000000';\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\nclass LevelManager {\n  constructor() {\n    this.levels = this.generateLevels();\n    this.currentLevel = 0;\n  }\n  generateLevels() {\n    return [{\n      bricks: this.createBasicLevel(),\n      speed: 1\n    }, {\n      bricks: this.createAdvancedLevel(),\n      speed: 1.2\n    }, {\n      bricks: this.createExpertLevel(),\n      speed: 1.5\n    }];\n  }\n  createBasicLevel() {\n    const bricks = [];\n    const brickWidth = 80;\n    const brickHeight = 20;\n    const padding = 10;\n    const offsetTop = 30;\n    const offsetLeft = 35;\n    for (let row = 0; row < 3; row++) {\n      for (let col = 0; col < 8; col++) {\n        const x = col * (brickWidth + padding) + offsetLeft;\n        const y = row * (brickHeight + padding) + offsetTop;\n        bricks.push(new Brick(x, y, brickWidth, brickHeight, 'standard'));\n      }\n    }\n    return bricks;\n  }\n  createAdvancedLevel() {\n    const bricks = [];\n    const brickWidth = 80;\n    const brickHeight = 20;\n    const padding = 10;\n    const offsetTop = 30;\n    const offsetLeft = 35;\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 8; col++) {\n        const x = col * (brickWidth + padding) + offsetLeft;\n        const y = row * (brickHeight + padding) + offsetTop;\n        let type = 'standard';\n        if (row === 0) type = 'durable';\n        if (col === 3 || col === 4) type = 'explosive';\n        bricks.push(new Brick(x, y, brickWidth, brickHeight, type));\n      }\n    }\n    return bricks;\n  }\n  createExpertLevel() {\n    const bricks = [];\n    const brickWidth = 80;\n    const brickHeight = 20;\n    const padding = 10;\n    const offsetTop = 30;\n    const offsetLeft = 35;\n    for (let row = 0; row < 5; row++) {\n      for (let col = 0; col < 8; col++) {\n        const x = col * (brickWidth + padding) + offsetLeft;\n        const y = row * (brickHeight + padding) + offsetTop;\n        let type = 'standard';\n        if (row === 0) type = 'unbreakable';\n        if (row === 1) type = 'durable';\n        if ((col === 0 || col === 7) && row > 1) type = 'explosive';\n        bricks.push(new Brick(x, y, brickWidth, brickHeight, type));\n      }\n    }\n    return bricks;\n  }\n  loadLevel(levelNumber) {\n    this.currentLevel = levelNumber - 1;\n    return this.levels[this.currentLevel];\n  }\n  isLevelComplete(bricks) {\n    return bricks.every(brick => brick.broken || brick.type === 'unbreakable');\n  }\n  getMaxLevel() {\n    return this.levels.length;\n  }\n}\nexport { Brick, LevelManager as default };","map":{"version":3,"names":["Brick","constructor","x","y","width","height","type","broken","hits","hit","checkCollision","ball","radius","draw","ctx","beginPath","rect","fillStyle","fill","strokeStyle","stroke","closePath","LevelManager","levels","generateLevels","currentLevel","bricks","createBasicLevel","speed","createAdvancedLevel","createExpertLevel","brickWidth","brickHeight","padding","offsetTop","offsetLeft","row","col","push","loadLevel","levelNumber","isLevelComplete","every","brick","getMaxLevel","length","default"],"sources":["c:/Users/noahm/OneDrive/Desktop/Coding/brick_blaster2/client/src/components/Game/LevelManager.js"],"sourcesContent":["class Brick {\n  constructor(x, y, width, height, type = 'standard') {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.type = type;\n    this.broken = false;\n    this.hits = type === 'durable' ? 2 : 1;\n  }\n\n  hit() {\n    if (this.type === 'unbreakable') return false;\n    \n    this.hits--;\n    if (this.hits <= 0) {\n      this.broken = true;\n      return true;\n    }\n    return false;\n  }\n\n  checkCollision(ball) {\n    return !this.broken && (\n      ball.x + ball.radius > this.x &&\n      ball.x - ball.radius < this.x + this.width &&\n      ball.y + ball.radius > this.y &&\n      ball.y - ball.radius < this.y + this.height\n    );\n  }\n\n  draw(ctx) {\n    if (this.broken) return;\n\n    ctx.beginPath();\n    ctx.rect(this.x, this.y, this.width, this.height);\n    \n    switch (this.type) {\n      case 'durable':\n        ctx.fillStyle = this.hits === 2 ? '#FFD700' : '#FFA500';\n        break;\n      case 'explosive':\n        ctx.fillStyle = '#FF4500';\n        break;\n      case 'unbreakable':\n        ctx.fillStyle = '#808080';\n        break;\n      default:\n        ctx.fillStyle = '#FF0000';\n    }\n    \n    ctx.fill();\n    ctx.strokeStyle = '#000000';\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\n\nclass LevelManager {\n  constructor() {\n    this.levels = this.generateLevels();\n    this.currentLevel = 0;\n  }\n\n  generateLevels() {\n    return [\n      {\n        bricks: this.createBasicLevel(),\n        speed: 1\n      },\n      {\n        bricks: this.createAdvancedLevel(),\n        speed: 1.2\n      },\n      {\n        bricks: this.createExpertLevel(),\n        speed: 1.5\n      }\n    ];\n  }\n\n  createBasicLevel() {\n    const bricks = [];\n    const brickWidth = 80;\n    const brickHeight = 20;\n    const padding = 10;\n    const offsetTop = 30;\n    const offsetLeft = 35;\n\n    for (let row = 0; row < 3; row++) {\n      for (let col = 0; col < 8; col++) {\n        const x = (col * (brickWidth + padding)) + offsetLeft;\n        const y = (row * (brickHeight + padding)) + offsetTop;\n        bricks.push(new Brick(x, y, brickWidth, brickHeight, 'standard'));\n      }\n    }\n\n    return bricks;\n  }\n\n  createAdvancedLevel() {\n    const bricks = [];\n    const brickWidth = 80;\n    const brickHeight = 20;\n    const padding = 10;\n    const offsetTop = 30;\n    const offsetLeft = 35;\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 8; col++) {\n        const x = (col * (brickWidth + padding)) + offsetLeft;\n        const y = (row * (brickHeight + padding)) + offsetTop;\n        \n        let type = 'standard';\n        if (row === 0) type = 'durable';\n        if (col === 3 || col === 4) type = 'explosive';\n        \n        bricks.push(new Brick(x, y, brickWidth, brickHeight, type));\n      }\n    }\n\n    return bricks;\n  }\n\n  createExpertLevel() {\n    const bricks = [];\n    const brickWidth = 80;\n    const brickHeight = 20;\n    const padding = 10;\n    const offsetTop = 30;\n    const offsetLeft = 35;\n\n    for (let row = 0; row < 5; row++) {\n      for (let col = 0; col < 8; col++) {\n        const x = (col * (brickWidth + padding)) + offsetLeft;\n        const y = (row * (brickHeight + padding)) + offsetTop;\n        \n        let type = 'standard';\n        if (row === 0) type = 'unbreakable';\n        if (row === 1) type = 'durable';\n        if ((col === 0 || col === 7) && row > 1) type = 'explosive';\n        \n        bricks.push(new Brick(x, y, brickWidth, brickHeight, type));\n      }\n    }\n\n    return bricks;\n  }\n\n  loadLevel(levelNumber) {\n    this.currentLevel = levelNumber - 1;\n    return this.levels[this.currentLevel];\n  }\n\n  isLevelComplete(bricks) {\n    return bricks.every(brick => \n      brick.broken || brick.type === 'unbreakable'\n    );\n  }\n\n  getMaxLevel() {\n    return this.levels.length;\n  }\n}\n\nexport { Brick, LevelManager as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}