{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noahm\\\\OneDrive\\\\Desktop\\\\Coding\\\\brick_blaster2\\\\client\\\\src\\\\components\\\\Game\\\\GameCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport PauseMenu from '../UI/PauseMenu';\nimport GameOver from '../UI/GameOver';\nimport LevelManager from './LevelManager';\nimport '../../styles/components/GameCanvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameCanvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [gameObjects, setGameObjects] = useState(null);\n  const [score, setScore] = useState(0);\n  const [lives, setLives] = useState(3);\n  const [currentLevel, setCurrentLevel] = useState(1);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [isVictory, setIsVictory] = useState(false);\n  const [animationFrameId, setAnimationFrameId] = useState(null);\n\n  // Create levelManager ref to avoid dependency issues\n  const levelManagerRef = useRef(new LevelManager());\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Set canvas size\n    canvas.width = 800;\n    canvas.height = 600;\n    const ctx = canvas.getContext('2d');\n\n    // Initialize game objects\n    const objects = {\n      ball: new Ball(canvas.width / 2, canvas.height - 30),\n      paddle: new Paddle(canvas.width / 2 - 50, canvas.height - 20),\n      bricks: levelManagerRef.current.loadLevel(currentLevel).bricks\n    };\n    setGameObjects(objects);\n    let lastTime = 0;\n    const targetFPS = 60;\n    const frameInterval = 1000 / targetFPS;\n\n    // Handle spacebar and mouse click for ball launch\n    const handleLaunch = e => {\n      if (!isPaused && !isGameOver && objects.ball && !objects.ball.isLaunched) {\n        if (e.type === 'keydown' && e.code === 'Space' || e.type === 'click') {\n          e.preventDefault();\n          objects.ball.launch();\n        }\n      }\n    };\n    window.addEventListener('keydown', handleLaunch);\n    canvas.addEventListener('click', handleLaunch);\n\n    // Game loop function\n    const gameLoop = timestamp => {\n      if (!lastTime) {\n        lastTime = timestamp;\n      }\n      const deltaTime = Math.min(timestamp - lastTime, 32); // Cap at ~30 FPS minimum\n      lastTime = timestamp;\n      if (!isPaused && !isGameOver) {\n        // Update game objects\n        objects.paddle.update();\n\n        // Make ball stick to paddle if not launched\n        if (!objects.ball.isLaunched) {\n          objects.ball.stickToPaddle(objects.paddle);\n        } else {\n          objects.ball.update();\n        }\n\n        // Check for ball-paddle collision\n        if (objects.ball.checkPaddleCollision(objects.paddle)) {\n          objects.ball.bounceOffPaddle(objects.paddle);\n        }\n\n        // Check for ball-brick collisions\n        objects.bricks.forEach((brick, index) => {\n          if (!brick.isDestroyed() && objects.ball.checkBrickCollision(brick)) {\n            objects.ball.bounceOffBrick();\n            if (brick.hit()) {\n              setScore(prev => prev + 100);\n              if (brick.isExplosive()) {\n                objects.bricks.forEach((nearbyBrick, i) => {\n                  if (i !== index && !nearbyBrick.isDestroyed()) {\n                    const dx = nearbyBrick.x - brick.x;\n                    const dy = nearbyBrick.y - brick.y;\n                    const distance = Math.sqrt(dx * dx + dy * dy);\n                    if (distance < 100) {\n                      nearbyBrick.hit();\n                      setScore(prev => prev + 50);\n                    }\n                  }\n                });\n              }\n            }\n          }\n        });\n\n        // Check if ball is lost\n        if (objects.ball.y + objects.ball.radius > canvas.height) {\n          setLives(prev => prev - 1);\n          if (lives > 1) {\n            objects.ball.reset();\n          } else {\n            setIsGameOver(true);\n          }\n        }\n\n        // Check if level is complete\n        if (objects.bricks.every(brick => brick.isDestroyed() || brick.type === 'unbreakable')) {\n          if (currentLevel < levelManagerRef.current.getMaxLevel()) {\n            setCurrentLevel(prev => prev + 1);\n            objects.ball.reset();\n            objects.paddle.reset();\n            objects.bricks = levelManagerRef.current.loadLevel(currentLevel + 1).bricks;\n          } else {\n            setIsVictory(true);\n            setIsGameOver(true);\n          }\n        }\n\n        // Clear canvas\n        ctx.fillStyle = '#000000';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        // Draw objects\n        objects.bricks.forEach(brick => brick.draw(ctx));\n        objects.ball.draw(ctx);\n        objects.paddle.draw(ctx);\n\n        // Draw HUD\n        ctx.font = '16px Courier New';\n        ctx.fillStyle = '#00FF00';\n\n        // Score on the left\n        ctx.textAlign = 'left';\n        ctx.fillText(`Score: ${score}`, 10, 40);\n\n        // Level in the center\n        ctx.textAlign = 'center';\n        ctx.fillText(`Level: ${currentLevel}`, canvas.width / 2, 40);\n\n        // Lives on the right\n        ctx.textAlign = 'right';\n        ctx.fillText(`Lives: ${lives}`, canvas.width - 10, 40);\n      }\n\n      // Request next frame\n      const id = requestAnimationFrame(gameLoop);\n      setAnimationFrameId(id);\n    };\n\n    // Start game loop\n    gameLoop();\n\n    // Add pause event listener\n    const handlePause = e => {\n      if (e.key === 'Escape') {\n        setIsPaused(prev => !prev);\n      }\n    };\n    window.addEventListener('keydown', handlePause);\n\n    // Cleanup\n    return () => {\n      if (animationFrameId) {\n        cancelAnimationFrame(animationFrameId);\n      }\n      if (objects.paddle) {\n        objects.paddle.cleanup();\n      }\n      window.removeEventListener('keydown', handlePause);\n      window.removeEventListener('keydown', handleLaunch);\n      canvas.removeEventListener('click', handleLaunch);\n    };\n  }, [currentLevel, score, lives, isPaused, isGameOver, animationFrameId]);\n  const handleRestart = () => {\n    if (gameObjects) {\n      setScore(0);\n      setLives(3);\n      setCurrentLevel(1);\n      setIsGameOver(false);\n      setIsVictory(false);\n      setIsPaused(false);\n      gameObjects.ball.reset();\n      gameObjects.paddle.reset();\n      gameObjects.bricks = levelManagerRef.current.loadLevel(1).bricks;\n    }\n  };\n  const handleResume = () => {\n    setIsPaused(false);\n  };\n  const navigate = useNavigate();\n  const handleMainMenu = () => {\n    if (animationFrameId) {\n      cancelAnimationFrame(animationFrameId);\n    }\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"game-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), isPaused && !isGameOver && /*#__PURE__*/_jsxDEV(PauseMenu, {\n      onResume: handleResume,\n      onRestart: handleRestart,\n      onMainMenu: handleMainMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }, this), isGameOver && /*#__PURE__*/_jsxDEV(GameOver, {\n      score: score,\n      level: currentLevel,\n      onRestart: handleRestart,\n      onMainMenu: handleMainMenu,\n      isVictory: isVictory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n_s(GameCanvas, \"YgBMYBtQAGLZ/iD3ksihVmTMi2I=\", false, function () {\n  return [useNavigate];\n});\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","Ball","Paddle","PauseMenu","GameOver","LevelManager","jsxDEV","_jsxDEV","GameCanvas","_s","canvasRef","gameObjects","setGameObjects","score","setScore","lives","setLives","currentLevel","setCurrentLevel","isPaused","setIsPaused","isGameOver","setIsGameOver","isVictory","setIsVictory","animationFrameId","setAnimationFrameId","levelManagerRef","canvas","current","width","height","ctx","getContext","objects","ball","paddle","bricks","loadLevel","lastTime","targetFPS","frameInterval","handleLaunch","e","isLaunched","type","code","preventDefault","launch","window","addEventListener","gameLoop","timestamp","deltaTime","Math","min","update","stickToPaddle","checkPaddleCollision","bounceOffPaddle","forEach","brick","index","isDestroyed","checkBrickCollision","bounceOffBrick","hit","prev","isExplosive","nearbyBrick","i","dx","x","dy","y","distance","sqrt","radius","reset","every","getMaxLevel","fillStyle","fillRect","draw","font","textAlign","fillText","id","requestAnimationFrame","handlePause","key","cancelAnimationFrame","cleanup","removeEventListener","handleRestart","handleResume","navigate","handleMainMenu","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onResume","onRestart","onMainMenu","level","_c","$RefreshReg$"],"sources":["C:/Users/noahm/OneDrive/Desktop/Coding/brick_blaster2/client/src/components/Game/GameCanvas.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport PauseMenu from '../UI/PauseMenu';\nimport GameOver from '../UI/GameOver';\nimport LevelManager from './LevelManager';\nimport '../../styles/components/GameCanvas.css';\n\nconst GameCanvas = () => {\n  const canvasRef = useRef(null);\n  const [gameObjects, setGameObjects] = useState(null);\n  const [score, setScore] = useState(0);\n  const [lives, setLives] = useState(3);\n  const [currentLevel, setCurrentLevel] = useState(1);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [isVictory, setIsVictory] = useState(false);\n  const [animationFrameId, setAnimationFrameId] = useState(null);\n  \n  // Create levelManager ref to avoid dependency issues\n  const levelManagerRef = useRef(new LevelManager());\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Set canvas size\n    canvas.width = 800;\n    canvas.height = 600;\n    const ctx = canvas.getContext('2d');\n    \n    // Initialize game objects\n    const objects = {\n      ball: new Ball(canvas.width / 2, canvas.height - 30),\n      paddle: new Paddle(canvas.width / 2 - 50, canvas.height - 20),\n      bricks: levelManagerRef.current.loadLevel(currentLevel).bricks\n    };\n    setGameObjects(objects);\n\n    let lastTime = 0;\n    const targetFPS = 60;\n    const frameInterval = 1000 / targetFPS;\n\n    // Handle spacebar and mouse click for ball launch\n    const handleLaunch = (e) => {\n      if (!isPaused && !isGameOver && objects.ball && !objects.ball.isLaunched) {\n        if ((e.type === 'keydown' && e.code === 'Space') || e.type === 'click') {\n          e.preventDefault();\n          objects.ball.launch();\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleLaunch);\n    canvas.addEventListener('click', handleLaunch);\n\n    // Game loop function\n    const gameLoop = (timestamp) => {\n      if (!lastTime) {\n        lastTime = timestamp;\n      }\n      \n      const deltaTime = Math.min(timestamp - lastTime, 32); // Cap at ~30 FPS minimum\n      lastTime = timestamp;\n\n      if (!isPaused && !isGameOver) {\n        // Update game objects\n        objects.paddle.update();\n        \n        // Make ball stick to paddle if not launched\n        if (!objects.ball.isLaunched) {\n          objects.ball.stickToPaddle(objects.paddle);\n        } else {\n          objects.ball.update();\n        }\n\n        // Check for ball-paddle collision\n        if (objects.ball.checkPaddleCollision(objects.paddle)) {\n          objects.ball.bounceOffPaddle(objects.paddle);\n        }\n\n        // Check for ball-brick collisions\n        objects.bricks.forEach((brick, index) => {\n          if (!brick.isDestroyed() && objects.ball.checkBrickCollision(brick)) {\n            objects.ball.bounceOffBrick();\n            if (brick.hit()) {\n              setScore(prev => prev + 100);\n              if (brick.isExplosive()) {\n                objects.bricks.forEach((nearbyBrick, i) => {\n                  if (i !== index && !nearbyBrick.isDestroyed()) {\n                    const dx = nearbyBrick.x - brick.x;\n                    const dy = nearbyBrick.y - brick.y;\n                    const distance = Math.sqrt(dx * dx + dy * dy);\n                    if (distance < 100) {\n                      nearbyBrick.hit();\n                      setScore(prev => prev + 50);\n                    }\n                  }\n                });\n              }\n            }\n          }\n        });\n\n        // Check if ball is lost\n        if (objects.ball.y + objects.ball.radius > canvas.height) {\n          setLives(prev => prev - 1);\n          if (lives > 1) {\n            objects.ball.reset();\n          } else {\n            setIsGameOver(true);\n          }\n        }\n\n        // Check if level is complete\n        if (objects.bricks.every(brick => brick.isDestroyed() || brick.type === 'unbreakable')) {\n          if (currentLevel < levelManagerRef.current.getMaxLevel()) {\n            setCurrentLevel(prev => prev + 1);\n            objects.ball.reset();\n            objects.paddle.reset();\n            objects.bricks = levelManagerRef.current.loadLevel(currentLevel + 1).bricks;\n          } else {\n            setIsVictory(true);\n            setIsGameOver(true);\n          }\n        }\n\n        // Clear canvas\n        ctx.fillStyle = '#000000';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n        // Draw objects\n        objects.bricks.forEach(brick => brick.draw(ctx));\n        objects.ball.draw(ctx);\n        objects.paddle.draw(ctx);\n\n        // Draw HUD\n        ctx.font = '16px Courier New';\n        ctx.fillStyle = '#00FF00';\n        \n        // Score on the left\n        ctx.textAlign = 'left';\n        ctx.fillText(`Score: ${score}`, 10, 40);\n        \n        // Level in the center\n        ctx.textAlign = 'center';\n        ctx.fillText(`Level: ${currentLevel}`, canvas.width / 2, 40);\n        \n        // Lives on the right\n        ctx.textAlign = 'right';\n        ctx.fillText(`Lives: ${lives}`, canvas.width - 10, 40);\n      }\n      \n      // Request next frame\n      const id = requestAnimationFrame(gameLoop);\n      setAnimationFrameId(id);\n    };\n\n    // Start game loop\n    gameLoop();\n\n    // Add pause event listener\n    const handlePause = (e) => {\n      if (e.key === 'Escape') {\n        setIsPaused(prev => !prev);\n      }\n    };\n\n    window.addEventListener('keydown', handlePause);\n\n    // Cleanup\n    return () => {\n      if (animationFrameId) {\n        cancelAnimationFrame(animationFrameId);\n      }\n      if (objects.paddle) {\n        objects.paddle.cleanup();\n      }\n      window.removeEventListener('keydown', handlePause);\n      window.removeEventListener('keydown', handleLaunch);\n      canvas.removeEventListener('click', handleLaunch);\n    };\n  }, [currentLevel, score, lives, isPaused, isGameOver, animationFrameId]);\n\n  const handleRestart = () => {\n    if (gameObjects) {\n      setScore(0);\n      setLives(3);\n      setCurrentLevel(1);\n      setIsGameOver(false);\n      setIsVictory(false);\n      setIsPaused(false);\n      \n      gameObjects.ball.reset();\n      gameObjects.paddle.reset();\n      gameObjects.bricks = levelManagerRef.current.loadLevel(1).bricks;\n    }\n  };\n\n  const handleResume = () => {\n    setIsPaused(false);\n  };\n\n  const navigate = useNavigate();\n  const handleMainMenu = () => {\n    if (animationFrameId) {\n      cancelAnimationFrame(animationFrameId);\n    }\n    navigate('/');\n  };\n\n  return (\n    <div className=\"game-container\">\n      <canvas\n        ref={canvasRef}\n        className=\"game-canvas\"\n      />\n      \n      {isPaused && !isGameOver && (\n        <PauseMenu\n          onResume={handleResume}\n          onRestart={handleRestart}\n          onMainMenu={handleMainMenu}\n        />\n      )}\n      \n      {isGameOver && (\n        <GameOver\n          score={score}\n          level={currentLevel}\n          onRestart={handleRestart}\n          onMainMenu={handleMainMenu}\n          isVictory={isVictory}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default GameCanvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}