{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noahm\\\\OneDrive\\\\Desktop\\\\Coding\\\\brick_blaster2\\\\client\\\\src\\\\components\\\\Game\\\\GameCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useCallback } from 'react';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport { useGameLoop } from './GameLoop';\nimport LevelManager from './LevelManager';\nimport PauseMenu from '../UI/PauseMenu';\nimport '../../styles/components/GameCanvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameCanvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const gameObjectsRef = useRef(null);\n  const requestIdRef = useRef({\n    id: null,\n    lastTime: null\n  });\n  const levelManagerRef = useRef(new LevelManager());\n  const {\n    isPaused,\n    isGameOver,\n    setScore,\n    score,\n    lives,\n    setLives,\n    currentLevel,\n    setIsPaused,\n    setIsGameOver,\n    setIsVictory,\n    stop,\n    setCurrentLevel\n  } = useGameLoop();\n  const drawHUD = useCallback(ctx => {\n    ctx.save();\n    ctx.font = '16px Arial';\n    ctx.fillStyle = '#00FF00';\n    ctx.textAlign = 'left';\n    ctx.fillText(`Score: ${score}`, 10, 30);\n    ctx.textAlign = 'center';\n    ctx.fillText(`Level: ${currentLevel}`, canvasRef.current.width / 2, 30);\n    ctx.textAlign = 'right';\n    ctx.fillText(`Lives: ${lives}`, canvasRef.current.width - 10, 30);\n    ctx.restore();\n  }, [score, lives, currentLevel]);\n  const handleBallOut = useCallback(objects => {\n    setLives(prev => {\n      const newLives = prev - 1;\n      if (newLives <= 0) {\n        setIsGameOver(true);\n        stop();\n      }\n      return newLives;\n    });\n    if (lives > 1) {\n      objects.ball.reset();\n      objects.paddle.reset();\n    }\n  }, [lives, setLives, setIsGameOver, stop]);\n  const resetLevel = useCallback(() => {\n    if (gameObjectsRef.current) {\n      const levelData = levelManagerRef.current.loadLevel(currentLevel);\n      gameObjectsRef.current.bricks = levelData.bricks;\n      gameObjectsRef.current.ball.reset();\n      gameObjectsRef.current.paddle.reset();\n    }\n  }, [currentLevel]);\n  const handleResume = useCallback(() => {\n    setIsPaused(false);\n  }, [setIsPaused]);\n  const handleRestart = useCallback(() => {\n    setIsPaused(false);\n    resetLevel();\n  }, [setIsPaused, resetLevel]);\n  const gameLoop = useCallback(timestamp => {\n    if (!canvasRef.current) return;\n    const ctx = canvasRef.current.getContext('2d', {\n      alpha: false\n    });\n    if (!requestIdRef.current.lastTime) {\n      requestIdRef.current.lastTime = timestamp;\n      requestIdRef.current.id = requestAnimationFrame(gameLoop);\n      return;\n    }\n    const deltaTime = Math.min((timestamp - requestIdRef.current.lastTime) / 1000, 0.032);\n    requestIdRef.current.lastTime = timestamp;\n    const objects = gameObjectsRef.current;\n\n    // Clear canvas\n    ctx.fillStyle = 'rgb(0, 0, 0)';\n    ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    if (!isPaused && !isGameOver) {\n      // Update paddle\n      objects.paddle.update(deltaTime);\n\n      // Update ball position\n      objects.ball.update(deltaTime);\n\n      // Handle paddle collision\n      if (objects.ball.checkPaddleCollision(objects.paddle)) {\n        objects.ball.bounceOffPaddle(objects.paddle);\n      }\n\n      // Only stick to paddle if not launched\n      if (!objects.ball.isLaunched) {\n        objects.ball.stickToPaddle(objects.paddle);\n      }\n\n      // Check for brick collisions\n      let remainingBricks = 0;\n      for (const brick of objects.bricks) {\n        if (!brick.isDestroyed()) {\n          remainingBricks++;\n          if (objects.ball.checkBrickCollision(brick)) {\n            objects.ball.bounceOffBrick(brick);\n            if (brick.hit()) {\n              setScore(prev => prev + 100);\n            }\n          }\n        }\n      }\n\n      // Check if level is complete (only if we have bricks and all are destroyed)\n      if (objects.bricks.length > 0 && remainingBricks === 0) {\n        const nextLevel = currentLevel + 1;\n        if (nextLevel <= levelManagerRef.current.getMaxLevel()) {\n          // Only reset ball and paddle after a short delay\n          setTimeout(() => {\n            objects.ball.reset();\n            objects.paddle.reset();\n            setCurrentLevel(nextLevel);\n            const levelData = levelManagerRef.current.loadLevel(nextLevel);\n            gameObjectsRef.current.bricks = levelData.bricks;\n          }, 1000);\n        } else {\n          // Game completed\n          setIsGameOver(true);\n          setIsVictory(true);\n          stop();\n        }\n      }\n\n      // Check if ball is out of bounds\n      if (objects.ball.isLaunched && objects.ball.y > canvasRef.current.height) {\n        handleBallOut(objects);\n      }\n    }\n\n    // Draw game objects (always draw even when paused)\n    ctx.save();\n    objects.bricks.forEach(brick => {\n      if (!brick.isDestroyed()) {\n        brick.draw(ctx);\n      }\n    });\n    objects.ball.draw(ctx);\n    objects.paddle.draw(ctx);\n    ctx.restore();\n\n    // Draw HUD (always draw even when paused)\n    drawHUD(ctx);\n    requestIdRef.current.id = requestAnimationFrame(gameLoop);\n  }, [isPaused, isGameOver, handleBallOut, drawHUD, setScore, setCurrentLevel, currentLevel]);\n\n  // Keyboard handlers\n  const handleKeyDown = useCallback(e => {\n    if (isGameOver) return;\n    const objects = gameObjectsRef.current;\n    switch (e.key.toLowerCase()) {\n      case 'a':\n      case 'arrowleft':\n        if (!isPaused) objects.paddle.moveLeft();\n        break;\n      case 'd':\n      case 'arrowright':\n        if (!isPaused) objects.paddle.moveRight();\n        break;\n      case ' ':\n        if (!isPaused && objects.ball) objects.ball.launch();\n        break;\n      case 'escape':\n        setIsPaused(prev => !prev);\n        break;\n      default:\n        break;\n    }\n  }, [isPaused, isGameOver, setIsPaused]);\n  const handleKeyUp = useCallback(e => {\n    if (isGameOver || isPaused) return;\n    const objects = gameObjectsRef.current;\n    switch (e.key.toLowerCase()) {\n      case 'a':\n      case 'arrowleft':\n        objects.paddle.stopLeft();\n        break;\n      case 'd':\n      case 'arrowright':\n        objects.paddle.stopRight();\n        break;\n      default:\n        break;\n    }\n  }, [isPaused, isGameOver]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    canvas.width = 800;\n    canvas.height = 600;\n    const paddleY = canvas.height - 40;\n    gameObjectsRef.current = {\n      paddle: new Paddle(canvas.width / 2 - 50, paddleY),\n      ball: new Ball(canvas.width / 2, paddleY - 10),\n      bricks: []\n    };\n    resetLevel();\n    const animationId = requestAnimationFrame(gameLoop);\n    requestIdRef.current.id = animationId;\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n    return () => {\n      cancelAnimationFrame(animationId);\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [gameLoop, handleKeyDown, handleKeyUp, resetLevel]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"game-canvas\",\n        width: 800,\n        height: 600,\n        tabIndex: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), isPaused && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pause-overlay\",\n        children: /*#__PURE__*/_jsxDEV(PauseMenu, {\n          onResume: handleResume,\n          onRestart: handleRestart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n};\n_s(GameCanvas, \"NYeH/sj78eOpH5WwnxOSXTA2o+Y=\", false, function () {\n  return [useGameLoop];\n});\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","useCallback","Ball","Paddle","useGameLoop","LevelManager","PauseMenu","jsxDEV","_jsxDEV","GameCanvas","_s","canvasRef","gameObjectsRef","requestIdRef","id","lastTime","levelManagerRef","isPaused","isGameOver","setScore","score","lives","setLives","currentLevel","setIsPaused","setIsGameOver","setIsVictory","stop","setCurrentLevel","drawHUD","ctx","save","font","fillStyle","textAlign","fillText","current","width","restore","handleBallOut","objects","prev","newLives","ball","reset","paddle","resetLevel","levelData","loadLevel","bricks","handleResume","handleRestart","gameLoop","timestamp","getContext","alpha","requestAnimationFrame","deltaTime","Math","min","fillRect","height","update","checkPaddleCollision","bounceOffPaddle","isLaunched","stickToPaddle","remainingBricks","brick","isDestroyed","checkBrickCollision","bounceOffBrick","hit","length","nextLevel","getMaxLevel","setTimeout","y","forEach","draw","handleKeyDown","e","key","toLowerCase","moveLeft","moveRight","launch","handleKeyUp","stopLeft","stopRight","canvas","paddleY","animationId","window","addEventListener","cancelAnimationFrame","removeEventListener","className","children","ref","tabIndex","fileName","_jsxFileName","lineNumber","columnNumber","onResume","onRestart","_c","$RefreshReg$"],"sources":["C:/Users/noahm/OneDrive/Desktop/Coding/brick_blaster2/client/src/components/Game/GameCanvas.js"],"sourcesContent":["import React, { useEffect, useRef, useCallback } from 'react';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport { useGameLoop } from './GameLoop';\nimport LevelManager from './LevelManager';\nimport PauseMenu from '../UI/PauseMenu';\nimport '../../styles/components/GameCanvas.css';\n\nconst GameCanvas = () => {\n  const canvasRef = useRef(null);\n  const gameObjectsRef = useRef(null);\n  const requestIdRef = useRef({ id: null, lastTime: null });\n  const levelManagerRef = useRef(new LevelManager());\n\n  const {\n    isPaused,\n    isGameOver,\n    setScore,\n    score,\n    lives,\n    setLives,\n    currentLevel,\n    setIsPaused,\n    setIsGameOver,\n    setIsVictory,\n    stop,\n    setCurrentLevel\n  } = useGameLoop();\n\n  const drawHUD = useCallback((ctx) => {\n    ctx.save();\n    ctx.font = '16px Arial';\n    ctx.fillStyle = '#00FF00';\n    ctx.textAlign = 'left';\n    ctx.fillText(`Score: ${score}`, 10, 30);\n    ctx.textAlign = 'center';\n    ctx.fillText(`Level: ${currentLevel}`, canvasRef.current.width / 2, 30);\n    ctx.textAlign = 'right';\n    ctx.fillText(`Lives: ${lives}`, canvasRef.current.width - 10, 30);\n    ctx.restore();\n  }, [score, lives, currentLevel]);\n\n  const handleBallOut = useCallback((objects) => {\n    setLives(prev => {\n      const newLives = prev - 1;\n      if (newLives <= 0) {\n        setIsGameOver(true);\n        stop();\n      }\n      return newLives;\n    });\n    \n    if (lives > 1) {\n      objects.ball.reset();\n      objects.paddle.reset();\n    }\n  }, [lives, setLives, setIsGameOver, stop]);\n\n  const resetLevel = useCallback(() => {\n    if (gameObjectsRef.current) {\n      const levelData = levelManagerRef.current.loadLevel(currentLevel);\n      gameObjectsRef.current.bricks = levelData.bricks;\n      gameObjectsRef.current.ball.reset();\n      gameObjectsRef.current.paddle.reset();\n    }\n  }, [currentLevel]);\n\n  const handleResume = useCallback(() => {\n    setIsPaused(false);\n  }, [setIsPaused]);\n\n  const handleRestart = useCallback(() => {\n    setIsPaused(false);\n    resetLevel();\n  }, [setIsPaused, resetLevel]);\n\n  const gameLoop = useCallback((timestamp) => {\n    if (!canvasRef.current) return;\n    const ctx = canvasRef.current.getContext('2d', { alpha: false });\n\n    if (!requestIdRef.current.lastTime) {\n      requestIdRef.current.lastTime = timestamp;\n      requestIdRef.current.id = requestAnimationFrame(gameLoop);\n      return;\n    }\n    \n    const deltaTime = Math.min((timestamp - requestIdRef.current.lastTime) / 1000, 0.032);\n    requestIdRef.current.lastTime = timestamp;\n\n    const objects = gameObjectsRef.current;\n    \n    // Clear canvas\n    ctx.fillStyle = 'rgb(0, 0, 0)';\n    ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n    if (!isPaused && !isGameOver) {\n      // Update paddle\n      objects.paddle.update(deltaTime);\n      \n      // Update ball position\n      objects.ball.update(deltaTime);\n\n      // Handle paddle collision\n      if (objects.ball.checkPaddleCollision(objects.paddle)) {\n        objects.ball.bounceOffPaddle(objects.paddle);\n      }\n\n      // Only stick to paddle if not launched\n      if (!objects.ball.isLaunched) {\n        objects.ball.stickToPaddle(objects.paddle);\n      }\n\n      // Check for brick collisions\n      let remainingBricks = 0;\n      for (const brick of objects.bricks) {\n        if (!brick.isDestroyed()) {\n          remainingBricks++;\n          if (objects.ball.checkBrickCollision(brick)) {\n            objects.ball.bounceOffBrick(brick);\n            if (brick.hit()) {\n              setScore(prev => prev + 100);\n            }\n          }\n        }\n      }\n\n      // Check if level is complete (only if we have bricks and all are destroyed)\n      if (objects.bricks.length > 0 && remainingBricks === 0) {\n        const nextLevel = currentLevel + 1;\n        if (nextLevel <= levelManagerRef.current.getMaxLevel()) {\n          // Only reset ball and paddle after a short delay\n          setTimeout(() => {\n            objects.ball.reset();\n            objects.paddle.reset();\n            setCurrentLevel(nextLevel);\n            const levelData = levelManagerRef.current.loadLevel(nextLevel);\n            gameObjectsRef.current.bricks = levelData.bricks;\n          }, 1000);\n        } else {\n          // Game completed\n          setIsGameOver(true);\n          setIsVictory(true);\n          stop();\n        }\n      }\n\n      // Check if ball is out of bounds\n      if (objects.ball.isLaunched && objects.ball.y > canvasRef.current.height) {\n        handleBallOut(objects);\n      }\n    }\n\n    // Draw game objects (always draw even when paused)\n    ctx.save();\n    objects.bricks.forEach(brick => {\n      if (!brick.isDestroyed()) {\n        brick.draw(ctx);\n      }\n    });\n    objects.ball.draw(ctx);\n    objects.paddle.draw(ctx);\n    ctx.restore();\n\n    // Draw HUD (always draw even when paused)\n    drawHUD(ctx);\n\n    requestIdRef.current.id = requestAnimationFrame(gameLoop);\n  }, [isPaused, isGameOver, handleBallOut, drawHUD, setScore, setCurrentLevel, currentLevel]);\n\n  // Keyboard handlers\n  const handleKeyDown = useCallback((e) => {\n    if (isGameOver) return;\n    \n    const objects = gameObjectsRef.current;\n    switch (e.key.toLowerCase()) {\n      case 'a':\n      case 'arrowleft':\n        if (!isPaused) objects.paddle.moveLeft();\n        break;\n      case 'd':\n      case 'arrowright':\n        if (!isPaused) objects.paddle.moveRight();\n        break;\n      case ' ':\n        if (!isPaused && objects.ball) objects.ball.launch();\n        break;\n      case 'escape':\n        setIsPaused(prev => !prev);\n        break;\n      default:\n        break;\n    }\n  }, [isPaused, isGameOver, setIsPaused]);\n\n  const handleKeyUp = useCallback((e) => {\n    if (isGameOver || isPaused) return;\n    \n    const objects = gameObjectsRef.current;\n    switch (e.key.toLowerCase()) {\n      case 'a':\n      case 'arrowleft':\n        objects.paddle.stopLeft();\n        break;\n      case 'd':\n      case 'arrowright':\n        objects.paddle.stopRight();\n        break;\n      default:\n        break;\n    }\n  }, [isPaused, isGameOver]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    canvas.width = 800;\n    canvas.height = 600;\n\n    const paddleY = canvas.height - 40;\n    gameObjectsRef.current = {\n      paddle: new Paddle(canvas.width / 2 - 50, paddleY),\n      ball: new Ball(canvas.width / 2, paddleY - 10),\n      bricks: []\n    };\n\n    resetLevel();\n\n    const animationId = requestAnimationFrame(gameLoop);\n    requestIdRef.current.id = animationId;\n\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n\n    return () => {\n      cancelAnimationFrame(animationId);\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [gameLoop, handleKeyDown, handleKeyUp, resetLevel]);\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"canvas-wrapper\">\n        <canvas\n          ref={canvasRef}\n          className=\"game-canvas\"\n          width={800}\n          height={600}\n          tabIndex={0}\n        />\n        {isPaused && (\n          <div className=\"pause-overlay\">\n            <PauseMenu\n              onResume={handleResume}\n              onRestart={handleRestart}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default GameCanvas;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AAC7D,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,WAAW,QAAQ,YAAY;AACxC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAO,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,SAAS,GAAGX,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMY,cAAc,GAAGZ,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMa,YAAY,GAAGb,MAAM,CAAC;IAAEc,EAAE,EAAE,IAAI;IAAEC,QAAQ,EAAE;EAAK,CAAC,CAAC;EACzD,MAAMC,eAAe,GAAGhB,MAAM,CAAC,IAAIK,YAAY,CAAC,CAAC,CAAC;EAElD,MAAM;IACJY,QAAQ;IACRC,UAAU;IACVC,QAAQ;IACRC,KAAK;IACLC,KAAK;IACLC,QAAQ;IACRC,YAAY;IACZC,WAAW;IACXC,aAAa;IACbC,YAAY;IACZC,IAAI;IACJC;EACF,CAAC,GAAGxB,WAAW,CAAC,CAAC;EAEjB,MAAMyB,OAAO,GAAG5B,WAAW,CAAE6B,GAAG,IAAK;IACnCA,GAAG,CAACC,IAAI,CAAC,CAAC;IACVD,GAAG,CAACE,IAAI,GAAG,YAAY;IACvBF,GAAG,CAACG,SAAS,GAAG,SAAS;IACzBH,GAAG,CAACI,SAAS,GAAG,MAAM;IACtBJ,GAAG,CAACK,QAAQ,CAAC,UAAUf,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACvCU,GAAG,CAACI,SAAS,GAAG,QAAQ;IACxBJ,GAAG,CAACK,QAAQ,CAAC,UAAUZ,YAAY,EAAE,EAAEZ,SAAS,CAACyB,OAAO,CAACC,KAAK,GAAG,CAAC,EAAE,EAAE,CAAC;IACvEP,GAAG,CAACI,SAAS,GAAG,OAAO;IACvBJ,GAAG,CAACK,QAAQ,CAAC,UAAUd,KAAK,EAAE,EAAEV,SAAS,CAACyB,OAAO,CAACC,KAAK,GAAG,EAAE,EAAE,EAAE,CAAC;IACjEP,GAAG,CAACQ,OAAO,CAAC,CAAC;EACf,CAAC,EAAE,CAAClB,KAAK,EAAEC,KAAK,EAAEE,YAAY,CAAC,CAAC;EAEhC,MAAMgB,aAAa,GAAGtC,WAAW,CAAEuC,OAAO,IAAK;IAC7ClB,QAAQ,CAACmB,IAAI,IAAI;MACf,MAAMC,QAAQ,GAAGD,IAAI,GAAG,CAAC;MACzB,IAAIC,QAAQ,IAAI,CAAC,EAAE;QACjBjB,aAAa,CAAC,IAAI,CAAC;QACnBE,IAAI,CAAC,CAAC;MACR;MACA,OAAOe,QAAQ;IACjB,CAAC,CAAC;IAEF,IAAIrB,KAAK,GAAG,CAAC,EAAE;MACbmB,OAAO,CAACG,IAAI,CAACC,KAAK,CAAC,CAAC;MACpBJ,OAAO,CAACK,MAAM,CAACD,KAAK,CAAC,CAAC;IACxB;EACF,CAAC,EAAE,CAACvB,KAAK,EAAEC,QAAQ,EAAEG,aAAa,EAAEE,IAAI,CAAC,CAAC;EAE1C,MAAMmB,UAAU,GAAG7C,WAAW,CAAC,MAAM;IACnC,IAAIW,cAAc,CAACwB,OAAO,EAAE;MAC1B,MAAMW,SAAS,GAAG/B,eAAe,CAACoB,OAAO,CAACY,SAAS,CAACzB,YAAY,CAAC;MACjEX,cAAc,CAACwB,OAAO,CAACa,MAAM,GAAGF,SAAS,CAACE,MAAM;MAChDrC,cAAc,CAACwB,OAAO,CAACO,IAAI,CAACC,KAAK,CAAC,CAAC;MACnChC,cAAc,CAACwB,OAAO,CAACS,MAAM,CAACD,KAAK,CAAC,CAAC;IACvC;EACF,CAAC,EAAE,CAACrB,YAAY,CAAC,CAAC;EAElB,MAAM2B,YAAY,GAAGjD,WAAW,CAAC,MAAM;IACrCuB,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,MAAM2B,aAAa,GAAGlD,WAAW,CAAC,MAAM;IACtCuB,WAAW,CAAC,KAAK,CAAC;IAClBsB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACtB,WAAW,EAAEsB,UAAU,CAAC,CAAC;EAE7B,MAAMM,QAAQ,GAAGnD,WAAW,CAAEoD,SAAS,IAAK;IAC1C,IAAI,CAAC1C,SAAS,CAACyB,OAAO,EAAE;IACxB,MAAMN,GAAG,GAAGnB,SAAS,CAACyB,OAAO,CAACkB,UAAU,CAAC,IAAI,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAC,CAAC;IAEhE,IAAI,CAAC1C,YAAY,CAACuB,OAAO,CAACrB,QAAQ,EAAE;MAClCF,YAAY,CAACuB,OAAO,CAACrB,QAAQ,GAAGsC,SAAS;MACzCxC,YAAY,CAACuB,OAAO,CAACtB,EAAE,GAAG0C,qBAAqB,CAACJ,QAAQ,CAAC;MACzD;IACF;IAEA,MAAMK,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAACN,SAAS,GAAGxC,YAAY,CAACuB,OAAO,CAACrB,QAAQ,IAAI,IAAI,EAAE,KAAK,CAAC;IACrFF,YAAY,CAACuB,OAAO,CAACrB,QAAQ,GAAGsC,SAAS;IAEzC,MAAMb,OAAO,GAAG5B,cAAc,CAACwB,OAAO;;IAEtC;IACAN,GAAG,CAACG,SAAS,GAAG,cAAc;IAC9BH,GAAG,CAAC8B,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEjD,SAAS,CAACyB,OAAO,CAACC,KAAK,EAAE1B,SAAS,CAACyB,OAAO,CAACyB,MAAM,CAAC;IAErE,IAAI,CAAC5C,QAAQ,IAAI,CAACC,UAAU,EAAE;MAC5B;MACAsB,OAAO,CAACK,MAAM,CAACiB,MAAM,CAACL,SAAS,CAAC;;MAEhC;MACAjB,OAAO,CAACG,IAAI,CAACmB,MAAM,CAACL,SAAS,CAAC;;MAE9B;MACA,IAAIjB,OAAO,CAACG,IAAI,CAACoB,oBAAoB,CAACvB,OAAO,CAACK,MAAM,CAAC,EAAE;QACrDL,OAAO,CAACG,IAAI,CAACqB,eAAe,CAACxB,OAAO,CAACK,MAAM,CAAC;MAC9C;;MAEA;MACA,IAAI,CAACL,OAAO,CAACG,IAAI,CAACsB,UAAU,EAAE;QAC5BzB,OAAO,CAACG,IAAI,CAACuB,aAAa,CAAC1B,OAAO,CAACK,MAAM,CAAC;MAC5C;;MAEA;MACA,IAAIsB,eAAe,GAAG,CAAC;MACvB,KAAK,MAAMC,KAAK,IAAI5B,OAAO,CAACS,MAAM,EAAE;QAClC,IAAI,CAACmB,KAAK,CAACC,WAAW,CAAC,CAAC,EAAE;UACxBF,eAAe,EAAE;UACjB,IAAI3B,OAAO,CAACG,IAAI,CAAC2B,mBAAmB,CAACF,KAAK,CAAC,EAAE;YAC3C5B,OAAO,CAACG,IAAI,CAAC4B,cAAc,CAACH,KAAK,CAAC;YAClC,IAAIA,KAAK,CAACI,GAAG,CAAC,CAAC,EAAE;cACfrD,QAAQ,CAACsB,IAAI,IAAIA,IAAI,GAAG,GAAG,CAAC;YAC9B;UACF;QACF;MACF;;MAEA;MACA,IAAID,OAAO,CAACS,MAAM,CAACwB,MAAM,GAAG,CAAC,IAAIN,eAAe,KAAK,CAAC,EAAE;QACtD,MAAMO,SAAS,GAAGnD,YAAY,GAAG,CAAC;QAClC,IAAImD,SAAS,IAAI1D,eAAe,CAACoB,OAAO,CAACuC,WAAW,CAAC,CAAC,EAAE;UACtD;UACAC,UAAU,CAAC,MAAM;YACfpC,OAAO,CAACG,IAAI,CAACC,KAAK,CAAC,CAAC;YACpBJ,OAAO,CAACK,MAAM,CAACD,KAAK,CAAC,CAAC;YACtBhB,eAAe,CAAC8C,SAAS,CAAC;YAC1B,MAAM3B,SAAS,GAAG/B,eAAe,CAACoB,OAAO,CAACY,SAAS,CAAC0B,SAAS,CAAC;YAC9D9D,cAAc,CAACwB,OAAO,CAACa,MAAM,GAAGF,SAAS,CAACE,MAAM;UAClD,CAAC,EAAE,IAAI,CAAC;QACV,CAAC,MAAM;UACL;UACAxB,aAAa,CAAC,IAAI,CAAC;UACnBC,YAAY,CAAC,IAAI,CAAC;UAClBC,IAAI,CAAC,CAAC;QACR;MACF;;MAEA;MACA,IAAIa,OAAO,CAACG,IAAI,CAACsB,UAAU,IAAIzB,OAAO,CAACG,IAAI,CAACkC,CAAC,GAAGlE,SAAS,CAACyB,OAAO,CAACyB,MAAM,EAAE;QACxEtB,aAAa,CAACC,OAAO,CAAC;MACxB;IACF;;IAEA;IACAV,GAAG,CAACC,IAAI,CAAC,CAAC;IACVS,OAAO,CAACS,MAAM,CAAC6B,OAAO,CAACV,KAAK,IAAI;MAC9B,IAAI,CAACA,KAAK,CAACC,WAAW,CAAC,CAAC,EAAE;QACxBD,KAAK,CAACW,IAAI,CAACjD,GAAG,CAAC;MACjB;IACF,CAAC,CAAC;IACFU,OAAO,CAACG,IAAI,CAACoC,IAAI,CAACjD,GAAG,CAAC;IACtBU,OAAO,CAACK,MAAM,CAACkC,IAAI,CAACjD,GAAG,CAAC;IACxBA,GAAG,CAACQ,OAAO,CAAC,CAAC;;IAEb;IACAT,OAAO,CAACC,GAAG,CAAC;IAEZjB,YAAY,CAACuB,OAAO,CAACtB,EAAE,GAAG0C,qBAAqB,CAACJ,QAAQ,CAAC;EAC3D,CAAC,EAAE,CAACnC,QAAQ,EAAEC,UAAU,EAAEqB,aAAa,EAAEV,OAAO,EAAEV,QAAQ,EAAES,eAAe,EAAEL,YAAY,CAAC,CAAC;;EAE3F;EACA,MAAMyD,aAAa,GAAG/E,WAAW,CAAEgF,CAAC,IAAK;IACvC,IAAI/D,UAAU,EAAE;IAEhB,MAAMsB,OAAO,GAAG5B,cAAc,CAACwB,OAAO;IACtC,QAAQ6C,CAAC,CAACC,GAAG,CAACC,WAAW,CAAC,CAAC;MACzB,KAAK,GAAG;MACR,KAAK,WAAW;QACd,IAAI,CAAClE,QAAQ,EAAEuB,OAAO,CAACK,MAAM,CAACuC,QAAQ,CAAC,CAAC;QACxC;MACF,KAAK,GAAG;MACR,KAAK,YAAY;QACf,IAAI,CAACnE,QAAQ,EAAEuB,OAAO,CAACK,MAAM,CAACwC,SAAS,CAAC,CAAC;QACzC;MACF,KAAK,GAAG;QACN,IAAI,CAACpE,QAAQ,IAAIuB,OAAO,CAACG,IAAI,EAAEH,OAAO,CAACG,IAAI,CAAC2C,MAAM,CAAC,CAAC;QACpD;MACF,KAAK,QAAQ;QACX9D,WAAW,CAACiB,IAAI,IAAI,CAACA,IAAI,CAAC;QAC1B;MACF;QACE;IACJ;EACF,CAAC,EAAE,CAACxB,QAAQ,EAAEC,UAAU,EAAEM,WAAW,CAAC,CAAC;EAEvC,MAAM+D,WAAW,GAAGtF,WAAW,CAAEgF,CAAC,IAAK;IACrC,IAAI/D,UAAU,IAAID,QAAQ,EAAE;IAE5B,MAAMuB,OAAO,GAAG5B,cAAc,CAACwB,OAAO;IACtC,QAAQ6C,CAAC,CAACC,GAAG,CAACC,WAAW,CAAC,CAAC;MACzB,KAAK,GAAG;MACR,KAAK,WAAW;QACd3C,OAAO,CAACK,MAAM,CAAC2C,QAAQ,CAAC,CAAC;QACzB;MACF,KAAK,GAAG;MACR,KAAK,YAAY;QACfhD,OAAO,CAACK,MAAM,CAAC4C,SAAS,CAAC,CAAC;QAC1B;MACF;QACE;IACJ;EACF,CAAC,EAAE,CAACxE,QAAQ,EAAEC,UAAU,CAAC,CAAC;EAE1BnB,SAAS,CAAC,MAAM;IACd,MAAM2F,MAAM,GAAG/E,SAAS,CAACyB,OAAO;IAChC,IAAI,CAACsD,MAAM,EAAE;IAEbA,MAAM,CAACrD,KAAK,GAAG,GAAG;IAClBqD,MAAM,CAAC7B,MAAM,GAAG,GAAG;IAEnB,MAAM8B,OAAO,GAAGD,MAAM,CAAC7B,MAAM,GAAG,EAAE;IAClCjD,cAAc,CAACwB,OAAO,GAAG;MACvBS,MAAM,EAAE,IAAI1C,MAAM,CAACuF,MAAM,CAACrD,KAAK,GAAG,CAAC,GAAG,EAAE,EAAEsD,OAAO,CAAC;MAClDhD,IAAI,EAAE,IAAIzC,IAAI,CAACwF,MAAM,CAACrD,KAAK,GAAG,CAAC,EAAEsD,OAAO,GAAG,EAAE,CAAC;MAC9C1C,MAAM,EAAE;IACV,CAAC;IAEDH,UAAU,CAAC,CAAC;IAEZ,MAAM8C,WAAW,GAAGpC,qBAAqB,CAACJ,QAAQ,CAAC;IACnDvC,YAAY,CAACuB,OAAO,CAACtB,EAAE,GAAG8E,WAAW;IAErCC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEd,aAAa,CAAC;IACjDa,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEP,WAAW,CAAC;IAE7C,OAAO,MAAM;MACXQ,oBAAoB,CAACH,WAAW,CAAC;MACjCC,MAAM,CAACG,mBAAmB,CAAC,SAAS,EAAEhB,aAAa,CAAC;MACpDa,MAAM,CAACG,mBAAmB,CAAC,OAAO,EAAET,WAAW,CAAC;IAClD,CAAC;EACH,CAAC,EAAE,CAACnC,QAAQ,EAAE4B,aAAa,EAAEO,WAAW,EAAEzC,UAAU,CAAC,CAAC;EAEtD,oBACEtC,OAAA;IAAKyF,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7B1F,OAAA;MAAKyF,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7B1F,OAAA;QACE2F,GAAG,EAAExF,SAAU;QACfsF,SAAS,EAAC,aAAa;QACvB5D,KAAK,EAAE,GAAI;QACXwB,MAAM,EAAE,GAAI;QACZuC,QAAQ,EAAE;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,EACDvF,QAAQ,iBACPT,OAAA;QAAKyF,SAAS,EAAC,eAAe;QAAAC,QAAA,eAC5B1F,OAAA,CAACF,SAAS;UACRmG,QAAQ,EAAEvD,YAAa;UACvBwD,SAAS,EAAEvD;QAAc;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9F,EAAA,CA9PID,UAAU;EAAA,QAmBVL,WAAW;AAAA;AAAAuG,EAAA,GAnBXlG,UAAU;AAgQhB,eAAeA,UAAU;AAAC,IAAAkG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}