{"ast":null,"code":"class Ball {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.radius = 8;\n    this.speed = 400; // Increased base speed\n    this.dx = 0;\n    this.dy = 0;\n    this.initialX = x;\n    this.initialY = y;\n    this.isLaunched = false;\n  }\n  reset() {\n    this.x = this.initialX;\n    this.y = this.initialY;\n    this.dx = 0;\n    this.dy = 0;\n    this.isLaunched = false;\n  }\n  launch() {\n    if (!this.isLaunched) {\n      this.isLaunched = true;\n      this.dx = this.speed * Math.cos(-Math.PI / 4); // 45-degree angle\n      this.dy = this.speed * Math.sin(-Math.PI / 4);\n    }\n  }\n  stickToPaddle(paddle) {\n    if (!this.isLaunched) {\n      this.x = paddle.x + paddle.width / 2;\n      this.y = paddle.y - this.radius;\n    }\n  }\n  update(deltaTime) {\n    if (this.isLaunched) {\n      // Use deltaTime for smooth movement\n      this.x += this.dx * deltaTime;\n      this.y += this.dy * deltaTime;\n\n      // Bounce off walls\n      if (this.x - this.radius <= 0 || this.x + this.radius >= 800) {\n        this.dx = -this.dx;\n      }\n      if (this.y - this.radius <= 0) {\n        this.dy = -this.dy;\n      }\n    }\n  }\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n    ctx.fillStyle = '#00FF00';\n    ctx.fill();\n    ctx.closePath();\n  }\n  checkPaddleCollision(paddle) {\n    if (this.isLaunched) {\n      const hitBox = {\n        x: this.x - this.radius,\n        y: this.y - this.radius,\n        width: this.radius * 2,\n        height: this.radius * 2\n      };\n      return hitBox.x < paddle.x + paddle.width && hitBox.x + hitBox.width > paddle.x && hitBox.y < paddle.y + paddle.height && hitBox.y + hitBox.height > paddle.y;\n    }\n    return false;\n  }\n  bounceOffPaddle(paddle) {\n    // Calculate relative position of ball on paddle\n    const relativeIntersectX = paddle.x + paddle.width / 2 - this.x;\n\n    // Normalize the relative position to a value between -1 and 1\n    const normalizedIntersect = relativeIntersectX / (paddle.width / 2);\n\n    // Calculate bounce angle (between -60 and 60 degrees)\n    const bounceAngle = normalizedIntersect * Math.PI / 3;\n\n    // Update velocity while maintaining speed\n    this.dx = this.speed * -Math.sin(bounceAngle);\n    this.dy = -this.speed * Math.cos(bounceAngle);\n  }\n  checkBrickCollision(brick) {\n    if (!brick.isDestroyed() && this.isLaunched) {\n      const hitBox = {\n        x: this.x - this.radius,\n        y: this.y - this.radius,\n        width: this.radius * 2,\n        height: this.radius * 2\n      };\n      return hitBox.x < brick.x + brick.width && hitBox.x + hitBox.width > brick.x && hitBox.y < brick.y + brick.height && hitBox.y + hitBox.height > brick.y;\n    }\n    return false;\n  }\n  bounceOffBrick() {\n    this.dy = -this.dy;\n  }\n}\nexport default Ball;","map":{"version":3,"names":["Ball","constructor","x","y","radius","speed","dx","dy","initialX","initialY","isLaunched","reset","launch","Math","cos","PI","sin","stickToPaddle","paddle","width","update","deltaTime","draw","ctx","beginPath","arc","fillStyle","fill","closePath","checkPaddleCollision","hitBox","height","bounceOffPaddle","relativeIntersectX","normalizedIntersect","bounceAngle","checkBrickCollision","brick","isDestroyed","bounceOffBrick"],"sources":["C:/Users/noahm/OneDrive/Desktop/Coding/brick_blaster2/client/src/components/Game/entities/Ball.js"],"sourcesContent":["class Ball {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.radius = 8;\n    this.speed = 400; // Increased base speed\n    this.dx = 0;\n    this.dy = 0;\n    this.initialX = x;\n    this.initialY = y;\n    this.isLaunched = false;\n  }\n\n  reset() {\n    this.x = this.initialX;\n    this.y = this.initialY;\n    this.dx = 0;\n    this.dy = 0;\n    this.isLaunched = false;\n  }\n\n  launch() {\n    if (!this.isLaunched) {\n      this.isLaunched = true;\n      this.dx = this.speed * Math.cos(-Math.PI / 4); // 45-degree angle\n      this.dy = this.speed * Math.sin(-Math.PI / 4);\n    }\n  }\n\n  stickToPaddle(paddle) {\n    if (!this.isLaunched) {\n      this.x = paddle.x + paddle.width / 2;\n      this.y = paddle.y - this.radius;\n    }\n  }\n\n  update(deltaTime) {\n    if (this.isLaunched) {\n      // Use deltaTime for smooth movement\n      this.x += this.dx * deltaTime;\n      this.y += this.dy * deltaTime;\n\n      // Bounce off walls\n      if (this.x - this.radius <= 0 || this.x + this.radius >= 800) {\n        this.dx = -this.dx;\n      }\n      if (this.y - this.radius <= 0) {\n        this.dy = -this.dy;\n      }\n    }\n  }\n\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n    ctx.fillStyle = '#00FF00';\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  checkPaddleCollision(paddle) {\n    if (this.isLaunched) {\n      const hitBox = {\n        x: this.x - this.radius,\n        y: this.y - this.radius,\n        width: this.radius * 2,\n        height: this.radius * 2\n      };\n\n      return (hitBox.x < paddle.x + paddle.width &&\n              hitBox.x + hitBox.width > paddle.x &&\n              hitBox.y < paddle.y + paddle.height &&\n              hitBox.y + hitBox.height > paddle.y);\n    }\n    return false;\n  }\n\n  bounceOffPaddle(paddle) {\n    // Calculate relative position of ball on paddle\n    const relativeIntersectX = (paddle.x + (paddle.width / 2)) - this.x;\n    \n    // Normalize the relative position to a value between -1 and 1\n    const normalizedIntersect = relativeIntersectX / (paddle.width / 2);\n    \n    // Calculate bounce angle (between -60 and 60 degrees)\n    const bounceAngle = normalizedIntersect * Math.PI / 3;\n    \n    // Update velocity while maintaining speed\n    this.dx = this.speed * -Math.sin(bounceAngle);\n    this.dy = -this.speed * Math.cos(bounceAngle);\n  }\n\n  checkBrickCollision(brick) {\n    if (!brick.isDestroyed() && this.isLaunched) {\n      const hitBox = {\n        x: this.x - this.radius,\n        y: this.y - this.radius,\n        width: this.radius * 2,\n        height: this.radius * 2\n      };\n\n      return (hitBox.x < brick.x + brick.width &&\n              hitBox.x + hitBox.width > brick.x &&\n              hitBox.y < brick.y + brick.height &&\n              hitBox.y + hitBox.height > brick.y);\n    }\n    return false;\n  }\n\n  bounceOffBrick() {\n    this.dy = -this.dy;\n  }\n}\n\nexport default Ball;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}