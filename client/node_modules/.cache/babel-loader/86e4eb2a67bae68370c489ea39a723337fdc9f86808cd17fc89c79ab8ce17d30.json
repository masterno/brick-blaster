{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noahm\\\\OneDrive\\\\Desktop\\\\Coding\\\\brick_blaster2\\\\client\\\\src\\\\components\\\\Game\\\\GameCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport PauseMenu from '../UI/PauseMenu';\nimport GameOver from '../UI/GameOver';\nimport LevelManager from './LevelManager';\nimport '../../styles/components/GameCanvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameCanvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [gameObjects, setGameObjects] = useState(null);\n  const [isPaused, setIsPaused] = useState(false);\n  const navigate = useNavigate();\n  const levelManager = new LevelManager();\n\n  // Game state\n  const [score, setScore] = useState(0);\n  const [lives, setLives] = useState(3);\n  const [currentLevel, setCurrentLevel] = useState(1);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [isVictory, setIsVictory] = useState(false);\n  const [animationFrameId, setAnimationFrameId] = useState(null);\n\n  // Initialize game objects and start game loop\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Set canvas size\n    canvas.width = 800;\n    canvas.height = 600;\n    const ctx = canvas.getContext('2d');\n\n    // Initialize game objects\n    const objects = {\n      ball: new Ball(canvas.width / 2, canvas.height - 30),\n      paddle: new Paddle(canvas.width / 2 - 50, canvas.height - 20),\n      bricks: levelManager.loadLevel(currentLevel).bricks\n    };\n    setGameObjects(objects);\n    let lastTime = 0;\n    const targetFPS = 60;\n    const frameInterval = 1000 / targetFPS;\n\n    // Handle spacebar and mouse click for ball launch\n    const handleLaunch = e => {\n      if (!isPaused && !isGameOver && !objects.ball.isLaunched) {\n        if (e.type === 'keydown' && e.code === 'Space' || e.type === 'click') {\n          e.preventDefault();\n          objects.ball.launch();\n        }\n      }\n    };\n    window.addEventListener('keydown', handleLaunch);\n    canvas.addEventListener('click', handleLaunch);\n\n    // Game loop function\n    const gameLoop = timestamp => {\n      if (!lastTime) lastTime = timestamp;\n      const deltaTime = timestamp - lastTime;\n      if (deltaTime >= frameInterval) {\n        if (!isPaused && !isGameOver) {\n          // Clear canvas\n          ctx.fillStyle = '#000000';\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n          // Update game objects\n          objects.paddle.update();\n\n          // Make ball stick to paddle if not launched\n          if (!objects.ball.isLaunched) {\n            objects.ball.stickToPaddle(objects.paddle);\n          } else {\n            objects.ball.update();\n          }\n\n          // Check for ball-paddle collision\n          if (objects.ball.checkPaddleCollision(objects.paddle)) {\n            objects.ball.bounceOffPaddle(objects.paddle);\n          }\n\n          // Check for ball-brick collisions\n          objects.bricks.forEach((brick, index) => {\n            if (!brick.isDestroyed() && objects.ball.checkBrickCollision(brick)) {\n              objects.ball.bounceOffBrick();\n              if (brick.hit()) {\n                setScore(prev => prev + 100);\n                if (brick.isExplosive()) {\n                  objects.bricks.forEach((nearbyBrick, i) => {\n                    if (i !== index && !nearbyBrick.isDestroyed()) {\n                      const dx = nearbyBrick.x - brick.x;\n                      const dy = nearbyBrick.y - brick.y;\n                      const distance = Math.sqrt(dx * dx + dy * dy);\n                      if (distance < 100) {\n                        nearbyBrick.hit();\n                        setScore(prev => prev + 50);\n                      }\n                    }\n                  });\n                }\n              }\n            }\n          });\n\n          // Check if ball is lost\n          if (objects.ball.y + objects.ball.radius > canvas.height) {\n            setLives(prev => prev - 1);\n            if (lives > 1) {\n              objects.ball.reset();\n            } else {\n              setIsGameOver(true);\n            }\n          }\n\n          // Check if level is complete\n          if (objects.bricks.every(brick => brick.isDestroyed() || brick.type === 'unbreakable')) {\n            if (currentLevel < levelManager.getMaxLevel()) {\n              setCurrentLevel(prev => prev + 1);\n              objects.ball.reset();\n              objects.paddle.reset();\n              objects.bricks = levelManager.loadLevel(currentLevel + 1).bricks;\n            } else {\n              setIsVictory(true);\n              setIsGameOver(true);\n            }\n          }\n\n          // Draw objects\n          objects.bricks.forEach(brick => brick.draw(ctx));\n          objects.ball.draw(ctx);\n          objects.paddle.draw(ctx);\n\n          // Draw HUD\n          ctx.font = '16px Courier New';\n          ctx.fillStyle = '#00FF00';\n\n          // Score on the left\n          ctx.textAlign = 'left';\n          ctx.fillText(`Score: ${score}`, 10, 40);\n\n          // Level in the center\n          ctx.textAlign = 'center';\n          ctx.fillText(`Level: ${currentLevel}`, canvas.width / 2, 40);\n\n          // Lives on the right\n          ctx.textAlign = 'right';\n          ctx.fillText(`Lives: ${lives}`, canvas.width - 10, 40);\n          lastTime = timestamp;\n        }\n      }\n\n      // Request next frame\n      const id = requestAnimationFrame(gameLoop);\n      setAnimationFrameId(id);\n    };\n\n    // Start game loop\n    gameLoop();\n\n    // Add pause event listener\n    const handlePause = e => {\n      if (e.key === 'Escape') {\n        setIsPaused(prev => !prev);\n      }\n    };\n    window.addEventListener('keydown', handlePause);\n\n    // Cleanup\n    return () => {\n      if (animationFrameId) {\n        cancelAnimationFrame(animationFrameId);\n      }\n      if (objects.paddle) {\n        objects.paddle.cleanup();\n      }\n      window.removeEventListener('keydown', handlePause);\n      window.removeEventListener('keydown', handleLaunch);\n      canvas.removeEventListener('click', handleLaunch);\n    };\n  }, [currentLevel, score, lives, isPaused, isGameOver, animationFrameId]);\n  const handleRestart = () => {\n    if (gameObjects) {\n      setScore(0);\n      setLives(3);\n      setCurrentLevel(1);\n      setIsGameOver(false);\n      setIsVictory(false);\n      setIsPaused(false);\n      gameObjects.ball.reset();\n      gameObjects.paddle.reset();\n      gameObjects.bricks = levelManager.loadLevel(1).bricks;\n    }\n  };\n  const handleResume = () => {\n    setIsPaused(false);\n  };\n  const handleMainMenu = () => {\n    if (animationFrameId) {\n      cancelAnimationFrame(animationFrameId);\n    }\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"game-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), isPaused && !isGameOver && /*#__PURE__*/_jsxDEV(PauseMenu, {\n      onResume: handleResume,\n      onRestart: handleRestart,\n      onMainMenu: handleMainMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this), isGameOver && /*#__PURE__*/_jsxDEV(GameOver, {\n      score: score,\n      level: currentLevel,\n      onRestart: handleRestart,\n      onMainMenu: handleMainMenu,\n      isVictory: isVictory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n_s(GameCanvas, \"ArCbB8yZq5uqPsqfguPVKwq4wGM=\", false, function () {\n  return [useNavigate];\n});\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useNavigate","Ball","Paddle","PauseMenu","GameOver","LevelManager","jsxDEV","_jsxDEV","GameCanvas","_s","canvasRef","gameObjects","setGameObjects","isPaused","setIsPaused","navigate","levelManager","score","setScore","lives","setLives","currentLevel","setCurrentLevel","isGameOver","setIsGameOver","isVictory","setIsVictory","animationFrameId","setAnimationFrameId","canvas","current","width","height","ctx","getContext","objects","ball","paddle","bricks","loadLevel","lastTime","targetFPS","frameInterval","handleLaunch","e","isLaunched","type","code","preventDefault","launch","window","addEventListener","gameLoop","timestamp","deltaTime","fillStyle","fillRect","update","stickToPaddle","checkPaddleCollision","bounceOffPaddle","forEach","brick","index","isDestroyed","checkBrickCollision","bounceOffBrick","hit","prev","isExplosive","nearbyBrick","i","dx","x","dy","y","distance","Math","sqrt","radius","reset","every","getMaxLevel","draw","font","textAlign","fillText","id","requestAnimationFrame","handlePause","key","cancelAnimationFrame","cleanup","removeEventListener","handleRestart","handleResume","handleMainMenu","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onResume","onRestart","onMainMenu","level","_c","$RefreshReg$"],"sources":["C:/Users/noahm/OneDrive/Desktop/Coding/brick_blaster2/client/src/components/Game/GameCanvas.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport PauseMenu from '../UI/PauseMenu';\nimport GameOver from '../UI/GameOver';\nimport LevelManager from './LevelManager';\nimport '../../styles/components/GameCanvas.css';\n\nconst GameCanvas = () => {\n  const canvasRef = useRef(null);\n  const [gameObjects, setGameObjects] = useState(null);\n  const [isPaused, setIsPaused] = useState(false);\n  const navigate = useNavigate();\n  const levelManager = new LevelManager();\n  \n  // Game state\n  const [score, setScore] = useState(0);\n  const [lives, setLives] = useState(3);\n  const [currentLevel, setCurrentLevel] = useState(1);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [isVictory, setIsVictory] = useState(false);\n  const [animationFrameId, setAnimationFrameId] = useState(null);\n\n  // Initialize game objects and start game loop\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Set canvas size\n    canvas.width = 800;\n    canvas.height = 600;\n    const ctx = canvas.getContext('2d');\n    \n    // Initialize game objects\n    const objects = {\n      ball: new Ball(canvas.width / 2, canvas.height - 30),\n      paddle: new Paddle(canvas.width / 2 - 50, canvas.height - 20),\n      bricks: levelManager.loadLevel(currentLevel).bricks\n    };\n    setGameObjects(objects);\n\n    let lastTime = 0;\n    const targetFPS = 60;\n    const frameInterval = 1000 / targetFPS;\n\n    // Handle spacebar and mouse click for ball launch\n    const handleLaunch = (e) => {\n      if (!isPaused && !isGameOver && !objects.ball.isLaunched) {\n        if ((e.type === 'keydown' && e.code === 'Space') || e.type === 'click') {\n          e.preventDefault();\n          objects.ball.launch();\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleLaunch);\n    canvas.addEventListener('click', handleLaunch);\n\n    // Game loop function\n    const gameLoop = (timestamp) => {\n      if (!lastTime) lastTime = timestamp;\n      const deltaTime = timestamp - lastTime;\n\n      if (deltaTime >= frameInterval) {\n        if (!isPaused && !isGameOver) {\n          // Clear canvas\n          ctx.fillStyle = '#000000';\n          ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n          // Update game objects\n          objects.paddle.update();\n          \n          // Make ball stick to paddle if not launched\n          if (!objects.ball.isLaunched) {\n            objects.ball.stickToPaddle(objects.paddle);\n          } else {\n            objects.ball.update();\n          }\n\n          // Check for ball-paddle collision\n          if (objects.ball.checkPaddleCollision(objects.paddle)) {\n            objects.ball.bounceOffPaddle(objects.paddle);\n          }\n\n          // Check for ball-brick collisions\n          objects.bricks.forEach((brick, index) => {\n            if (!brick.isDestroyed() && objects.ball.checkBrickCollision(brick)) {\n              objects.ball.bounceOffBrick();\n              if (brick.hit()) {\n                setScore(prev => prev + 100);\n                if (brick.isExplosive()) {\n                  objects.bricks.forEach((nearbyBrick, i) => {\n                    if (i !== index && !nearbyBrick.isDestroyed()) {\n                      const dx = nearbyBrick.x - brick.x;\n                      const dy = nearbyBrick.y - brick.y;\n                      const distance = Math.sqrt(dx * dx + dy * dy);\n                      if (distance < 100) {\n                        nearbyBrick.hit();\n                        setScore(prev => prev + 50);\n                      }\n                    }\n                  });\n                }\n              }\n            }\n          });\n\n          // Check if ball is lost\n          if (objects.ball.y + objects.ball.radius > canvas.height) {\n            setLives(prev => prev - 1);\n            if (lives > 1) {\n              objects.ball.reset();\n            } else {\n              setIsGameOver(true);\n            }\n          }\n\n          // Check if level is complete\n          if (objects.bricks.every(brick => brick.isDestroyed() || brick.type === 'unbreakable')) {\n            if (currentLevel < levelManager.getMaxLevel()) {\n              setCurrentLevel(prev => prev + 1);\n              objects.ball.reset();\n              objects.paddle.reset();\n              objects.bricks = levelManager.loadLevel(currentLevel + 1).bricks;\n            } else {\n              setIsVictory(true);\n              setIsGameOver(true);\n            }\n          }\n\n          // Draw objects\n          objects.bricks.forEach(brick => brick.draw(ctx));\n          objects.ball.draw(ctx);\n          objects.paddle.draw(ctx);\n\n          // Draw HUD\n          ctx.font = '16px Courier New';\n          ctx.fillStyle = '#00FF00';\n          \n          // Score on the left\n          ctx.textAlign = 'left';\n          ctx.fillText(`Score: ${score}`, 10, 40);\n          \n          // Level in the center\n          ctx.textAlign = 'center';\n          ctx.fillText(`Level: ${currentLevel}`, canvas.width / 2, 40);\n          \n          // Lives on the right\n          ctx.textAlign = 'right';\n          ctx.fillText(`Lives: ${lives}`, canvas.width - 10, 40);\n\n          lastTime = timestamp;\n        }\n      }\n\n      // Request next frame\n      const id = requestAnimationFrame(gameLoop);\n      setAnimationFrameId(id);\n    };\n\n    // Start game loop\n    gameLoop();\n\n    // Add pause event listener\n    const handlePause = (e) => {\n      if (e.key === 'Escape') {\n        setIsPaused(prev => !prev);\n      }\n    };\n\n    window.addEventListener('keydown', handlePause);\n\n    // Cleanup\n    return () => {\n      if (animationFrameId) {\n        cancelAnimationFrame(animationFrameId);\n      }\n      if (objects.paddle) {\n        objects.paddle.cleanup();\n      }\n      window.removeEventListener('keydown', handlePause);\n      window.removeEventListener('keydown', handleLaunch);\n      canvas.removeEventListener('click', handleLaunch);\n    };\n  }, [currentLevel, score, lives, isPaused, isGameOver, animationFrameId]);\n\n  const handleRestart = () => {\n    if (gameObjects) {\n      setScore(0);\n      setLives(3);\n      setCurrentLevel(1);\n      setIsGameOver(false);\n      setIsVictory(false);\n      setIsPaused(false);\n      \n      gameObjects.ball.reset();\n      gameObjects.paddle.reset();\n      gameObjects.bricks = levelManager.loadLevel(1).bricks;\n    }\n  };\n\n  const handleResume = () => {\n    setIsPaused(false);\n  };\n\n  const handleMainMenu = () => {\n    if (animationFrameId) {\n      cancelAnimationFrame(animationFrameId);\n    }\n    navigate('/');\n  };\n\n  return (\n    <div className=\"game-container\">\n      <canvas\n        ref={canvasRef}\n        className=\"game-canvas\"\n      />\n      \n      {isPaused && !isGameOver && (\n        <PauseMenu\n          onResume={handleResume}\n          onRestart={handleRestart}\n          onMainMenu={handleMainMenu}\n        />\n      )}\n      \n      {isGameOver && (\n        <GameOver\n          score={score}\n          level={currentLevel}\n          onRestart={handleRestart}\n          onMainMenu={handleMainMenu}\n          isVictory={isVictory}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default GameCanvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}