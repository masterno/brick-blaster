{"ast":null,"code":"class Ball {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.radius = 8;\n    this.speed = 5;\n    this.dx = this.speed;\n    this.dy = -this.speed;\n    this.initialX = x;\n    this.initialY = y;\n  }\n  reset() {\n    this.x = this.initialX;\n    this.y = this.initialY;\n    this.dx = this.speed;\n    this.dy = -this.speed;\n  }\n  update() {\n    // Move ball\n    this.x += this.dx;\n    this.y += this.dy;\n\n    // Check wall collisions\n    if (this.x - this.radius <= 0 || this.x + this.radius >= 800) {\n      this.dx = -this.dx;\n    }\n    if (this.y - this.radius <= 0) {\n      this.dy = -this.dy;\n    }\n  }\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n    ctx.fillStyle = '#FFFFFF';\n    ctx.fill();\n    ctx.closePath();\n  }\n  checkPaddleCollision(paddle) {\n    const distX = Math.abs(this.x - paddle.x - paddle.width / 2);\n    const distY = Math.abs(this.y - paddle.y - paddle.height / 2);\n    if (distX > paddle.width / 2 + this.radius) {\n      return false;\n    }\n    if (distY > paddle.height / 2 + this.radius) {\n      return false;\n    }\n    if (distX <= paddle.width / 2) {\n      return true;\n    }\n    if (distY <= paddle.height / 2) {\n      return true;\n    }\n    const dx = distX - paddle.width / 2;\n    const dy = distY - paddle.height / 2;\n    return dx * dx + dy * dy <= this.radius * this.radius;\n  }\n  checkBrickCollision(brick) {\n    const distX = Math.abs(this.x - brick.x - brick.width / 2);\n    const distY = Math.abs(this.y - brick.y - brick.height / 2);\n    if (distX > brick.width / 2 + this.radius) {\n      return false;\n    }\n    if (distY > brick.height / 2 + this.radius) {\n      return false;\n    }\n    if (distX <= brick.width / 2) {\n      return true;\n    }\n    if (distY <= brick.height / 2) {\n      return true;\n    }\n    const dx = distX - brick.width / 2;\n    const dy = distY - brick.height / 2;\n    return dx * dx + dy * dy <= this.radius * this.radius;\n  }\n  bounceOffPaddle(paddle) {\n    // Calculate relative position of ball on paddle\n    const relativeIntersectX = this.x - (paddle.x + paddle.width / 2);\n    // Normalize the value\n    const normalizedRelativeIntersectX = relativeIntersectX / (paddle.width / 2);\n    // Calculate bounce angle (maximum 75 degrees)\n    const bounceAngle = normalizedRelativeIntersectX * Math.PI / 3;\n\n    // Update velocity based on bounce angle\n    this.dx = this.speed * Math.sin(bounceAngle);\n    this.dy = -this.speed * Math.cos(bounceAngle);\n  }\n  bounceOffBrick() {\n    // Simple brick collision - just reverse vertical direction\n    this.dy = -this.dy;\n  }\n}\nexport default Ball;","map":{"version":3,"names":["Ball","constructor","x","y","radius","speed","dx","dy","initialX","initialY","reset","update","draw","ctx","beginPath","arc","Math","PI","fillStyle","fill","closePath","checkPaddleCollision","paddle","distX","abs","width","distY","height","checkBrickCollision","brick","bounceOffPaddle","relativeIntersectX","normalizedRelativeIntersectX","bounceAngle","sin","cos","bounceOffBrick"],"sources":["C:/Users/noahm/OneDrive/Desktop/Coding/brick_blaster2/client/src/components/Game/entities/Ball.js"],"sourcesContent":["class Ball {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.radius = 8;\n    this.speed = 5;\n    this.dx = this.speed;\n    this.dy = -this.speed;\n    this.initialX = x;\n    this.initialY = y;\n  }\n\n  reset() {\n    this.x = this.initialX;\n    this.y = this.initialY;\n    this.dx = this.speed;\n    this.dy = -this.speed;\n  }\n\n  update() {\n    // Move ball\n    this.x += this.dx;\n    this.y += this.dy;\n\n    // Check wall collisions\n    if (this.x - this.radius <= 0 || this.x + this.radius >= 800) {\n      this.dx = -this.dx;\n    }\n    if (this.y - this.radius <= 0) {\n      this.dy = -this.dy;\n    }\n  }\n\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n    ctx.fillStyle = '#FFFFFF';\n    ctx.fill();\n    ctx.closePath();\n  }\n\n  checkPaddleCollision(paddle) {\n    const distX = Math.abs(this.x - paddle.x - paddle.width/2);\n    const distY = Math.abs(this.y - paddle.y - paddle.height/2);\n\n    if (distX > (paddle.width/2 + this.radius)) { return false; }\n    if (distY > (paddle.height/2 + this.radius)) { return false; }\n\n    if (distX <= (paddle.width/2)) { return true; }\n    if (distY <= (paddle.height/2)) { return true; }\n\n    const dx = distX - paddle.width/2;\n    const dy = distY - paddle.height/2;\n    return (dx * dx + dy * dy <= (this.radius * this.radius));\n  }\n\n  checkBrickCollision(brick) {\n    const distX = Math.abs(this.x - brick.x - brick.width/2);\n    const distY = Math.abs(this.y - brick.y - brick.height/2);\n\n    if (distX > (brick.width/2 + this.radius)) { return false; }\n    if (distY > (brick.height/2 + this.radius)) { return false; }\n\n    if (distX <= (brick.width/2)) { return true; }\n    if (distY <= (brick.height/2)) { return true; }\n\n    const dx = distX - brick.width/2;\n    const dy = distY - brick.height/2;\n    return (dx * dx + dy * dy <= (this.radius * this.radius));\n  }\n\n  bounceOffPaddle(paddle) {\n    // Calculate relative position of ball on paddle\n    const relativeIntersectX = (this.x - (paddle.x + paddle.width/2));\n    // Normalize the value\n    const normalizedRelativeIntersectX = relativeIntersectX / (paddle.width/2);\n    // Calculate bounce angle (maximum 75 degrees)\n    const bounceAngle = normalizedRelativeIntersectX * Math.PI/3;\n    \n    // Update velocity based on bounce angle\n    this.dx = this.speed * Math.sin(bounceAngle);\n    this.dy = -this.speed * Math.cos(bounceAngle);\n  }\n\n  bounceOffBrick() {\n    // Simple brick collision - just reverse vertical direction\n    this.dy = -this.dy;\n  }\n}\n\nexport default Ball;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}