{"ast":null,"code":"class Ball {\n  constructor(x, y) {\n    this.initialX = x;\n    this.initialY = y;\n    this.x = x;\n    this.y = y;\n    this.radius = 8;\n    this.dx = 4;\n    this.dy = -4;\n    this.baseSpeed = 4;\n  }\n  reset() {\n    this.x = this.initialX;\n    this.y = this.initialY;\n    this.dx = this.baseSpeed;\n    this.dy = -this.baseSpeed;\n  }\n  setSpeed(speed) {\n    this.baseSpeed = speed;\n    // Maintain direction but update speed\n    const currentAngle = Math.atan2(this.dy, this.dx);\n    this.dx = Math.cos(currentAngle) * speed;\n    this.dy = Math.sin(currentAngle) * speed;\n  }\n  update() {\n    this.x += this.dx;\n    this.y += this.dy;\n\n    // Wall collisions\n    if (this.x + this.radius > 800 || this.x - this.radius < 0) {\n      this.dx = -this.dx;\n    }\n    if (this.y - this.radius < 0) {\n      this.dy = -this.dy;\n    }\n  }\n  checkCollision(object) {\n    if ('radius' in object) {\n      // Circle collision (not used currently)\n      const dx = this.x - object.x;\n      const dy = this.y - object.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      return distance < this.radius + object.radius;\n    } else {\n      // Rectangle collision (paddle and bricks)\n      const closestX = Math.max(object.x, Math.min(this.x, object.x + object.width));\n      const closestY = Math.max(object.y, Math.min(this.y, object.y + object.height));\n      const distanceX = this.x - closestX;\n      const distanceY = this.y - closestY;\n      return distanceX * distanceX + distanceY * distanceY < this.radius * this.radius;\n    }\n  }\n  bounceOffPaddle(paddle) {\n    // Calculate relative position of ball on paddle\n    const relativeIntersectX = (this.x - (paddle.x + paddle.width / 2)) / (paddle.width / 2);\n\n    // Calculate bounce angle (-60 to 60 degrees)\n    const bounceAngle = relativeIntersectX * Math.PI / 3;\n\n    // Set new velocity\n    const speed = Math.sqrt(this.dx * this.dx + this.dy * this.dy);\n    this.dx = speed * Math.sin(bounceAngle);\n    this.dy = -speed * Math.cos(bounceAngle);\n  }\n  bounceOffBrick(brick) {\n    // Determine which side of the brick was hit\n    const hitLeft = this.x < brick.x;\n    const hitRight = this.x > brick.x + brick.width;\n    const hitTop = this.y < brick.y;\n    const hitBottom = this.y > brick.y + brick.height;\n    if (hitLeft || hitRight) {\n      this.dx = -this.dx;\n    }\n    if (hitTop || hitBottom) {\n      this.dy = -this.dy;\n    }\n  }\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n    ctx.fillStyle = '#FFFFFF';\n    ctx.fill();\n    ctx.closePath();\n  }\n}\nexport default Ball;","map":{"version":3,"names":["Ball","constructor","x","y","initialX","initialY","radius","dx","dy","baseSpeed","reset","setSpeed","speed","currentAngle","Math","atan2","cos","sin","update","checkCollision","object","distance","sqrt","closestX","max","min","width","closestY","height","distanceX","distanceY","bounceOffPaddle","paddle","relativeIntersectX","bounceAngle","PI","bounceOffBrick","brick","hitLeft","hitRight","hitTop","hitBottom","draw","ctx","beginPath","arc","fillStyle","fill","closePath"],"sources":["c:/Users/noahm/OneDrive/Desktop/Coding/brick_blaster2/client/src/components/Game/entities/Ball.js"],"sourcesContent":["class Ball {\n  constructor(x, y) {\n    this.initialX = x;\n    this.initialY = y;\n    this.x = x;\n    this.y = y;\n    this.radius = 8;\n    this.dx = 4;\n    this.dy = -4;\n    this.baseSpeed = 4;\n  }\n\n  reset() {\n    this.x = this.initialX;\n    this.y = this.initialY;\n    this.dx = this.baseSpeed;\n    this.dy = -this.baseSpeed;\n  }\n\n  setSpeed(speed) {\n    this.baseSpeed = speed;\n    // Maintain direction but update speed\n    const currentAngle = Math.atan2(this.dy, this.dx);\n    this.dx = Math.cos(currentAngle) * speed;\n    this.dy = Math.sin(currentAngle) * speed;\n  }\n\n  update() {\n    this.x += this.dx;\n    this.y += this.dy;\n\n    // Wall collisions\n    if (this.x + this.radius > 800 || this.x - this.radius < 0) {\n      this.dx = -this.dx;\n    }\n    if (this.y - this.radius < 0) {\n      this.dy = -this.dy;\n    }\n  }\n\n  checkCollision(object) {\n    if ('radius' in object) {\n      // Circle collision (not used currently)\n      const dx = this.x - object.x;\n      const dy = this.y - object.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      return distance < this.radius + object.radius;\n    } else {\n      // Rectangle collision (paddle and bricks)\n      const closestX = Math.max(object.x, Math.min(this.x, object.x + object.width));\n      const closestY = Math.max(object.y, Math.min(this.y, object.y + object.height));\n      \n      const distanceX = this.x - closestX;\n      const distanceY = this.y - closestY;\n      \n      return (distanceX * distanceX + distanceY * distanceY) < (this.radius * this.radius);\n    }\n  }\n\n  bounceOffPaddle(paddle) {\n    // Calculate relative position of ball on paddle\n    const relativeIntersectX = (this.x - (paddle.x + paddle.width / 2)) / (paddle.width / 2);\n    \n    // Calculate bounce angle (-60 to 60 degrees)\n    const bounceAngle = relativeIntersectX * Math.PI / 3;\n    \n    // Set new velocity\n    const speed = Math.sqrt(this.dx * this.dx + this.dy * this.dy);\n    this.dx = speed * Math.sin(bounceAngle);\n    this.dy = -speed * Math.cos(bounceAngle);\n  }\n\n  bounceOffBrick(brick) {\n    // Determine which side of the brick was hit\n    const hitLeft = this.x < brick.x;\n    const hitRight = this.x > brick.x + brick.width;\n    const hitTop = this.y < brick.y;\n    const hitBottom = this.y > brick.y + brick.height;\n\n    if (hitLeft || hitRight) {\n      this.dx = -this.dx;\n    }\n    if (hitTop || hitBottom) {\n      this.dy = -this.dy;\n    }\n  }\n\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\n    ctx.fillStyle = '#FFFFFF';\n    ctx.fill();\n    ctx.closePath();\n  }\n}\n\nexport default Ball;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}