{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noahm\\\\OneDrive\\\\Desktop\\\\Coding\\\\brick_blaster2\\\\client\\\\src\\\\components\\\\Game\\\\GameCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useCallback } from 'react';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport { useGameLoop } from './GameLoop';\nimport LevelManager from './LevelManager';\nimport '../../styles/components/GameCanvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameCanvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const gameObjectsRef = useRef(null);\n  const requestIdRef = useRef({\n    id: null,\n    lastTime: null\n  });\n  const levelManagerRef = useRef(new LevelManager());\n  const {\n    isRunning,\n    isPaused,\n    isGameOver,\n    setScore,\n    score,\n    lives,\n    setLives,\n    currentLevel,\n    setIsPaused,\n    setIsGameOver,\n    setIsVictory,\n    stop\n  } = useGameLoop();\n\n  // Draw HUD function\n  const drawHUD = useCallback(ctx => {\n    ctx.save();\n    ctx.font = '16px Arial';\n    ctx.fillStyle = '#00FF00';\n    ctx.textAlign = 'left';\n    ctx.fillText(`Score: ${score}`, 10, 30);\n    ctx.textAlign = 'center';\n    ctx.fillText(`Level: ${currentLevel}`, canvasRef.current.width / 2, 30);\n    ctx.textAlign = 'right';\n    ctx.fillText(`Lives: ${lives}`, canvasRef.current.width - 10, 30);\n    ctx.restore();\n  }, [score, lives, currentLevel]);\n\n  // Handle ball out of bounds\n  const handleBallOut = useCallback(objects => {\n    setLives(prev => {\n      const newLives = prev - 1;\n      if (newLives <= 0) {\n        setIsGameOver(true);\n        stop();\n      }\n      return newLives;\n    });\n    if (lives > 1) {\n      objects.ball.reset();\n      objects.paddle.reset();\n    }\n  }, [lives, setLives, setIsGameOver, stop]);\n  const resetLevel = useCallback(() => {\n    if (gameObjectsRef.current) {\n      const levelData = levelManagerRef.current.loadLevel(currentLevel);\n      gameObjectsRef.current.bricks = levelData.bricks;\n      gameObjectsRef.current.ball.reset();\n      gameObjectsRef.current.paddle.reset();\n    }\n  }, [currentLevel]);\n\n  // Game loop\n  const gameLoop = useCallback(timestamp => {\n    if (!canvasRef.current) return;\n    const ctx = canvasRef.current.getContext('2d', {\n      alpha: false\n    });\n    if (!requestIdRef.current.lastTime) {\n      requestIdRef.current.lastTime = timestamp;\n      requestIdRef.current.id = requestAnimationFrame(gameLoop);\n      return;\n    }\n    const deltaTime = Math.min((timestamp - requestIdRef.current.lastTime) / 1000, 0.032);\n    requestIdRef.current.lastTime = timestamp;\n    if (!isPaused && !isGameOver) {\n      const objects = gameObjectsRef.current;\n\n      // Clear canvas\n      ctx.fillStyle = 'rgb(0, 0, 0)';\n      ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n      // Update game objects\n      objects.paddle.update(deltaTime);\n      if (!objects.ball.isLaunched) {\n        objects.ball.stickToPaddle(objects.paddle);\n      } else {\n        objects.ball.update(deltaTime);\n      }\n\n      // Draw game objects\n      ctx.save();\n      objects.bricks.forEach(brick => {\n        if (!brick.isDestroyed()) {\n          brick.draw(ctx);\n        }\n      });\n      objects.ball.draw(ctx);\n      objects.paddle.draw(ctx);\n      ctx.restore();\n\n      // Draw HUD\n      drawHUD(ctx);\n\n      // Handle collisions\n      if (objects.ball.checkPaddleCollision(objects.paddle)) {\n        objects.ball.bounceOffPaddle(objects.paddle);\n      }\n      objects.bricks.forEach(brick => {\n        if (!brick.isDestroyed() && objects.ball.checkBrickCollision(brick)) {\n          objects.ball.bounceOffBrick(brick);\n          if (brick.hit()) {\n            setScore(prev => prev + 100);\n          }\n        }\n      });\n\n      // Check if ball is out of bounds\n      if (objects.ball.isLaunched && objects.ball.y > canvasRef.current.height) {\n        handleBallOut(objects);\n      }\n    }\n    requestIdRef.current.id = requestAnimationFrame(gameLoop);\n  }, [isPaused, isGameOver, handleBallOut, drawHUD, setScore]);\n\n  // Keyboard handlers\n  const handleKeyDown = useCallback(e => {\n    if (!isPaused && !isGameOver) {\n      const objects = gameObjectsRef.current;\n      switch (e.key.toLowerCase()) {\n        case 'a':\n        case 'arrowleft':\n          objects.paddle.moveLeft();\n          break;\n        case 'd':\n        case 'arrowright':\n          objects.paddle.moveRight();\n          break;\n        case ' ':\n          if (objects.ball) objects.ball.launch();\n          break;\n        case 'escape':\n          setIsPaused(prev => !prev);\n          break;\n        default:\n          break;\n      }\n    }\n  }, [isPaused, isGameOver, setIsPaused]);\n  const handleKeyUp = useCallback(e => {\n    if (!isPaused && !isGameOver) {\n      const objects = gameObjectsRef.current;\n      switch (e.key.toLowerCase()) {\n        case 'a':\n        case 'arrowleft':\n          objects.paddle.stopLeft();\n          break;\n        case 'd':\n        case 'arrowright':\n          objects.paddle.stopRight();\n          break;\n        default:\n          break;\n      }\n    }\n  }, [isPaused, isGameOver]);\n  const handleRestart = useCallback(() => {\n    if (gameObjectsRef.current) {\n      resetLevel();\n      setScore(0);\n      setLives(3);\n      setIsGameOver(false);\n      setIsVictory(false);\n      setIsPaused(false);\n    }\n  }, [resetLevel, setScore, setLives, setIsGameOver, setIsVictory, setIsPaused]);\n\n  // Setup effect\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Set canvas size\n    canvas.width = 800;\n    canvas.height = 600;\n\n    // Initialize game objects\n    const paddleY = canvas.height - 40;\n    gameObjectsRef.current = {\n      paddle: new Paddle(canvas.width / 2 - 50, paddleY),\n      ball: new Ball(canvas.width / 2, paddleY - 10),\n      bricks: []\n    };\n\n    // Load initial level\n    resetLevel();\n\n    // Start game loop\n    requestIdRef.current.id = requestAnimationFrame(gameLoop);\n\n    // Add event listeners\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n    return () => {\n      if (requestIdRef.current.id) {\n        cancelAnimationFrame(requestIdRef.current.id);\n      }\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [gameLoop, handleKeyDown, handleKeyUp, resetLevel]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    className: \"game-canvas\",\n    tabIndex: 0\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n_s(GameCanvas, \"U/hy3nYoBfwDexUU+Qr92KmmafE=\", false, function () {\n  return [useGameLoop];\n});\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","useCallback","Ball","Paddle","useGameLoop","LevelManager","jsxDEV","_jsxDEV","GameCanvas","_s","canvasRef","gameObjectsRef","requestIdRef","id","lastTime","levelManagerRef","isRunning","isPaused","isGameOver","setScore","score","lives","setLives","currentLevel","setIsPaused","setIsGameOver","setIsVictory","stop","drawHUD","ctx","save","font","fillStyle","textAlign","fillText","current","width","restore","handleBallOut","objects","prev","newLives","ball","reset","paddle","resetLevel","levelData","loadLevel","bricks","gameLoop","timestamp","getContext","alpha","requestAnimationFrame","deltaTime","Math","min","fillRect","height","update","isLaunched","stickToPaddle","forEach","brick","isDestroyed","draw","checkPaddleCollision","bounceOffPaddle","checkBrickCollision","bounceOffBrick","hit","y","handleKeyDown","e","key","toLowerCase","moveLeft","moveRight","launch","handleKeyUp","stopLeft","stopRight","handleRestart","canvas","paddleY","window","addEventListener","cancelAnimationFrame","removeEventListener","ref","className","tabIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/noahm/OneDrive/Desktop/Coding/brick_blaster2/client/src/components/Game/GameCanvas.js"],"sourcesContent":["import React, { useEffect, useRef, useCallback } from 'react';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport { useGameLoop } from './GameLoop';\nimport LevelManager from './LevelManager';\nimport '../../styles/components/GameCanvas.css';\n\nconst GameCanvas = () => {\n  const canvasRef = useRef(null);\n  const gameObjectsRef = useRef(null);\n  const requestIdRef = useRef({ id: null, lastTime: null });\n  const levelManagerRef = useRef(new LevelManager());\n\n  const {\n    isRunning,\n    isPaused,\n    isGameOver,\n    setScore,\n    score,\n    lives,\n    setLives,\n    currentLevel,\n    setIsPaused,\n    setIsGameOver,\n    setIsVictory,\n    stop\n  } = useGameLoop();\n\n  // Draw HUD function\n  const drawHUD = useCallback((ctx) => {\n    ctx.save();\n    ctx.font = '16px Arial';\n    ctx.fillStyle = '#00FF00';\n    ctx.textAlign = 'left';\n    ctx.fillText(`Score: ${score}`, 10, 30);\n    ctx.textAlign = 'center';\n    ctx.fillText(`Level: ${currentLevel}`, canvasRef.current.width / 2, 30);\n    ctx.textAlign = 'right';\n    ctx.fillText(`Lives: ${lives}`, canvasRef.current.width - 10, 30);\n    ctx.restore();\n  }, [score, lives, currentLevel]);\n\n  // Handle ball out of bounds\n  const handleBallOut = useCallback((objects) => {\n    setLives(prev => {\n      const newLives = prev - 1;\n      if (newLives <= 0) {\n        setIsGameOver(true);\n        stop();\n      }\n      return newLives;\n    });\n    \n    if (lives > 1) {\n      objects.ball.reset();\n      objects.paddle.reset();\n    }\n  }, [lives, setLives, setIsGameOver, stop]);\n\n  const resetLevel = useCallback(() => {\n    if (gameObjectsRef.current) {\n      const levelData = levelManagerRef.current.loadLevel(currentLevel);\n      gameObjectsRef.current.bricks = levelData.bricks;\n      gameObjectsRef.current.ball.reset();\n      gameObjectsRef.current.paddle.reset();\n    }\n  }, [currentLevel]);\n\n  // Game loop\n  const gameLoop = useCallback((timestamp) => {\n    if (!canvasRef.current) return;\n    const ctx = canvasRef.current.getContext('2d', { alpha: false });\n\n    if (!requestIdRef.current.lastTime) {\n      requestIdRef.current.lastTime = timestamp;\n      requestIdRef.current.id = requestAnimationFrame(gameLoop);\n      return;\n    }\n    \n    const deltaTime = Math.min((timestamp - requestIdRef.current.lastTime) / 1000, 0.032);\n    requestIdRef.current.lastTime = timestamp;\n\n    if (!isPaused && !isGameOver) {\n      const objects = gameObjectsRef.current;\n      \n      // Clear canvas\n      ctx.fillStyle = 'rgb(0, 0, 0)';\n      ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n      // Update game objects\n      objects.paddle.update(deltaTime);\n      \n      if (!objects.ball.isLaunched) {\n        objects.ball.stickToPaddle(objects.paddle);\n      } else {\n        objects.ball.update(deltaTime);\n      }\n\n      // Draw game objects\n      ctx.save();\n      objects.bricks.forEach(brick => {\n        if (!brick.isDestroyed()) {\n          brick.draw(ctx);\n        }\n      });\n      objects.ball.draw(ctx);\n      objects.paddle.draw(ctx);\n      ctx.restore();\n\n      // Draw HUD\n      drawHUD(ctx);\n\n      // Handle collisions\n      if (objects.ball.checkPaddleCollision(objects.paddle)) {\n        objects.ball.bounceOffPaddle(objects.paddle);\n      }\n\n      objects.bricks.forEach((brick) => {\n        if (!brick.isDestroyed() && objects.ball.checkBrickCollision(brick)) {\n          objects.ball.bounceOffBrick(brick);\n          if (brick.hit()) {\n            setScore(prev => prev + 100);\n          }\n        }\n      });\n\n      // Check if ball is out of bounds\n      if (objects.ball.isLaunched && objects.ball.y > canvasRef.current.height) {\n        handleBallOut(objects);\n      }\n    }\n\n    requestIdRef.current.id = requestAnimationFrame(gameLoop);\n  }, [isPaused, isGameOver, handleBallOut, drawHUD, setScore]);\n\n  // Keyboard handlers\n  const handleKeyDown = useCallback((e) => {\n    if (!isPaused && !isGameOver) {\n      const objects = gameObjectsRef.current;\n      switch (e.key.toLowerCase()) {\n        case 'a':\n        case 'arrowleft':\n          objects.paddle.moveLeft();\n          break;\n        case 'd':\n        case 'arrowright':\n          objects.paddle.moveRight();\n          break;\n        case ' ':\n          if (objects.ball) objects.ball.launch();\n          break;\n        case 'escape':\n          setIsPaused(prev => !prev);\n          break;\n        default:\n          break;\n      }\n    }\n  }, [isPaused, isGameOver, setIsPaused]);\n\n  const handleKeyUp = useCallback((e) => {\n    if (!isPaused && !isGameOver) {\n      const objects = gameObjectsRef.current;\n      switch (e.key.toLowerCase()) {\n        case 'a':\n        case 'arrowleft':\n          objects.paddle.stopLeft();\n          break;\n        case 'd':\n        case 'arrowright':\n          objects.paddle.stopRight();\n          break;\n        default:\n          break;\n      }\n    }\n  }, [isPaused, isGameOver]);\n\n  const handleRestart = useCallback(() => {\n    if (gameObjectsRef.current) {\n      resetLevel();\n      setScore(0);\n      setLives(3);\n      setIsGameOver(false);\n      setIsVictory(false);\n      setIsPaused(false);\n    }\n  }, [resetLevel, setScore, setLives, setIsGameOver, setIsVictory, setIsPaused]);\n\n  // Setup effect\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Set canvas size\n    canvas.width = 800;\n    canvas.height = 600;\n\n    // Initialize game objects\n    const paddleY = canvas.height - 40;\n    gameObjectsRef.current = {\n      paddle: new Paddle(canvas.width / 2 - 50, paddleY),\n      ball: new Ball(canvas.width / 2, paddleY - 10),\n      bricks: []\n    };\n\n    // Load initial level\n    resetLevel();\n\n    // Start game loop\n    requestIdRef.current.id = requestAnimationFrame(gameLoop);\n\n    // Add event listeners\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n\n    return () => {\n      if (requestIdRef.current.id) {\n        cancelAnimationFrame(requestIdRef.current.id);\n      }\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [gameLoop, handleKeyDown, handleKeyUp, resetLevel]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      className=\"game-canvas\"\n      tabIndex={0}\n    />\n  );\n};\n\nexport default GameCanvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}