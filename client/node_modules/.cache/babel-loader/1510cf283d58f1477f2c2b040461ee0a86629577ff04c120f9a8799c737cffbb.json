{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noahm\\\\OneDrive\\\\Desktop\\\\Coding\\\\brick_blaster2\\\\client\\\\src\\\\components\\\\Game\\\\GameCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useCallback } from 'react';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport Brick from './entities/Brick'; // Import Brick\nimport { useGameLoop } from './GameLoop';\nimport LevelManager from './LevelManager';\nimport PauseMenu from '../UI/PauseMenu';\nimport GameOver from '../UI/GameOver';\nimport '../../styles/components/GameCanvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameCanvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const gameObjectsRef = useRef(null);\n  const requestIdRef = useRef({\n    id: null,\n    lastTime: null\n  });\n  const levelManagerRef = useRef(new LevelManager());\n  const {\n    isPaused,\n    isGameOver,\n    setScore,\n    score,\n    lives,\n    setLives,\n    currentLevel,\n    setIsPaused,\n    setIsGameOver,\n    setIsVictory,\n    stop,\n    setCurrentLevel\n  } = useGameLoop();\n  const drawHUD = useCallback(ctx => {\n    ctx.save();\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '20px Arial';\n\n    // Draw score\n    ctx.textAlign = 'left';\n    ctx.fillText(`Score: ${score}`, 10, 30);\n\n    // Draw level\n    ctx.textAlign = 'center';\n    ctx.fillText(`Level ${currentLevel}`, canvasRef.current.width / 2, 30);\n\n    // Draw lives\n    ctx.textAlign = 'right';\n    ctx.fillText(`Lives: ${lives}`, canvasRef.current.width - 10, 30);\n    ctx.restore();\n  }, [score, lives, currentLevel]);\n  const resetBallAndPaddle = useCallback(() => {\n    if (!gameObjectsRef.current || !canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const paddleY = canvas.height - 40;\n    const paddleWidth = 100;\n\n    // Reset paddle\n    const paddle = gameObjectsRef.current.paddle;\n    paddle.x = canvas.width / 2 - paddleWidth / 2;\n    paddle.y = paddleY;\n    paddle.dx = 0;\n    paddle.leftPressed = false;\n    paddle.rightPressed = false;\n\n    // Reset ball\n    const ball = gameObjectsRef.current.ball;\n    ball.x = canvas.width / 2;\n    ball.y = paddleY - ball.radius;\n    ball.dx = 0;\n    ball.dy = 0;\n    ball.isLaunched = false;\n  }, []);\n  const handleBallOut = useCallback(objects => {\n    const newLives = lives - 1;\n    setLives(newLives);\n    if (newLives <= 0) {\n      setIsGameOver(true);\n      setIsVictory(false);\n      stop();\n    } else {\n      resetBallAndPaddle();\n    }\n  }, [lives, setLives, setIsGameOver, setIsVictory, stop, resetBallAndPaddle]);\n  const resetLevel = useCallback(() => {\n    if (!gameObjectsRef.current) return;\n\n    // Get fresh level data for the current level\n    const levelData = levelManagerRef.current.loadLevel(currentLevel);\n\n    // Create new Brick instances to ensure clean state\n    gameObjectsRef.current.bricks = levelData.bricks.map(brick => {\n      return new Brick(brick.x, brick.y, brick.width, brick.height, brick.type);\n    });\n  }, [currentLevel]);\n  const drawGameObjects = useCallback((ctx, objects) => {\n    if (!ctx || !objects) return;\n    ctx.save();\n    objects.bricks.forEach(brick => {\n      if (!brick.isDestroyed()) {\n        brick.draw(ctx);\n      }\n    });\n    objects.ball.draw(ctx);\n    objects.paddle.draw(ctx);\n    ctx.restore();\n  }, []);\n  const handleKeyDown = useCallback(e => {\n    if (isGameOver) return;\n    const objects = gameObjectsRef.current;\n    switch (e.key.toLowerCase()) {\n      case 'a':\n      case 'arrowleft':\n        if (!isPaused) objects.paddle.moveLeft();\n        break;\n      case 'd':\n      case 'arrowright':\n        if (!isPaused) objects.paddle.moveRight();\n        break;\n      case ' ':\n        if (!isPaused && objects.ball) objects.ball.launch();\n        break;\n      case 'escape':\n        setIsPaused(prev => !prev);\n        break;\n      default:\n        break;\n    }\n  }, [isPaused, isGameOver, setIsPaused]);\n  const handleKeyUp = useCallback(e => {\n    if (isGameOver || isPaused) return;\n    const objects = gameObjectsRef.current;\n    switch (e.key.toLowerCase()) {\n      case 'a':\n      case 'arrowleft':\n        objects.paddle.stopLeft();\n        break;\n      case 'd':\n      case 'arrowright':\n        objects.paddle.stopRight();\n        break;\n      default:\n        break;\n    }\n  }, [isPaused, isGameOver]);\n  const handleResume = useCallback(() => {\n    setIsPaused(false);\n  }, [setIsPaused]);\n  const handleRestart = useCallback(() => {\n    setIsPaused(false);\n    resetLevel();\n    resetBallAndPaddle();\n  }, [setIsPaused, resetLevel, resetBallAndPaddle]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    canvas.width = 800;\n    canvas.height = 600;\n\n    // Only initialize game objects if they don't exist\n    if (!gameObjectsRef.current) {\n      const paddleY = canvas.height - 40;\n      const paddleWidth = 100;\n      gameObjectsRef.current = {\n        paddle: new Paddle(canvas.width / 2 - paddleWidth / 2, paddleY),\n        ball: new Ball(canvas.width / 2, paddleY - 10),\n        bricks: []\n      };\n      const levelData = levelManagerRef.current.loadLevel(currentLevel);\n      gameObjectsRef.current.bricks = levelData.bricks;\n    }\n\n    // Store animation ID in a variable that will be captured in the cleanup\n    const requestId = requestIdRef.current;\n    const animate = timestamp => {\n      var _canvasRef$current;\n      const ctx = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.getContext('2d', {\n        alpha: false\n      });\n      const objects = gameObjectsRef.current;\n      if (!ctx || !objects) {\n        requestId.id = requestAnimationFrame(animate);\n        return;\n      }\n      if (!requestId.lastTime) {\n        requestId.lastTime = timestamp;\n        requestId.id = requestAnimationFrame(animate);\n        return;\n      }\n      const deltaTime = Math.min((timestamp - requestId.lastTime) / 1000, 0.032);\n      requestId.lastTime = timestamp;\n\n      // Clear canvas\n      ctx.fillStyle = 'rgb(0, 0, 0)';\n      ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n      if (!isPaused && !isGameOver) {\n        // Update paddle\n        objects.paddle.update(deltaTime);\n\n        // Handle paddle collision before updating ball\n        if (objects.ball.checkPaddleCollision(objects.paddle)) {\n          objects.ball.bounceOffPaddle(objects.paddle);\n        }\n\n        // Only stick to paddle if not launched\n        if (!objects.ball.isLaunched) {\n          objects.ball.stickToPaddle(objects.paddle);\n        }\n\n        // Update ball position\n        objects.ball.update(deltaTime);\n\n        // Check for brick collisions\n        let remainingBricks = 0;\n        for (const brick of objects.bricks) {\n          if (!brick.isDestroyed()) {\n            remainingBricks++;\n            if (objects.ball.checkBrickCollision(brick)) {\n              objects.ball.bounceOffBrick(brick);\n              if (brick.hit()) {\n                setScore(prev => prev + 100);\n              }\n              break;\n            }\n          }\n        }\n\n        // Check if ball is out of bounds\n        if (objects.ball.y > canvasRef.current.height) {\n          handleBallOut(objects);\n        }\n\n        // Check if level is complete\n        if (objects.bricks.length > 0 && remainingBricks === 0) {\n          const nextLevel = currentLevel + 1;\n          if (nextLevel <= levelManagerRef.current.getMaxLevel()) {\n            setCurrentLevel(nextLevel);\n            resetLevel();\n            resetBallAndPaddle();\n          } else {\n            setIsGameOver(true);\n            setIsVictory(true);\n            stop();\n          }\n        }\n      }\n\n      // Always draw game objects and HUD\n      drawGameObjects(ctx, objects);\n      drawHUD(ctx);\n      requestId.id = requestAnimationFrame(animate);\n    };\n    requestId.id = requestAnimationFrame(animate);\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n    return () => {\n      if (requestId.id) {\n        cancelAnimationFrame(requestId.id);\n      }\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [handleKeyDown, handleKeyUp, currentLevel, drawGameObjects, drawHUD, handleBallOut, isGameOver, isPaused, resetBallAndPaddle, resetLevel, setCurrentLevel, setIsGameOver, setIsVictory, setScore, stop]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"game-canvas\",\n        width: 800,\n        height: 600,\n        tabIndex: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), isPaused && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pause-overlay\",\n        children: /*#__PURE__*/_jsxDEV(PauseMenu, {\n          onResume: handleResume,\n          onRestart: handleRestart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this), isGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-over-overlay\",\n        children: /*#__PURE__*/_jsxDEV(GameOver, {\n          score: score,\n          level: currentLevel,\n          onRestart: handleRestart,\n          isVictory: isVictory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this);\n};\n_s(GameCanvas, \"WAJo5KkWZgmCqYoPQ6rD6iB+GfQ=\", false, function () {\n  return [useGameLoop];\n});\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","useCallback","Ball","Paddle","Brick","useGameLoop","LevelManager","PauseMenu","GameOver","jsxDEV","_jsxDEV","GameCanvas","_s","canvasRef","gameObjectsRef","requestIdRef","id","lastTime","levelManagerRef","isPaused","isGameOver","setScore","score","lives","setLives","currentLevel","setIsPaused","setIsGameOver","setIsVictory","stop","setCurrentLevel","drawHUD","ctx","save","fillStyle","font","textAlign","fillText","current","width","restore","resetBallAndPaddle","canvas","paddleY","height","paddleWidth","paddle","x","y","dx","leftPressed","rightPressed","ball","radius","dy","isLaunched","handleBallOut","objects","newLives","resetLevel","levelData","loadLevel","bricks","map","brick","type","drawGameObjects","forEach","isDestroyed","draw","handleKeyDown","e","key","toLowerCase","moveLeft","moveRight","launch","prev","handleKeyUp","stopLeft","stopRight","handleResume","handleRestart","requestId","animate","timestamp","_canvasRef$current","getContext","alpha","requestAnimationFrame","deltaTime","Math","min","fillRect","update","checkPaddleCollision","bounceOffPaddle","stickToPaddle","remainingBricks","checkBrickCollision","bounceOffBrick","hit","length","nextLevel","getMaxLevel","window","addEventListener","cancelAnimationFrame","removeEventListener","className","children","ref","tabIndex","fileName","_jsxFileName","lineNumber","columnNumber","onResume","onRestart","level","isVictory","_c","$RefreshReg$"],"sources":["C:/Users/noahm/OneDrive/Desktop/Coding/brick_blaster2/client/src/components/Game/GameCanvas.js"],"sourcesContent":["import React, { useEffect, useRef, useCallback } from 'react';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport Brick from './entities/Brick'; // Import Brick\nimport { useGameLoop } from './GameLoop';\nimport LevelManager from './LevelManager';\nimport PauseMenu from '../UI/PauseMenu';\nimport GameOver from '../UI/GameOver';\nimport '../../styles/components/GameCanvas.css';\n\nconst GameCanvas = () => {\n  const canvasRef = useRef(null);\n  const gameObjectsRef = useRef(null);\n  const requestIdRef = useRef({ id: null, lastTime: null });\n  const levelManagerRef = useRef(new LevelManager());\n\n  const {\n    isPaused,\n    isGameOver,\n    setScore,\n    score,\n    lives,\n    setLives,\n    currentLevel,\n    setIsPaused,\n    setIsGameOver,\n    setIsVictory,\n    stop,\n    setCurrentLevel\n  } = useGameLoop();\n\n  const drawHUD = useCallback((ctx) => {\n    ctx.save();\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '20px Arial';\n    \n    // Draw score\n    ctx.textAlign = 'left';\n    ctx.fillText(`Score: ${score}`, 10, 30);\n    \n    // Draw level\n    ctx.textAlign = 'center';\n    ctx.fillText(`Level ${currentLevel}`, canvasRef.current.width / 2, 30);\n    \n    // Draw lives\n    ctx.textAlign = 'right';\n    ctx.fillText(`Lives: ${lives}`, canvasRef.current.width - 10, 30);\n    ctx.restore();\n  }, [score, lives, currentLevel]);\n\n  const resetBallAndPaddle = useCallback(() => {\n    if (!gameObjectsRef.current || !canvasRef.current) return;\n\n    const canvas = canvasRef.current;\n    const paddleY = canvas.height - 40;\n    const paddleWidth = 100;\n    \n    // Reset paddle\n    const paddle = gameObjectsRef.current.paddle;\n    paddle.x = canvas.width / 2 - paddleWidth / 2;\n    paddle.y = paddleY;\n    paddle.dx = 0;\n    paddle.leftPressed = false;\n    paddle.rightPressed = false;\n    \n    // Reset ball\n    const ball = gameObjectsRef.current.ball;\n    ball.x = canvas.width / 2;\n    ball.y = paddleY - ball.radius;\n    ball.dx = 0;\n    ball.dy = 0;\n    ball.isLaunched = false;\n  }, []);\n\n  const handleBallOut = useCallback((objects) => {\n    const newLives = lives - 1;\n    setLives(newLives);\n    \n    if (newLives <= 0) {\n      setIsGameOver(true);\n      setIsVictory(false);\n      stop();\n    } else {\n      resetBallAndPaddle();\n    }\n  }, [lives, setLives, setIsGameOver, setIsVictory, stop, resetBallAndPaddle]);\n\n  const resetLevel = useCallback(() => {\n    if (!gameObjectsRef.current) return;\n\n    // Get fresh level data for the current level\n    const levelData = levelManagerRef.current.loadLevel(currentLevel);\n    \n    // Create new Brick instances to ensure clean state\n    gameObjectsRef.current.bricks = levelData.bricks.map(brick => {\n      return new Brick(brick.x, brick.y, brick.width, brick.height, brick.type);\n    });\n  }, [currentLevel]);\n\n  const drawGameObjects = useCallback((ctx, objects) => {\n    if (!ctx || !objects) return;\n    \n    ctx.save();\n    objects.bricks.forEach(brick => {\n      if (!brick.isDestroyed()) {\n        brick.draw(ctx);\n      }\n    });\n    objects.ball.draw(ctx);\n    objects.paddle.draw(ctx);\n    ctx.restore();\n  }, []);\n\n  const handleKeyDown = useCallback((e) => {\n    if (isGameOver) return;\n    \n    const objects = gameObjectsRef.current;\n    switch (e.key.toLowerCase()) {\n      case 'a':\n      case 'arrowleft':\n        if (!isPaused) objects.paddle.moveLeft();\n        break;\n      case 'd':\n      case 'arrowright':\n        if (!isPaused) objects.paddle.moveRight();\n        break;\n      case ' ':\n        if (!isPaused && objects.ball) objects.ball.launch();\n        break;\n      case 'escape':\n        setIsPaused(prev => !prev);\n        break;\n      default:\n        break;\n    }\n  }, [isPaused, isGameOver, setIsPaused]);\n\n  const handleKeyUp = useCallback((e) => {\n    if (isGameOver || isPaused) return;\n    \n    const objects = gameObjectsRef.current;\n    switch (e.key.toLowerCase()) {\n      case 'a':\n      case 'arrowleft':\n        objects.paddle.stopLeft();\n        break;\n      case 'd':\n      case 'arrowright':\n        objects.paddle.stopRight();\n        break;\n      default:\n        break;\n    }\n  }, [isPaused, isGameOver]);\n\n  const handleResume = useCallback(() => {\n    setIsPaused(false);\n  }, [setIsPaused]);\n\n  const handleRestart = useCallback(() => {\n    setIsPaused(false);\n    resetLevel();\n    resetBallAndPaddle();\n  }, [setIsPaused, resetLevel, resetBallAndPaddle]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    canvas.width = 800;\n    canvas.height = 600;\n\n    // Only initialize game objects if they don't exist\n    if (!gameObjectsRef.current) {\n      const paddleY = canvas.height - 40;\n      const paddleWidth = 100;\n      \n      gameObjectsRef.current = {\n        paddle: new Paddle(canvas.width / 2 - paddleWidth / 2, paddleY),\n        ball: new Ball(canvas.width / 2, paddleY - 10),\n        bricks: []\n      };\n\n      const levelData = levelManagerRef.current.loadLevel(currentLevel);\n      gameObjectsRef.current.bricks = levelData.bricks;\n    }\n\n    // Store animation ID in a variable that will be captured in the cleanup\n    const requestId = requestIdRef.current;\n    const animate = (timestamp) => {\n      const ctx = canvasRef.current?.getContext('2d', { alpha: false });\n      const objects = gameObjectsRef.current;\n\n      if (!ctx || !objects) {\n        requestId.id = requestAnimationFrame(animate);\n        return;\n      }\n\n      if (!requestId.lastTime) {\n        requestId.lastTime = timestamp;\n        requestId.id = requestAnimationFrame(animate);\n        return;\n      }\n\n      const deltaTime = Math.min((timestamp - requestId.lastTime) / 1000, 0.032);\n      requestId.lastTime = timestamp;\n\n      // Clear canvas\n      ctx.fillStyle = 'rgb(0, 0, 0)';\n      ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n      if (!isPaused && !isGameOver) {\n        // Update paddle\n        objects.paddle.update(deltaTime);\n        \n        // Handle paddle collision before updating ball\n        if (objects.ball.checkPaddleCollision(objects.paddle)) {\n          objects.ball.bounceOffPaddle(objects.paddle);\n        }\n\n        // Only stick to paddle if not launched\n        if (!objects.ball.isLaunched) {\n          objects.ball.stickToPaddle(objects.paddle);\n        }\n\n        // Update ball position\n        objects.ball.update(deltaTime);\n\n        // Check for brick collisions\n        let remainingBricks = 0;\n        \n        for (const brick of objects.bricks) {\n          if (!brick.isDestroyed()) {\n            remainingBricks++;\n            if (objects.ball.checkBrickCollision(brick)) {\n              objects.ball.bounceOffBrick(brick);\n              if (brick.hit()) {\n                setScore(prev => prev + 100);\n              }\n              break;\n            }\n          }\n        }\n\n        // Check if ball is out of bounds\n        if (objects.ball.y > canvasRef.current.height) {\n          handleBallOut(objects);\n        }\n\n        // Check if level is complete\n        if (objects.bricks.length > 0 && remainingBricks === 0) {\n          const nextLevel = currentLevel + 1;\n          if (nextLevel <= levelManagerRef.current.getMaxLevel()) {\n            setCurrentLevel(nextLevel);\n            resetLevel();\n            resetBallAndPaddle();\n          } else {\n            setIsGameOver(true);\n            setIsVictory(true);\n            stop();\n          }\n        }\n      }\n\n      // Always draw game objects and HUD\n      drawGameObjects(ctx, objects);\n      drawHUD(ctx);\n\n      requestId.id = requestAnimationFrame(animate);\n    };\n    requestId.id = requestAnimationFrame(animate);\n\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n\n    return () => {\n      if (requestId.id) {\n        cancelAnimationFrame(requestId.id);\n      }\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [handleKeyDown, handleKeyUp, currentLevel, drawGameObjects, drawHUD, handleBallOut, \n      isGameOver, isPaused, resetBallAndPaddle, resetLevel, setCurrentLevel, \n      setIsGameOver, setIsVictory, setScore, stop]);\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"canvas-wrapper\">\n        <canvas\n          ref={canvasRef}\n          className=\"game-canvas\"\n          width={800}\n          height={600}\n          tabIndex={0}\n        />\n        {isPaused && (\n          <div className=\"pause-overlay\">\n            <PauseMenu\n              onResume={handleResume}\n              onRestart={handleRestart}\n            />\n          </div>\n        )}\n        {isGameOver && (\n          <div className=\"game-over-overlay\">\n            <GameOver\n              score={score}\n              level={currentLevel}\n              onRestart={handleRestart}\n              isVictory={isVictory}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default GameCanvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}