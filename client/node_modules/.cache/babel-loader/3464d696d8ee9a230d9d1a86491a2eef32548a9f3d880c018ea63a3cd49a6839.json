{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noahm\\\\OneDrive\\\\Desktop\\\\Coding\\\\brick_blaster2\\\\client\\\\src\\\\components\\\\Game\\\\GameCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useCallback } from 'react';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport LevelManager from './LevelManager';\nimport PauseMenu from '../UI/PauseMenu';\nimport GameOver from '../UI/GameOver';\nimport SoundManager from '../../utils/SoundManager';\nimport '../../styles/components/GameCanvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameCanvas = ({\n  lives,\n  setLives,\n  score,\n  setScore,\n  currentLevel,\n  setCurrentLevel,\n  isPaused,\n  setIsPaused,\n  isGameOver,\n  setIsGameOver,\n  isVictory,\n  setIsVictory\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const gameObjectsRef = useRef(null);\n  const requestIdRef = useRef({\n    id: null,\n    lastTime: 0\n  });\n  const levelManagerRef = useRef(null);\n  const soundManagerRef = useRef(null);\n  const resetBallAndPaddle = useCallback(() => {\n    console.log('resetBallAndPaddle called');\n    if (!gameObjectsRef.current || !canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const objects = gameObjectsRef.current;\n\n    // Reset paddle position and state\n    objects.paddle.x = canvas.width / 2 - objects.paddle.width / 2;\n    objects.paddle.y = canvas.height - 40;\n    objects.paddle.leftPressed = false;\n    objects.paddle.rightPressed = false;\n\n    // Reset ball position and state\n    objects.ball.x = canvas.width / 2;\n    objects.ball.y = canvas.height - 60;\n    objects.ball.dx = 0;\n    objects.ball.dy = 0;\n    objects.ball.isLaunched = false;\n    console.log('Ball and paddle reset complete');\n  }, []);\n  const handleRestart = useCallback(() => {\n    if (!levelManagerRef.current) return;\n    setIsPaused(false);\n    setIsGameOver(false);\n    setIsVictory(false);\n    setScore(0);\n    setLives(3);\n    setCurrentLevel(1);\n\n    // Reset level manager to ensure fresh state\n    levelManagerRef.current = new LevelManager();\n    resetBallAndPaddle();\n  }, [resetBallAndPaddle, setCurrentLevel, setIsGameOver, setIsVictory, setIsPaused, setLives, setScore]);\n  const handleKeyDown = useCallback(e => {\n    const objects = gameObjectsRef.current;\n    if (!objects) return;\n\n    // Handle pause with Escape\n    if (e.code === 'Escape') {\n      if (!isGameOver) {\n        setIsPaused(!isPaused);\n      }\n      return;\n    }\n\n    // Handle restart or ball launch with Space\n    if (e.code === 'Space') {\n      if (isGameOver) {\n        handleRestart();\n      } else if (!objects.ball.isLaunched && !isPaused) {\n        objects.ball.launch();\n        if (soundManagerRef.current) {\n          soundManagerRef.current.playBallLaunch();\n        }\n      }\n      return;\n    }\n    if (isPaused || isGameOver) return;\n    switch (e.code) {\n      case 'ArrowLeft':\n        objects.paddle.moveLeft();\n        break;\n      case 'ArrowRight':\n        objects.paddle.moveRight();\n        break;\n      default:\n        break;\n    }\n  }, [isGameOver, isPaused, setIsPaused, handleRestart]);\n  const handleKeyUp = useCallback(e => {\n    const objects = gameObjectsRef.current;\n    if (!objects) return;\n    switch (e.code) {\n      case 'ArrowLeft':\n        objects.paddle.stopLeft();\n        break;\n      case 'ArrowRight':\n        objects.paddle.stopRight();\n        break;\n      default:\n        break;\n    }\n  }, []);\n  const handleBallOut = useCallback(() => {\n    const newLives = lives - 1;\n    setLives(newLives);\n    if (newLives <= 0) {\n      setIsGameOver(true);\n      setIsVictory(false);\n      setIsPaused(false);\n    } else {\n      resetBallAndPaddle();\n    }\n  }, [lives, setLives, setIsGameOver, setIsVictory, setIsPaused, resetBallAndPaddle]);\n  const drawHUD = useCallback(ctx => {\n    if (!ctx || !canvasRef.current) return;\n    ctx.save();\n\n    // Draw score\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '20px Arial';\n    ctx.fillText(`Score: ${score}`, 20, 30);\n\n    // Draw lives\n    ctx.fillText(`Lives: ${lives}`, canvasRef.current.width - 100, 30);\n\n    // Draw level\n    ctx.fillText(`Level: ${currentLevel}`, canvasRef.current.width / 2 - 30, 30);\n    ctx.restore();\n  }, [score, lives, currentLevel]);\n  const drawGameObjects = useCallback(ctx => {\n    const objects = gameObjectsRef.current;\n    if (!objects) return;\n\n    // Draw paddle\n    objects.paddle.draw(ctx);\n\n    // Draw ball\n    objects.ball.draw(ctx);\n\n    // Draw bricks\n    objects.bricks.forEach(brick => brick.draw(ctx));\n  }, []);\n  const animate = useCallback(timestamp => {\n    var _canvasRef$current;\n    if (isPaused || isGameOver) return;\n    const deltaTime = timestamp - (requestIdRef.current.lastTime || timestamp);\n    requestIdRef.current.lastTime = timestamp;\n    const ctx = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.getContext('2d', {\n      alpha: false\n    });\n    const objects = gameObjectsRef.current;\n    if (!ctx || !objects) return;\n\n    // Clear canvas\n    ctx.fillStyle = '#000000';\n    ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n    // Update game objects\n    if (objects.ball.y + objects.ball.radius > canvasRef.current.height) {\n      handleBallOut();\n    } else {\n      objects.paddle.update(deltaTime / 1000);\n      objects.ball.update(deltaTime / 1000);\n\n      // Handle paddle collision\n      if (objects.ball.checkPaddleCollision(objects.paddle)) {\n        objects.ball.bounceOffPaddle(objects.paddle);\n        if (soundManagerRef.current) {\n          soundManagerRef.current.playPaddleHit();\n        }\n      }\n\n      // Only stick to paddle if not launched\n      if (!objects.ball.isLaunched) {\n        objects.ball.stickToPaddle(objects.paddle);\n      }\n\n      // Check brick collisions\n      let remainingBricks = 0;\n      let brickHit = false;\n      objects.bricks.forEach(brick => {\n        if (!brick.isDestroyed()) {\n          remainingBricks++;\n          if (!brickHit && objects.ball.checkBrickCollision(brick)) {\n            objects.ball.bounceOffBrick(brick);\n            brickHit = true;\n            if (brick.hit()) {\n              // Use a ref to track score to avoid re-renders\n              const newScore = score + 100;\n              requestAnimationFrame(() => setScore(newScore));\n              if (soundManagerRef.current) {\n                soundManagerRef.current.playBrickHit();\n              }\n            }\n          }\n        }\n      });\n\n      // Check if level is complete\n      if (objects.bricks.length > 0 && remainingBricks === 0) {\n        const nextLevel = currentLevel + 1;\n        if (nextLevel <= levelManagerRef.current.getMaxLevel()) {\n          // Use requestAnimationFrame to batch state updates\n          requestAnimationFrame(() => {\n            setCurrentLevel(nextLevel);\n          });\n        } else {\n          requestAnimationFrame(() => {\n            setIsGameOver(true);\n            setIsVictory(true);\n          });\n        }\n      }\n    }\n\n    // Draw game objects\n    drawGameObjects(ctx);\n    drawHUD(ctx);\n\n    // Request next frame\n    requestIdRef.current.id = requestAnimationFrame(animate);\n  }, [isPaused, isGameOver, handleBallOut, drawGameObjects, drawHUD, score, currentLevel]);\n\n  // Initialize managers and game state\n  useEffect(() => {\n    try {\n      // First initialize managers\n      levelManagerRef.current = new LevelManager();\n      soundManagerRef.current = new SoundManager();\n\n      // Initialize canvas\n      const canvas = canvasRef.current;\n      if (!canvas) {\n        console.error('Canvas not found');\n        return;\n      }\n      canvas.width = 800;\n      canvas.height = 600;\n\n      // Initialize game objects\n      gameObjectsRef.current = {\n        paddle: new Paddle(canvas.width / 2 - 50, canvas.height - 40),\n        ball: new Ball(canvas.width / 2, canvas.height - 60),\n        bricks: []\n      };\n\n      // Load initial level (with error handling)\n      const levelData = levelManagerRef.current.loadLevel(1);\n      if (!levelData) {\n        console.error('Failed to load initial level');\n        return;\n      }\n      gameObjectsRef.current.bricks = levelData.bricks || [];\n\n      // Add event listeners\n      window.addEventListener('keydown', handleKeyDown);\n      window.addEventListener('keyup', handleKeyUp);\n    } catch (error) {\n      console.error('Error initializing game:', error);\n    }\n  }, []); // Empty dependency array since this should only run once\n\n  // Handle animation\n  useEffect(() => {\n    if (isPaused || isGameOver) return;\n\n    // Start animation\n    requestIdRef.current.id = requestAnimationFrame(animate);\n    return () => {\n      if (requestIdRef.current.id) {\n        cancelAnimationFrame(requestIdRef.current.id);\n      }\n    };\n  }, [animate, isPaused, isGameOver]);\n\n  // Cleanup effect\n  useEffect(() => {\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n      if (soundManagerRef.current) {\n        soundManagerRef.current.cleanup();\n      }\n    };\n  }, [handleKeyDown, handleKeyUp]);\n\n  // Handle level changes\n  useEffect(() => {\n    try {\n      if (!gameObjectsRef.current || !levelManagerRef.current) {\n        console.warn('Game objects or level manager not initialized');\n        return;\n      }\n      const levelData = levelManagerRef.current.loadLevel(currentLevel);\n      if (!levelData) {\n        console.error('Failed to load level:', currentLevel);\n        return;\n      }\n\n      // Reset ball and paddle for new level\n      resetBallAndPaddle();\n\n      // Update bricks for new level\n      gameObjectsRef.current.bricks = levelData.bricks;\n    } catch (error) {\n      console.error('Error loading level:', error);\n    }\n  }, [currentLevel]); // Only depend on currentLevel changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), isPaused && !isGameOver && /*#__PURE__*/_jsxDEV(PauseMenu, {\n      onResume: () => setIsPaused(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 35\n    }, this), isGameOver && /*#__PURE__*/_jsxDEV(GameOver, {\n      score: score,\n      victory: isVictory,\n      onRestart: handleRestart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 345,\n    columnNumber: 5\n  }, this);\n};\n_s(GameCanvas, \"+fFFm+i6U87RpgFF95TZ/fTM9I8=\");\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useCallback","Ball","Paddle","LevelManager","PauseMenu","GameOver","SoundManager","jsxDEV","_jsxDEV","GameCanvas","lives","setLives","score","setScore","currentLevel","setCurrentLevel","isPaused","setIsPaused","isGameOver","setIsGameOver","isVictory","setIsVictory","_s","canvasRef","gameObjectsRef","requestIdRef","id","lastTime","levelManagerRef","soundManagerRef","resetBallAndPaddle","console","log","current","canvas","objects","paddle","x","width","y","height","leftPressed","rightPressed","ball","dx","dy","isLaunched","handleRestart","handleKeyDown","e","code","launch","playBallLaunch","moveLeft","moveRight","handleKeyUp","stopLeft","stopRight","handleBallOut","newLives","drawHUD","ctx","save","fillStyle","font","fillText","restore","drawGameObjects","draw","bricks","forEach","brick","animate","timestamp","_canvasRef$current","deltaTime","getContext","alpha","fillRect","radius","update","checkPaddleCollision","bounceOffPaddle","playPaddleHit","stickToPaddle","remainingBricks","brickHit","isDestroyed","checkBrickCollision","bounceOffBrick","hit","newScore","requestAnimationFrame","playBrickHit","length","nextLevel","getMaxLevel","error","levelData","loadLevel","window","addEventListener","cancelAnimationFrame","removeEventListener","cleanup","warn","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onResume","victory","onRestart","_c","$RefreshReg$"],"sources":["C:/Users/noahm/OneDrive/Desktop/Coding/brick_blaster2/client/src/components/Game/GameCanvas.js"],"sourcesContent":["import React, { useRef, useEffect, useCallback } from 'react';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport LevelManager from './LevelManager';\nimport PauseMenu from '../UI/PauseMenu';\nimport GameOver from '../UI/GameOver';\nimport SoundManager from '../../utils/SoundManager';\nimport '../../styles/components/GameCanvas.css';\n\nconst GameCanvas = ({ \n  lives, setLives, \n  score, setScore, \n  currentLevel, setCurrentLevel,\n  isPaused, setIsPaused,\n  isGameOver, setIsGameOver,\n  isVictory, setIsVictory \n}) => {\n  const canvasRef = useRef(null);\n  const gameObjectsRef = useRef(null);\n  const requestIdRef = useRef({ id: null, lastTime: 0 });\n  const levelManagerRef = useRef(null);\n  const soundManagerRef = useRef(null);\n\n  const resetBallAndPaddle = useCallback(() => {\n    console.log('resetBallAndPaddle called');\n    if (!gameObjectsRef.current || !canvasRef.current) return;\n    \n    const canvas = canvasRef.current;\n    const objects = gameObjectsRef.current;\n    \n    // Reset paddle position and state\n    objects.paddle.x = canvas.width / 2 - objects.paddle.width / 2;\n    objects.paddle.y = canvas.height - 40;\n    objects.paddle.leftPressed = false;\n    objects.paddle.rightPressed = false;\n    \n    // Reset ball position and state\n    objects.ball.x = canvas.width / 2;\n    objects.ball.y = canvas.height - 60;\n    objects.ball.dx = 0;\n    objects.ball.dy = 0;\n    objects.ball.isLaunched = false;\n    console.log('Ball and paddle reset complete');\n  }, []);\n\n  const handleRestart = useCallback(() => {\n    if (!levelManagerRef.current) return;\n\n    setIsPaused(false);\n    setIsGameOver(false);\n    setIsVictory(false);\n    setScore(0);\n    setLives(3);\n    setCurrentLevel(1);\n    \n    // Reset level manager to ensure fresh state\n    levelManagerRef.current = new LevelManager();\n    resetBallAndPaddle();\n  }, [resetBallAndPaddle, setCurrentLevel, setIsGameOver, setIsVictory, setIsPaused, setLives, setScore]);\n\n  const handleKeyDown = useCallback((e) => {\n    const objects = gameObjectsRef.current;\n    if (!objects) return;\n\n    // Handle pause with Escape\n    if (e.code === 'Escape') {\n      if (!isGameOver) {\n        setIsPaused(!isPaused);\n      }\n      return;\n    }\n\n    // Handle restart or ball launch with Space\n    if (e.code === 'Space') {\n      if (isGameOver) {\n        handleRestart();\n      } else if (!objects.ball.isLaunched && !isPaused) {\n        objects.ball.launch();\n        if (soundManagerRef.current) {\n          soundManagerRef.current.playBallLaunch();\n        }\n      }\n      return;\n    }\n\n    if (isPaused || isGameOver) return;\n\n    switch (e.code) {\n      case 'ArrowLeft':\n        objects.paddle.moveLeft();\n        break;\n      case 'ArrowRight':\n        objects.paddle.moveRight();\n        break;\n      default:\n        break;\n    }\n  }, [isGameOver, isPaused, setIsPaused, handleRestart]);\n\n  const handleKeyUp = useCallback((e) => {\n    const objects = gameObjectsRef.current;\n    if (!objects) return;\n\n    switch (e.code) {\n      case 'ArrowLeft':\n        objects.paddle.stopLeft();\n        break;\n      case 'ArrowRight':\n        objects.paddle.stopRight();\n        break;\n      default:\n        break;\n    }\n  }, []);\n\n  const handleBallOut = useCallback(() => {\n    const newLives = lives - 1;\n    setLives(newLives);\n    \n    if (newLives <= 0) {\n      setIsGameOver(true);\n      setIsVictory(false);\n      setIsPaused(false);\n    } else {\n      resetBallAndPaddle();\n    }\n  }, [lives, setLives, setIsGameOver, setIsVictory, setIsPaused, resetBallAndPaddle]);\n\n  const drawHUD = useCallback((ctx) => {\n    if (!ctx || !canvasRef.current) return;\n    \n    ctx.save();\n    \n    // Draw score\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '20px Arial';\n    ctx.fillText(`Score: ${score}`, 20, 30);\n    \n    // Draw lives\n    ctx.fillText(`Lives: ${lives}`, canvasRef.current.width - 100, 30);\n    \n    // Draw level\n    ctx.fillText(`Level: ${currentLevel}`, canvasRef.current.width / 2 - 30, 30);\n    \n    ctx.restore();\n  }, [score, lives, currentLevel]);\n\n  const drawGameObjects = useCallback((ctx) => {\n    const objects = gameObjectsRef.current;\n    if (!objects) return;\n\n    // Draw paddle\n    objects.paddle.draw(ctx);\n    \n    // Draw ball\n    objects.ball.draw(ctx);\n    \n    // Draw bricks\n    objects.bricks.forEach(brick => brick.draw(ctx));\n  }, []);\n\n  const animate = useCallback((timestamp) => {\n    if (isPaused || isGameOver) return;\n\n    const deltaTime = timestamp - (requestIdRef.current.lastTime || timestamp);\n    requestIdRef.current.lastTime = timestamp;\n\n    const ctx = canvasRef.current?.getContext('2d', { alpha: false });\n    const objects = gameObjectsRef.current;\n\n    if (!ctx || !objects) return;\n\n    // Clear canvas\n    ctx.fillStyle = '#000000';\n    ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n    // Update game objects\n    if (objects.ball.y + objects.ball.radius > canvasRef.current.height) {\n      handleBallOut();\n    } else {\n      objects.paddle.update(deltaTime / 1000);\n      objects.ball.update(deltaTime / 1000);\n\n      // Handle paddle collision\n      if (objects.ball.checkPaddleCollision(objects.paddle)) {\n        objects.ball.bounceOffPaddle(objects.paddle);\n        if (soundManagerRef.current) {\n          soundManagerRef.current.playPaddleHit();\n        }\n      }\n\n      // Only stick to paddle if not launched\n      if (!objects.ball.isLaunched) {\n        objects.ball.stickToPaddle(objects.paddle);\n      }\n\n      // Check brick collisions\n      let remainingBricks = 0;\n      let brickHit = false;\n\n      objects.bricks.forEach(brick => {\n        if (!brick.isDestroyed()) {\n          remainingBricks++;\n          if (!brickHit && objects.ball.checkBrickCollision(brick)) {\n            objects.ball.bounceOffBrick(brick);\n            brickHit = true;\n            if (brick.hit()) {\n              // Use a ref to track score to avoid re-renders\n              const newScore = score + 100;\n              requestAnimationFrame(() => setScore(newScore));\n              if (soundManagerRef.current) {\n                soundManagerRef.current.playBrickHit();\n              }\n            }\n          }\n        }\n      });\n\n      // Check if level is complete\n      if (objects.bricks.length > 0 && remainingBricks === 0) {\n        const nextLevel = currentLevel + 1;\n        if (nextLevel <= levelManagerRef.current.getMaxLevel()) {\n          // Use requestAnimationFrame to batch state updates\n          requestAnimationFrame(() => {\n            setCurrentLevel(nextLevel);\n          });\n        } else {\n          requestAnimationFrame(() => {\n            setIsGameOver(true);\n            setIsVictory(true);\n          });\n        }\n      }\n    }\n\n    // Draw game objects\n    drawGameObjects(ctx);\n    drawHUD(ctx);\n\n    // Request next frame\n    requestIdRef.current.id = requestAnimationFrame(animate);\n  }, [\n    isPaused,\n    isGameOver,\n    handleBallOut,\n    drawGameObjects,\n    drawHUD,\n    score,\n    currentLevel\n  ]);\n\n  // Initialize managers and game state\n  useEffect(() => {\n    try {\n      // First initialize managers\n      levelManagerRef.current = new LevelManager();\n      soundManagerRef.current = new SoundManager();\n\n      // Initialize canvas\n      const canvas = canvasRef.current;\n      if (!canvas) {\n        console.error('Canvas not found');\n        return;\n      }\n\n      canvas.width = 800;\n      canvas.height = 600;\n\n      // Initialize game objects\n      gameObjectsRef.current = {\n        paddle: new Paddle(canvas.width / 2 - 50, canvas.height - 40),\n        ball: new Ball(canvas.width / 2, canvas.height - 60),\n        bricks: []\n      };\n\n      // Load initial level (with error handling)\n      const levelData = levelManagerRef.current.loadLevel(1);\n      if (!levelData) {\n        console.error('Failed to load initial level');\n        return;\n      }\n\n      gameObjectsRef.current.bricks = levelData.bricks || [];\n\n      // Add event listeners\n      window.addEventListener('keydown', handleKeyDown);\n      window.addEventListener('keyup', handleKeyUp);\n\n    } catch (error) {\n      console.error('Error initializing game:', error);\n    }\n  }, []); // Empty dependency array since this should only run once\n\n  // Handle animation\n  useEffect(() => {\n    if (isPaused || isGameOver) return;\n\n    // Start animation\n    requestIdRef.current.id = requestAnimationFrame(animate);\n\n    return () => {\n      if (requestIdRef.current.id) {\n        cancelAnimationFrame(requestIdRef.current.id);\n      }\n    };\n  }, [animate, isPaused, isGameOver]);\n\n  // Cleanup effect\n  useEffect(() => {\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n      if (soundManagerRef.current) {\n        soundManagerRef.current.cleanup();\n      }\n    };\n  }, [handleKeyDown, handleKeyUp]);\n\n  // Handle level changes\n  useEffect(() => {\n    try {\n      if (!gameObjectsRef.current || !levelManagerRef.current) {\n        console.warn('Game objects or level manager not initialized');\n        return;\n      }\n      \n      const levelData = levelManagerRef.current.loadLevel(currentLevel);\n      if (!levelData) {\n        console.error('Failed to load level:', currentLevel);\n        return;\n      }\n\n      // Reset ball and paddle for new level\n      resetBallAndPaddle();\n      \n      // Update bricks for new level\n      gameObjectsRef.current.bricks = levelData.bricks;\n      \n    } catch (error) {\n      console.error('Error loading level:', error);\n    }\n  }, [currentLevel]); // Only depend on currentLevel changes\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"canvas-wrapper\">\n        <canvas ref={canvasRef} />\n      </div>\n      {isPaused && !isGameOver && <PauseMenu onResume={() => setIsPaused(false)} />}\n      {isGameOver && <GameOver score={score} victory={isVictory} onRestart={handleRestart} />}\n    </div>\n  );\n};\n\nexport default GameCanvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}