{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noahm\\\\OneDrive\\\\Desktop\\\\Coding\\\\brick_blaster2\\\\client\\\\src\\\\components\\\\Game\\\\GameCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useCallback } from 'react';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport LevelManager from './LevelManager';\nimport PauseMenu from '../UI/PauseMenu';\nimport GameOver from '../UI/GameOver';\nimport SoundManager from '../../utils/SoundManager';\nimport '../../styles/components/GameCanvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameCanvas = ({\n  lives,\n  setLives,\n  score,\n  setScore,\n  currentLevel,\n  setCurrentLevel,\n  isPaused,\n  setIsPaused,\n  isGameOver,\n  setIsGameOver,\n  isVictory,\n  setIsVictory\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const gameObjectsRef = useRef(null);\n  const requestIdRef = useRef({\n    id: null,\n    lastTime: 0\n  });\n  const levelManagerRef = useRef(null);\n  const soundManagerRef = useRef(null);\n\n  // Initialize managers and game state\n  useEffect(() => {\n    levelManagerRef.current = new LevelManager();\n    soundManagerRef.current = new SoundManager();\n\n    // Initialize game objects\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    canvas.width = 800;\n    canvas.height = 600;\n    gameObjectsRef.current = {\n      paddle: new Paddle(canvas.width / 2 - 50, canvas.height - 40),\n      ball: new Ball(canvas.width / 2, canvas.height - 60),\n      bricks: []\n    };\n\n    // Load initial level\n    const levelData = levelManagerRef.current.loadLevel(1); // Always start with level 1\n    if (levelData && levelData.bricks) {\n      gameObjectsRef.current.bricks = levelData.bricks;\n    }\n\n    // Start animation\n    const currentRequestId = requestIdRef.current;\n    currentRequestId.id = requestAnimationFrame(animate);\n\n    // Add event listeners\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n    return () => {\n      if (currentRequestId.id) {\n        cancelAnimationFrame(currentRequestId.id);\n      }\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n      if (soundManagerRef.current) {\n        soundManagerRef.current.cleanup();\n      }\n    };\n  }, [handleKeyDown, handleKeyUp, animate]);\n  const drawHUD = useCallback(ctx => {\n    if (!ctx || !canvasRef.current) return;\n    ctx.save();\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '20px Arial';\n\n    // Draw score\n    ctx.textAlign = 'left';\n    ctx.fillText(`Score: ${score}`, 10, 30);\n\n    // Draw level\n    ctx.textAlign = 'center';\n    ctx.fillText(`Level ${currentLevel}`, canvasRef.current.width / 2, 30);\n\n    // Draw lives\n    ctx.textAlign = 'right';\n    ctx.fillText(`Lives: ${lives}`, canvasRef.current.width - 10, 30);\n    ctx.restore();\n  }, [score, lives, currentLevel]);\n  const resetBallAndPaddle = useCallback(() => {\n    if (!gameObjectsRef.current || !canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const objects = gameObjectsRef.current;\n\n    // Reset paddle position and state\n    objects.paddle.x = canvas.width / 2 - objects.paddle.width / 2;\n    objects.paddle.y = canvas.height - 40;\n    objects.paddle.leftPressed = false;\n    objects.paddle.rightPressed = false;\n\n    // Reset ball position and state\n    objects.ball.x = canvas.width / 2;\n    objects.ball.y = canvas.height - 60;\n    objects.ball.dx = 0;\n    objects.ball.dy = 0;\n    objects.ball.isLaunched = false;\n  }, []);\n  const handleRestart = useCallback(() => {\n    if (!levelManagerRef.current) return;\n    setIsPaused(false);\n    setIsGameOver(false);\n    setIsVictory(false);\n    setScore(0);\n    setLives(3);\n    setCurrentLevel(1);\n\n    // Reset level manager to ensure fresh state\n    levelManagerRef.current = new LevelManager();\n    resetBallAndPaddle();\n  }, [resetBallAndPaddle, setCurrentLevel, setIsGameOver, setIsVictory, setIsPaused, setLives, setScore]);\n  const handleBallOut = useCallback(() => {\n    const newLives = lives - 1;\n    setLives(newLives);\n    if (newLives <= 0) {\n      setIsGameOver(true);\n      setIsVictory(false);\n      setIsPaused(false);\n    } else {\n      resetBallAndPaddle();\n    }\n  }, [lives, setLives, setIsGameOver, setIsVictory, setIsPaused, resetBallAndPaddle]);\n  const handleKeyDown = useCallback(e => {\n    const objects = gameObjectsRef.current;\n    if (!objects) return;\n    if (e.code === 'Space') {\n      if (isGameOver) {\n        handleRestart();\n      } else {\n        setIsPaused(prev => !prev);\n      }\n      return;\n    }\n    if (isPaused || isGameOver) return;\n    switch (e.code) {\n      case 'ArrowLeft':\n        objects.paddle.moveLeft();\n        break;\n      case 'ArrowRight':\n        objects.paddle.moveRight();\n        break;\n      default:\n        break;\n    }\n  }, [isGameOver, isPaused, handleRestart, setIsPaused]);\n  const handleKeyUp = useCallback(e => {\n    const objects = gameObjectsRef.current;\n    if (!objects) return;\n    switch (e.code) {\n      case 'ArrowLeft':\n        objects.paddle.stopLeft();\n        break;\n      case 'ArrowRight':\n        objects.paddle.stopRight();\n        break;\n      default:\n        break;\n    }\n  }, []);\n  const handleResume = useCallback(() => {\n    setIsPaused(false);\n  }, [setIsPaused]);\n  const drawGameObjects = useCallback(ctx => {\n    if (!ctx || !gameObjectsRef.current) return;\n    const objects = gameObjectsRef.current;\n    ctx.save();\n\n    // Draw bricks\n    objects.bricks.forEach(brick => {\n      if (!brick.isDestroyed()) {\n        brick.draw(ctx);\n      }\n    });\n\n    // Draw paddle and ball\n    objects.paddle.draw(ctx);\n    objects.ball.draw(ctx);\n    ctx.restore();\n  }, []);\n  const animate = useCallback(timestamp => {\n    var _canvasRef$current;\n    if (isPaused || isGameOver) return;\n    const deltaTime = timestamp - (requestIdRef.current.lastTime || timestamp);\n    requestIdRef.current.lastTime = timestamp;\n    const ctx = (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.getContext('2d', {\n      alpha: false\n    });\n    const objects = gameObjectsRef.current;\n    if (!ctx || !objects) return;\n\n    // Clear canvas\n    ctx.fillStyle = '#000000';\n    ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n    // Update game objects\n    if (objects.ball.y + objects.ball.radius > canvasRef.current.height) {\n      handleBallOut();\n    } else {\n      objects.paddle.update(deltaTime / 1000);\n      objects.ball.update(deltaTime / 1000);\n\n      // Handle paddle collision\n      if (objects.ball.checkPaddleCollision(objects.paddle)) {\n        objects.ball.bounceOffPaddle(objects.paddle);\n        if (soundManagerRef.current) {\n          soundManagerRef.current.playPaddleHit();\n        }\n      }\n\n      // Only stick to paddle if not launched\n      if (!objects.ball.isLaunched) {\n        objects.ball.stickToPaddle(objects.paddle);\n      }\n\n      // Check brick collisions\n      let remainingBricks = 0;\n      let brickHit = false;\n\n      // Create a new array to store updated bricks\n      const updatedBricks = [];\n      for (const brick of objects.bricks) {\n        if (!brick.isDestroyed()) {\n          remainingBricks++;\n          if (!brickHit && objects.ball.checkBrickCollision(brick)) {\n            objects.ball.bounceOffBrick(brick);\n            brickHit = true;\n            if (brick.hit()) {\n              setScore(prev => prev + 100);\n              if (soundManagerRef.current) {\n                soundManagerRef.current.playBrickHit();\n              }\n            }\n          }\n        }\n        updatedBricks.push(brick);\n      }\n\n      // Update the bricks array with the new state\n      objects.bricks = updatedBricks;\n\n      // Check if level is complete\n      if (objects.bricks.length > 0 && remainingBricks === 0) {\n        const nextLevel = currentLevel + 1;\n        if (nextLevel <= levelManagerRef.current.getMaxLevel()) {\n          setCurrentLevel(nextLevel);\n        } else {\n          setIsGameOver(true);\n          setIsVictory(true);\n        }\n      }\n    }\n\n    // Draw game objects\n    drawGameObjects(ctx);\n    drawHUD(ctx);\n\n    // Request next frame\n    requestIdRef.current.id = requestAnimationFrame(animate);\n  }, [drawGameObjects, drawHUD, handleBallOut, currentLevel, isPaused, isGameOver, setCurrentLevel, setIsGameOver, setIsVictory, setScore]);\n\n  // Handle level changes\n  useEffect(() => {\n    if (!gameObjectsRef.current || !levelManagerRef.current) return;\n    const levelData = levelManagerRef.current.loadLevel(currentLevel);\n    if (levelData && levelData.bricks) {\n      gameObjectsRef.current.bricks = levelData.bricks;\n      resetBallAndPaddle();\n    }\n  }, [currentLevel, resetBallAndPaddle]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"game-canvas\",\n        width: 800,\n        height: 600,\n        tabIndex: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), isPaused && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pause-overlay\",\n        children: /*#__PURE__*/_jsxDEV(PauseMenu, {\n          onResume: handleResume,\n          onRestart: handleRestart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this), isGameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-over-overlay\",\n        children: /*#__PURE__*/_jsxDEV(GameOver, {\n          score: score,\n          level: currentLevel,\n          onRestart: handleRestart,\n          isVictory: isVictory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 5\n  }, this);\n};\n_s(GameCanvas, \"Iv635Mgl2G5iJ9LWHzBWZr1picE=\");\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useCallback","Ball","Paddle","LevelManager","PauseMenu","GameOver","SoundManager","jsxDEV","_jsxDEV","GameCanvas","lives","setLives","score","setScore","currentLevel","setCurrentLevel","isPaused","setIsPaused","isGameOver","setIsGameOver","isVictory","setIsVictory","_s","canvasRef","gameObjectsRef","requestIdRef","id","lastTime","levelManagerRef","soundManagerRef","current","canvas","width","height","paddle","ball","bricks","levelData","loadLevel","currentRequestId","requestAnimationFrame","animate","window","addEventListener","handleKeyDown","handleKeyUp","cancelAnimationFrame","removeEventListener","cleanup","drawHUD","ctx","save","fillStyle","font","textAlign","fillText","restore","resetBallAndPaddle","objects","x","y","leftPressed","rightPressed","dx","dy","isLaunched","handleRestart","handleBallOut","newLives","e","code","prev","moveLeft","moveRight","stopLeft","stopRight","handleResume","drawGameObjects","forEach","brick","isDestroyed","draw","timestamp","_canvasRef$current","deltaTime","getContext","alpha","fillRect","radius","update","checkPaddleCollision","bounceOffPaddle","playPaddleHit","stickToPaddle","remainingBricks","brickHit","updatedBricks","checkBrickCollision","bounceOffBrick","hit","playBrickHit","push","length","nextLevel","getMaxLevel","className","children","ref","tabIndex","fileName","_jsxFileName","lineNumber","columnNumber","onResume","onRestart","level","_c","$RefreshReg$"],"sources":["C:/Users/noahm/OneDrive/Desktop/Coding/brick_blaster2/client/src/components/Game/GameCanvas.js"],"sourcesContent":["import React, { useRef, useEffect, useCallback } from 'react';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport LevelManager from './LevelManager';\nimport PauseMenu from '../UI/PauseMenu';\nimport GameOver from '../UI/GameOver';\nimport SoundManager from '../../utils/SoundManager';\nimport '../../styles/components/GameCanvas.css';\n\nconst GameCanvas = ({ \n  lives, setLives, \n  score, setScore, \n  currentLevel, setCurrentLevel,\n  isPaused, setIsPaused,\n  isGameOver, setIsGameOver,\n  isVictory, setIsVictory \n}) => {\n  const canvasRef = useRef(null);\n  const gameObjectsRef = useRef(null);\n  const requestIdRef = useRef({ id: null, lastTime: 0 });\n  const levelManagerRef = useRef(null);\n  const soundManagerRef = useRef(null);\n\n  // Initialize managers and game state\n  useEffect(() => {\n    levelManagerRef.current = new LevelManager();\n    soundManagerRef.current = new SoundManager();\n\n    // Initialize game objects\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    canvas.width = 800;\n    canvas.height = 600;\n\n    gameObjectsRef.current = {\n      paddle: new Paddle(canvas.width / 2 - 50, canvas.height - 40),\n      ball: new Ball(canvas.width / 2, canvas.height - 60),\n      bricks: []\n    };\n\n    // Load initial level\n    const levelData = levelManagerRef.current.loadLevel(1);  // Always start with level 1\n    if (levelData && levelData.bricks) {\n      gameObjectsRef.current.bricks = levelData.bricks;\n    }\n\n    // Start animation\n    const currentRequestId = requestIdRef.current;\n    currentRequestId.id = requestAnimationFrame(animate);\n\n    // Add event listeners\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n\n    return () => {\n      if (currentRequestId.id) {\n        cancelAnimationFrame(currentRequestId.id);\n      }\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n      if (soundManagerRef.current) {\n        soundManagerRef.current.cleanup();\n      }\n    };\n  }, [handleKeyDown, handleKeyUp, animate]);\n\n  const drawHUD = useCallback((ctx) => {\n    if (!ctx || !canvasRef.current) return;\n    \n    ctx.save();\n    ctx.fillStyle = '#FFFFFF';\n    ctx.font = '20px Arial';\n    \n    // Draw score\n    ctx.textAlign = 'left';\n    ctx.fillText(`Score: ${score}`, 10, 30);\n    \n    // Draw level\n    ctx.textAlign = 'center';\n    ctx.fillText(`Level ${currentLevel}`, canvasRef.current.width / 2, 30);\n    \n    // Draw lives\n    ctx.textAlign = 'right';\n    ctx.fillText(`Lives: ${lives}`, canvasRef.current.width - 10, 30);\n    ctx.restore();\n  }, [score, lives, currentLevel]);\n\n  const resetBallAndPaddle = useCallback(() => {\n    if (!gameObjectsRef.current || !canvasRef.current) return;\n    \n    const canvas = canvasRef.current;\n    const objects = gameObjectsRef.current;\n    \n    // Reset paddle position and state\n    objects.paddle.x = canvas.width / 2 - objects.paddle.width / 2;\n    objects.paddle.y = canvas.height - 40;\n    objects.paddle.leftPressed = false;\n    objects.paddle.rightPressed = false;\n    \n    // Reset ball position and state\n    objects.ball.x = canvas.width / 2;\n    objects.ball.y = canvas.height - 60;\n    objects.ball.dx = 0;\n    objects.ball.dy = 0;\n    objects.ball.isLaunched = false;\n  }, []);\n\n  const handleRestart = useCallback(() => {\n    if (!levelManagerRef.current) return;\n\n    setIsPaused(false);\n    setIsGameOver(false);\n    setIsVictory(false);\n    setScore(0);\n    setLives(3);\n    setCurrentLevel(1);\n    \n    // Reset level manager to ensure fresh state\n    levelManagerRef.current = new LevelManager();\n    resetBallAndPaddle();\n  }, [resetBallAndPaddle, setCurrentLevel, setIsGameOver, setIsVictory, setIsPaused, setLives, setScore]);\n\n  const handleBallOut = useCallback(() => {\n    const newLives = lives - 1;\n    setLives(newLives);\n    \n    if (newLives <= 0) {\n      setIsGameOver(true);\n      setIsVictory(false);\n      setIsPaused(false);\n    } else {\n      resetBallAndPaddle();\n    }\n  }, [lives, setLives, setIsGameOver, setIsVictory, setIsPaused, resetBallAndPaddle]);\n\n  const handleKeyDown = useCallback((e) => {\n    const objects = gameObjectsRef.current;\n    if (!objects) return;\n\n    if (e.code === 'Space') {\n      if (isGameOver) {\n        handleRestart();\n      } else {\n        setIsPaused(prev => !prev);\n      }\n      return;\n    }\n\n    if (isPaused || isGameOver) return;\n\n    switch (e.code) {\n      case 'ArrowLeft':\n        objects.paddle.moveLeft();\n        break;\n      case 'ArrowRight':\n        objects.paddle.moveRight();\n        break;\n      default:\n        break;\n    }\n  }, [isGameOver, isPaused, handleRestart, setIsPaused]);\n\n  const handleKeyUp = useCallback((e) => {\n    const objects = gameObjectsRef.current;\n    if (!objects) return;\n\n    switch (e.code) {\n      case 'ArrowLeft':\n        objects.paddle.stopLeft();\n        break;\n      case 'ArrowRight':\n        objects.paddle.stopRight();\n        break;\n      default:\n        break;\n    }\n  }, []);\n\n  const handleResume = useCallback(() => {\n    setIsPaused(false);\n  }, [setIsPaused]);\n\n  const drawGameObjects = useCallback((ctx) => {\n    if (!ctx || !gameObjectsRef.current) return;\n    \n    const objects = gameObjectsRef.current;\n    ctx.save();\n\n    // Draw bricks\n    objects.bricks.forEach(brick => {\n      if (!brick.isDestroyed()) {\n        brick.draw(ctx);\n      }\n    });\n\n    // Draw paddle and ball\n    objects.paddle.draw(ctx);\n    objects.ball.draw(ctx);\n\n    ctx.restore();\n  }, []);\n\n  const animate = useCallback((timestamp) => {\n    if (isPaused || isGameOver) return;\n\n    const deltaTime = timestamp - (requestIdRef.current.lastTime || timestamp);\n    requestIdRef.current.lastTime = timestamp;\n\n    const ctx = canvasRef.current?.getContext('2d', { alpha: false });\n    const objects = gameObjectsRef.current;\n\n    if (!ctx || !objects) return;\n\n    // Clear canvas\n    ctx.fillStyle = '#000000';\n    ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n    // Update game objects\n    if (objects.ball.y + objects.ball.radius > canvasRef.current.height) {\n      handleBallOut();\n    } else {\n      objects.paddle.update(deltaTime / 1000);\n      objects.ball.update(deltaTime / 1000);\n\n      // Handle paddle collision\n      if (objects.ball.checkPaddleCollision(objects.paddle)) {\n        objects.ball.bounceOffPaddle(objects.paddle);\n        if (soundManagerRef.current) {\n          soundManagerRef.current.playPaddleHit();\n        }\n      }\n\n      // Only stick to paddle if not launched\n      if (!objects.ball.isLaunched) {\n        objects.ball.stickToPaddle(objects.paddle);\n      }\n\n      // Check brick collisions\n      let remainingBricks = 0;\n      let brickHit = false;\n\n      // Create a new array to store updated bricks\n      const updatedBricks = [];\n\n      for (const brick of objects.bricks) {\n        if (!brick.isDestroyed()) {\n          remainingBricks++;\n          if (!brickHit && objects.ball.checkBrickCollision(brick)) {\n            objects.ball.bounceOffBrick(brick);\n            brickHit = true;\n            if (brick.hit()) {\n              setScore(prev => prev + 100);\n              if (soundManagerRef.current) {\n                soundManagerRef.current.playBrickHit();\n              }\n            }\n          }\n        }\n        updatedBricks.push(brick);\n      }\n\n      // Update the bricks array with the new state\n      objects.bricks = updatedBricks;\n\n      // Check if level is complete\n      if (objects.bricks.length > 0 && remainingBricks === 0) {\n        const nextLevel = currentLevel + 1;\n        if (nextLevel <= levelManagerRef.current.getMaxLevel()) {\n          setCurrentLevel(nextLevel);\n        } else {\n          setIsGameOver(true);\n          setIsVictory(true);\n        }\n      }\n    }\n\n    // Draw game objects\n    drawGameObjects(ctx);\n    drawHUD(ctx);\n\n    // Request next frame\n    requestIdRef.current.id = requestAnimationFrame(animate);\n  }, [drawGameObjects, drawHUD, handleBallOut, currentLevel, isPaused, isGameOver, \n      setCurrentLevel, setIsGameOver, setIsVictory, setScore]);\n\n  // Handle level changes\n  useEffect(() => {\n    if (!gameObjectsRef.current || !levelManagerRef.current) return;\n    \n    const levelData = levelManagerRef.current.loadLevel(currentLevel);\n    if (levelData && levelData.bricks) {\n      gameObjectsRef.current.bricks = levelData.bricks;\n      resetBallAndPaddle();\n    }\n  }, [currentLevel, resetBallAndPaddle]);\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"canvas-wrapper\">\n        <canvas\n          ref={canvasRef}\n          className=\"game-canvas\"\n          width={800}\n          height={600}\n          tabIndex={0}\n        />\n        {isPaused && (\n          <div className=\"pause-overlay\">\n            <PauseMenu\n              onResume={handleResume}\n              onRestart={handleRestart}\n            />\n          </div>\n        )}\n        {isGameOver && (\n          <div className=\"game-over-overlay\">\n            <GameOver\n              score={score}\n              level={currentLevel}\n              onRestart={handleRestart}\n              isVictory={isVictory}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default GameCanvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}