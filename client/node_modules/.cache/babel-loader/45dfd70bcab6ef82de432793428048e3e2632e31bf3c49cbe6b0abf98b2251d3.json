{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noahm\\\\OneDrive\\\\Desktop\\\\Coding\\\\brick_blaster2\\\\client\\\\src\\\\components\\\\Game\\\\GameCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport PauseMenu from '../UI/PauseMenu';\nimport GameOver from '../UI/GameOver';\nimport LevelManager from './LevelManager';\nimport '../../styles/components/GameCanvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameCanvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const gameObjectsRef = useRef(null);\n  const requestIdRef = useRef(null);\n  const [score, setScore] = useState(0);\n  const [lives, setLives] = useState(3);\n  const [currentLevel, setCurrentLevel] = useState(1);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [isVictory, setIsVictory] = useState(false);\n\n  // Create levelManager ref to avoid dependency issues\n  const levelManagerRef = useRef(new LevelManager());\n\n  // Memoize the game loop callback to avoid recreating it on every render\n  const gameLoop = useCallback(timestamp => {\n    if (!canvasRef.current) return;\n    const ctx = canvasRef.current.getContext('2d');\n    if (!requestIdRef.current.lastTime) {\n      requestIdRef.current.lastTime = timestamp;\n      requestIdRef.current.id = requestAnimationFrame(gameLoop);\n      return;\n    }\n    const deltaTime = (timestamp - requestIdRef.current.lastTime) / 1000;\n    requestIdRef.current.lastTime = timestamp;\n    if (!isPaused && !isGameOver) {\n      const objects = gameObjectsRef.current;\n\n      // Clear canvas\n      ctx.fillStyle = '#000000';\n      ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n      // Update game objects with deltaTime\n      objects.paddle.update(deltaTime);\n\n      // Make ball stick to paddle if not launched\n      if (!objects.ball.isLaunched) {\n        objects.ball.stickToPaddle(objects.paddle);\n      } else {\n        objects.ball.update(deltaTime);\n      }\n\n      // Draw game objects in correct order\n      objects.bricks.forEach(brick => {\n        if (!brick.isDestroyed()) {\n          brick.draw(ctx);\n        }\n      });\n      objects.ball.draw(ctx);\n      objects.paddle.draw(ctx);\n\n      // Draw debug info\n      ctx.font = '12px Courier New';\n      ctx.fillStyle = '#00FF00';\n      ctx.textAlign = 'left';\n      ctx.fillText(`Ball: x=${Math.round(objects.ball.x)}, y=${Math.round(objects.ball.y)}, launched=${objects.ball.isLaunched}`, 10, canvasRef.current.height - 60);\n      ctx.fillText(`Paddle: x=${Math.round(objects.paddle.x)}, y=${Math.round(objects.paddle.y)}, left=${objects.paddle.leftPressed}, right=${objects.paddle.rightPressed}`, 10, canvasRef.current.height - 40);\n\n      // Draw HUD\n      ctx.font = '16px Courier New';\n      ctx.fillStyle = '#00FF00';\n      ctx.textAlign = 'left';\n      ctx.fillText(`Score: ${score}`, 10, 40);\n      ctx.textAlign = 'center';\n      ctx.fillText(`Level: ${currentLevel}`, canvasRef.current.width / 2, 40);\n      ctx.textAlign = 'right';\n      ctx.fillText(`Lives: ${lives}`, canvasRef.current.width - 10, 40);\n\n      // Check for collisions\n      if (objects.ball.checkPaddleCollision(objects.paddle)) {\n        objects.ball.bounceOffPaddle(objects.paddle);\n      }\n      objects.bricks.forEach(brick => {\n        if (!brick.isDestroyed() && objects.ball.checkBrickCollision(brick)) {\n          objects.ball.bounceOffBrick();\n          if (brick.hit()) {\n            setScore(s => s + 100);\n          }\n        }\n      });\n\n      // Check if ball is lost\n      if (objects.ball.y + objects.ball.radius > canvasRef.current.height) {\n        setLives(l => l - 1);\n        if (lives > 1) {\n          objects.ball.reset();\n        } else {\n          setIsGameOver(true);\n        }\n      }\n\n      // Check if level is complete\n      if (objects.bricks.every(brick => brick.isDestroyed())) {\n        if (currentLevel < levelManagerRef.current.getMaxLevel()) {\n          setCurrentLevel(l => l + 1);\n          objects.ball.reset();\n          objects.paddle.reset();\n          objects.bricks = levelManagerRef.current.loadLevel(currentLevel + 1).bricks;\n        } else {\n          setIsVictory(true);\n          setIsGameOver(true);\n        }\n      }\n    }\n    requestIdRef.current.id = requestAnimationFrame(gameLoop);\n  }, [isPaused, isGameOver, lives, currentLevel, score]); // Include all dependencies\n\n  // Memoize keyboard handlers to avoid recreating them on every render\n  const handleKeyDown = useCallback(e => {\n    var _gameObjectsRef$curre, _gameObjectsRef$curre2, _gameObjectsRef$curre3;\n    if (!isPaused && !isGameOver) {\n      switch (e.key.toLowerCase()) {\n        case 'a':\n        case 'arrowleft':\n          if ((_gameObjectsRef$curre = gameObjectsRef.current) !== null && _gameObjectsRef$curre !== void 0 && _gameObjectsRef$curre.paddle) {\n            gameObjectsRef.current.paddle.moveLeft();\n          }\n          break;\n        case 'd':\n        case 'arrowright':\n          if ((_gameObjectsRef$curre2 = gameObjectsRef.current) !== null && _gameObjectsRef$curre2 !== void 0 && _gameObjectsRef$curre2.paddle) {\n            gameObjectsRef.current.paddle.moveRight();\n          }\n          break;\n        case ' ':\n          if ((_gameObjectsRef$curre3 = gameObjectsRef.current) !== null && _gameObjectsRef$curre3 !== void 0 && _gameObjectsRef$curre3.ball && !gameObjectsRef.current.ball.isLaunched) {\n            gameObjectsRef.current.ball.launch();\n          }\n          break;\n        case 'escape':\n          setIsPaused(prev => !prev);\n          break;\n        default:\n          break;\n      }\n    }\n  }, [isPaused, isGameOver]);\n  const handleKeyUp = useCallback(e => {\n    var _gameObjectsRef$curre4, _gameObjectsRef$curre5;\n    if (!isPaused && !isGameOver) {\n      switch (e.key.toLowerCase()) {\n        case 'a':\n        case 'arrowleft':\n          if ((_gameObjectsRef$curre4 = gameObjectsRef.current) !== null && _gameObjectsRef$curre4 !== void 0 && _gameObjectsRef$curre4.paddle) {\n            gameObjectsRef.current.paddle.stopLeft();\n          }\n          break;\n        case 'd':\n        case 'arrowright':\n          if ((_gameObjectsRef$curre5 = gameObjectsRef.current) !== null && _gameObjectsRef$curre5 !== void 0 && _gameObjectsRef$curre5.paddle) {\n            gameObjectsRef.current.paddle.stopRight();\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }, [isPaused, isGameOver]);\n\n  // Initialize game objects and setup effect\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Set canvas size\n    canvas.width = 800;\n    canvas.height = 600;\n\n    // Initialize game objects if not already initialized\n    if (!gameObjectsRef.current) {\n      gameObjectsRef.current = {\n        ball: new Ball(canvas.width / 2, canvas.height - 30),\n        paddle: new Paddle(canvas.width / 2 - 50, canvas.height - 20),\n        bricks: levelManagerRef.current.loadLevel(currentLevel).bricks\n      };\n    }\n\n    // Initialize requestIdRef with timing info\n    requestIdRef.current = {\n      id: null,\n      lastTime: 0\n    };\n    canvas.tabIndex = 0;\n    canvas.focus();\n    canvas.addEventListener('keydown', handleKeyDown);\n    canvas.addEventListener('keyup', handleKeyUp);\n\n    // Start game loop\n    requestIdRef.current.id = requestAnimationFrame(gameLoop);\n    return () => {\n      if (requestIdRef.current.id) {\n        cancelAnimationFrame(requestIdRef.current.id);\n      }\n      canvas.removeEventListener('keydown', handleKeyDown);\n      canvas.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [gameLoop, handleKeyDown, handleKeyUp, currentLevel, isPaused, isGameOver]);\n  const handleRestart = () => {\n    if (gameObjectsRef.current) {\n      gameObjectsRef.current.ball.reset();\n      gameObjectsRef.current.paddle.reset();\n      gameObjectsRef.current.bricks = levelManagerRef.current.loadLevel(1).bricks;\n      setScore(0);\n      setLives(3);\n      setCurrentLevel(1);\n      setIsGameOver(false);\n      setIsVictory(false);\n      setIsPaused(false);\n    }\n  };\n  const navigate = useNavigate();\n  const handleMainMenu = () => {\n    if (requestIdRef.current.id) {\n      cancelAnimationFrame(requestIdRef.current.id);\n    }\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"game-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), isPaused && !isGameOver && /*#__PURE__*/_jsxDEV(PauseMenu, {\n      onResume: () => setIsPaused(false),\n      onRestart: handleRestart,\n      onMainMenu: handleMainMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }, this), isGameOver && /*#__PURE__*/_jsxDEV(GameOver, {\n      score: score,\n      level: currentLevel,\n      isVictory: isVictory,\n      onRestart: handleRestart,\n      onMainMenu: handleMainMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n};\n_s(GameCanvas, \"uMFvmPnzoGkQU6UGImEq4ZgRdDM=\", false, function () {\n  return [useNavigate];\n});\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","useNavigate","Ball","Paddle","PauseMenu","GameOver","LevelManager","jsxDEV","_jsxDEV","GameCanvas","_s","canvasRef","gameObjectsRef","requestIdRef","score","setScore","lives","setLives","currentLevel","setCurrentLevel","isPaused","setIsPaused","isGameOver","setIsGameOver","isVictory","setIsVictory","levelManagerRef","gameLoop","timestamp","current","ctx","getContext","lastTime","id","requestAnimationFrame","deltaTime","objects","fillStyle","fillRect","width","height","paddle","update","ball","isLaunched","stickToPaddle","bricks","forEach","brick","isDestroyed","draw","font","textAlign","fillText","Math","round","x","y","leftPressed","rightPressed","checkPaddleCollision","bounceOffPaddle","checkBrickCollision","bounceOffBrick","hit","s","radius","l","reset","every","getMaxLevel","loadLevel","handleKeyDown","e","_gameObjectsRef$curre","_gameObjectsRef$curre2","_gameObjectsRef$curre3","key","toLowerCase","moveLeft","moveRight","launch","prev","handleKeyUp","_gameObjectsRef$curre4","_gameObjectsRef$curre5","stopLeft","stopRight","canvas","tabIndex","focus","addEventListener","cancelAnimationFrame","removeEventListener","handleRestart","navigate","handleMainMenu","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onResume","onRestart","onMainMenu","level","_c","$RefreshReg$"],"sources":["C:/Users/noahm/OneDrive/Desktop/Coding/brick_blaster2/client/src/components/Game/GameCanvas.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport PauseMenu from '../UI/PauseMenu';\nimport GameOver from '../UI/GameOver';\nimport LevelManager from './LevelManager';\nimport '../../styles/components/GameCanvas.css';\n\nconst GameCanvas = () => {\n  const canvasRef = useRef(null);\n  const gameObjectsRef = useRef(null);\n  const requestIdRef = useRef(null);\n  const [score, setScore] = useState(0);\n  const [lives, setLives] = useState(3);\n  const [currentLevel, setCurrentLevel] = useState(1);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [isVictory, setIsVictory] = useState(false);\n  \n  // Create levelManager ref to avoid dependency issues\n  const levelManagerRef = useRef(new LevelManager());\n\n  // Memoize the game loop callback to avoid recreating it on every render\n  const gameLoop = useCallback((timestamp) => {\n    if (!canvasRef.current) return;\n    const ctx = canvasRef.current.getContext('2d');\n\n    if (!requestIdRef.current.lastTime) {\n      requestIdRef.current.lastTime = timestamp;\n      requestIdRef.current.id = requestAnimationFrame(gameLoop);\n      return;\n    }\n    \n    const deltaTime = (timestamp - requestIdRef.current.lastTime) / 1000;\n    requestIdRef.current.lastTime = timestamp;\n\n    if (!isPaused && !isGameOver) {\n      const objects = gameObjectsRef.current;\n      \n      // Clear canvas\n      ctx.fillStyle = '#000000';\n      ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n      // Update game objects with deltaTime\n      objects.paddle.update(deltaTime);\n      \n      // Make ball stick to paddle if not launched\n      if (!objects.ball.isLaunched) {\n        objects.ball.stickToPaddle(objects.paddle);\n      } else {\n        objects.ball.update(deltaTime);\n      }\n\n      // Draw game objects in correct order\n      objects.bricks.forEach(brick => {\n        if (!brick.isDestroyed()) {\n          brick.draw(ctx);\n        }\n      });\n\n      objects.ball.draw(ctx);\n      objects.paddle.draw(ctx);\n\n      // Draw debug info\n      ctx.font = '12px Courier New';\n      ctx.fillStyle = '#00FF00';\n      ctx.textAlign = 'left';\n      ctx.fillText(`Ball: x=${Math.round(objects.ball.x)}, y=${Math.round(objects.ball.y)}, launched=${objects.ball.isLaunched}`, 10, canvasRef.current.height - 60);\n      ctx.fillText(`Paddle: x=${Math.round(objects.paddle.x)}, y=${Math.round(objects.paddle.y)}, left=${objects.paddle.leftPressed}, right=${objects.paddle.rightPressed}`, 10, canvasRef.current.height - 40);\n\n      // Draw HUD\n      ctx.font = '16px Courier New';\n      ctx.fillStyle = '#00FF00';\n      ctx.textAlign = 'left';\n      ctx.fillText(`Score: ${score}`, 10, 40);\n      ctx.textAlign = 'center';\n      ctx.fillText(`Level: ${currentLevel}`, canvasRef.current.width / 2, 40);\n      ctx.textAlign = 'right';\n      ctx.fillText(`Lives: ${lives}`, canvasRef.current.width - 10, 40);\n\n      // Check for collisions\n      if (objects.ball.checkPaddleCollision(objects.paddle)) {\n        objects.ball.bounceOffPaddle(objects.paddle);\n      }\n\n      objects.bricks.forEach((brick) => {\n        if (!brick.isDestroyed() && objects.ball.checkBrickCollision(brick)) {\n          objects.ball.bounceOffBrick();\n          if (brick.hit()) {\n            setScore(s => s + 100);\n          }\n        }\n      });\n\n      // Check if ball is lost\n      if (objects.ball.y + objects.ball.radius > canvasRef.current.height) {\n        setLives(l => l - 1);\n        if (lives > 1) {\n          objects.ball.reset();\n        } else {\n          setIsGameOver(true);\n        }\n      }\n\n      // Check if level is complete\n      if (objects.bricks.every(brick => brick.isDestroyed())) {\n        if (currentLevel < levelManagerRef.current.getMaxLevel()) {\n          setCurrentLevel(l => l + 1);\n          objects.ball.reset();\n          objects.paddle.reset();\n          objects.bricks = levelManagerRef.current.loadLevel(currentLevel + 1).bricks;\n        } else {\n          setIsVictory(true);\n          setIsGameOver(true);\n        }\n      }\n    }\n\n    requestIdRef.current.id = requestAnimationFrame(gameLoop);\n  }, [isPaused, isGameOver, lives, currentLevel, score]); // Include all dependencies\n\n  // Memoize keyboard handlers to avoid recreating them on every render\n  const handleKeyDown = useCallback((e) => {\n    if (!isPaused && !isGameOver) {\n      switch (e.key.toLowerCase()) {\n        case 'a':\n        case 'arrowleft':\n          if (gameObjectsRef.current?.paddle) {\n            gameObjectsRef.current.paddle.moveLeft();\n          }\n          break;\n        case 'd':\n        case 'arrowright':\n          if (gameObjectsRef.current?.paddle) {\n            gameObjectsRef.current.paddle.moveRight();\n          }\n          break;\n        case ' ':\n          if (gameObjectsRef.current?.ball && !gameObjectsRef.current.ball.isLaunched) {\n            gameObjectsRef.current.ball.launch();\n          }\n          break;\n        case 'escape':\n          setIsPaused(prev => !prev);\n          break;\n        default:\n          break;\n      }\n    }\n  }, [isPaused, isGameOver]);\n\n  const handleKeyUp = useCallback((e) => {\n    if (!isPaused && !isGameOver) {\n      switch (e.key.toLowerCase()) {\n        case 'a':\n        case 'arrowleft':\n          if (gameObjectsRef.current?.paddle) {\n            gameObjectsRef.current.paddle.stopLeft();\n          }\n          break;\n        case 'd':\n        case 'arrowright':\n          if (gameObjectsRef.current?.paddle) {\n            gameObjectsRef.current.paddle.stopRight();\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }, [isPaused, isGameOver]);\n\n  // Initialize game objects and setup effect\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Set canvas size\n    canvas.width = 800;\n    canvas.height = 600;\n    \n    // Initialize game objects if not already initialized\n    if (!gameObjectsRef.current) {\n      gameObjectsRef.current = {\n        ball: new Ball(canvas.width / 2, canvas.height - 30),\n        paddle: new Paddle(canvas.width / 2 - 50, canvas.height - 20),\n        bricks: levelManagerRef.current.loadLevel(currentLevel).bricks\n      };\n    }\n\n    // Initialize requestIdRef with timing info\n    requestIdRef.current = {\n      id: null,\n      lastTime: 0\n    };\n\n    canvas.tabIndex = 0;\n    canvas.focus();\n    canvas.addEventListener('keydown', handleKeyDown);\n    canvas.addEventListener('keyup', handleKeyUp);\n\n    // Start game loop\n    requestIdRef.current.id = requestAnimationFrame(gameLoop);\n\n    return () => {\n      if (requestIdRef.current.id) {\n        cancelAnimationFrame(requestIdRef.current.id);\n      }\n      canvas.removeEventListener('keydown', handleKeyDown);\n      canvas.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [gameLoop, handleKeyDown, handleKeyUp, currentLevel, isPaused, isGameOver]);\n\n  const handleRestart = () => {\n    if (gameObjectsRef.current) {\n      gameObjectsRef.current.ball.reset();\n      gameObjectsRef.current.paddle.reset();\n      gameObjectsRef.current.bricks = levelManagerRef.current.loadLevel(1).bricks;\n      setScore(0);\n      setLives(3);\n      setCurrentLevel(1);\n      setIsGameOver(false);\n      setIsVictory(false);\n      setIsPaused(false);\n    }\n  };\n\n  const navigate = useNavigate();\n  const handleMainMenu = () => {\n    if (requestIdRef.current.id) {\n      cancelAnimationFrame(requestIdRef.current.id);\n    }\n    navigate('/');\n  };\n\n  return (\n    <div className=\"game-container\">\n      <canvas\n        ref={canvasRef}\n        className=\"game-canvas\"\n      />\n      {isPaused && !isGameOver && (\n        <PauseMenu\n          onResume={() => setIsPaused(false)}\n          onRestart={handleRestart}\n          onMainMenu={handleMainMenu}\n        />\n      )}\n      {isGameOver && (\n        <GameOver\n          score={score}\n          level={currentLevel}\n          isVictory={isVictory}\n          onRestart={handleRestart}\n          onMainMenu={handleMainMenu}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default GameCanvas;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACvE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAO,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,SAAS,GAAGd,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMe,cAAc,GAAGf,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMgB,YAAY,GAAGhB,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAM2B,eAAe,GAAG7B,MAAM,CAAC,IAAIS,YAAY,CAAC,CAAC,CAAC;;EAElD;EACA,MAAMqB,QAAQ,GAAG3B,WAAW,CAAE4B,SAAS,IAAK;IAC1C,IAAI,CAACjB,SAAS,CAACkB,OAAO,EAAE;IACxB,MAAMC,GAAG,GAAGnB,SAAS,CAACkB,OAAO,CAACE,UAAU,CAAC,IAAI,CAAC;IAE9C,IAAI,CAAClB,YAAY,CAACgB,OAAO,CAACG,QAAQ,EAAE;MAClCnB,YAAY,CAACgB,OAAO,CAACG,QAAQ,GAAGJ,SAAS;MACzCf,YAAY,CAACgB,OAAO,CAACI,EAAE,GAAGC,qBAAqB,CAACP,QAAQ,CAAC;MACzD;IACF;IAEA,MAAMQ,SAAS,GAAG,CAACP,SAAS,GAAGf,YAAY,CAACgB,OAAO,CAACG,QAAQ,IAAI,IAAI;IACpEnB,YAAY,CAACgB,OAAO,CAACG,QAAQ,GAAGJ,SAAS;IAEzC,IAAI,CAACR,QAAQ,IAAI,CAACE,UAAU,EAAE;MAC5B,MAAMc,OAAO,GAAGxB,cAAc,CAACiB,OAAO;;MAEtC;MACAC,GAAG,CAACO,SAAS,GAAG,SAAS;MACzBP,GAAG,CAACQ,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE3B,SAAS,CAACkB,OAAO,CAACU,KAAK,EAAE5B,SAAS,CAACkB,OAAO,CAACW,MAAM,CAAC;;MAErE;MACAJ,OAAO,CAACK,MAAM,CAACC,MAAM,CAACP,SAAS,CAAC;;MAEhC;MACA,IAAI,CAACC,OAAO,CAACO,IAAI,CAACC,UAAU,EAAE;QAC5BR,OAAO,CAACO,IAAI,CAACE,aAAa,CAACT,OAAO,CAACK,MAAM,CAAC;MAC5C,CAAC,MAAM;QACLL,OAAO,CAACO,IAAI,CAACD,MAAM,CAACP,SAAS,CAAC;MAChC;;MAEA;MACAC,OAAO,CAACU,MAAM,CAACC,OAAO,CAACC,KAAK,IAAI;QAC9B,IAAI,CAACA,KAAK,CAACC,WAAW,CAAC,CAAC,EAAE;UACxBD,KAAK,CAACE,IAAI,CAACpB,GAAG,CAAC;QACjB;MACF,CAAC,CAAC;MAEFM,OAAO,CAACO,IAAI,CAACO,IAAI,CAACpB,GAAG,CAAC;MACtBM,OAAO,CAACK,MAAM,CAACS,IAAI,CAACpB,GAAG,CAAC;;MAExB;MACAA,GAAG,CAACqB,IAAI,GAAG,kBAAkB;MAC7BrB,GAAG,CAACO,SAAS,GAAG,SAAS;MACzBP,GAAG,CAACsB,SAAS,GAAG,MAAM;MACtBtB,GAAG,CAACuB,QAAQ,CAAC,WAAWC,IAAI,CAACC,KAAK,CAACnB,OAAO,CAACO,IAAI,CAACa,CAAC,CAAC,OAAOF,IAAI,CAACC,KAAK,CAACnB,OAAO,CAACO,IAAI,CAACc,CAAC,CAAC,cAAcrB,OAAO,CAACO,IAAI,CAACC,UAAU,EAAE,EAAE,EAAE,EAAEjC,SAAS,CAACkB,OAAO,CAACW,MAAM,GAAG,EAAE,CAAC;MAC9JV,GAAG,CAACuB,QAAQ,CAAC,aAAaC,IAAI,CAACC,KAAK,CAACnB,OAAO,CAACK,MAAM,CAACe,CAAC,CAAC,OAAOF,IAAI,CAACC,KAAK,CAACnB,OAAO,CAACK,MAAM,CAACgB,CAAC,CAAC,UAAUrB,OAAO,CAACK,MAAM,CAACiB,WAAW,WAAWtB,OAAO,CAACK,MAAM,CAACkB,YAAY,EAAE,EAAE,EAAE,EAAEhD,SAAS,CAACkB,OAAO,CAACW,MAAM,GAAG,EAAE,CAAC;;MAEzM;MACAV,GAAG,CAACqB,IAAI,GAAG,kBAAkB;MAC7BrB,GAAG,CAACO,SAAS,GAAG,SAAS;MACzBP,GAAG,CAACsB,SAAS,GAAG,MAAM;MACtBtB,GAAG,CAACuB,QAAQ,CAAC,UAAUvC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MACvCgB,GAAG,CAACsB,SAAS,GAAG,QAAQ;MACxBtB,GAAG,CAACuB,QAAQ,CAAC,UAAUnC,YAAY,EAAE,EAAEP,SAAS,CAACkB,OAAO,CAACU,KAAK,GAAG,CAAC,EAAE,EAAE,CAAC;MACvET,GAAG,CAACsB,SAAS,GAAG,OAAO;MACvBtB,GAAG,CAACuB,QAAQ,CAAC,UAAUrC,KAAK,EAAE,EAAEL,SAAS,CAACkB,OAAO,CAACU,KAAK,GAAG,EAAE,EAAE,EAAE,CAAC;;MAEjE;MACA,IAAIH,OAAO,CAACO,IAAI,CAACiB,oBAAoB,CAACxB,OAAO,CAACK,MAAM,CAAC,EAAE;QACrDL,OAAO,CAACO,IAAI,CAACkB,eAAe,CAACzB,OAAO,CAACK,MAAM,CAAC;MAC9C;MAEAL,OAAO,CAACU,MAAM,CAACC,OAAO,CAAEC,KAAK,IAAK;QAChC,IAAI,CAACA,KAAK,CAACC,WAAW,CAAC,CAAC,IAAIb,OAAO,CAACO,IAAI,CAACmB,mBAAmB,CAACd,KAAK,CAAC,EAAE;UACnEZ,OAAO,CAACO,IAAI,CAACoB,cAAc,CAAC,CAAC;UAC7B,IAAIf,KAAK,CAACgB,GAAG,CAAC,CAAC,EAAE;YACfjD,QAAQ,CAACkD,CAAC,IAAIA,CAAC,GAAG,GAAG,CAAC;UACxB;QACF;MACF,CAAC,CAAC;;MAEF;MACA,IAAI7B,OAAO,CAACO,IAAI,CAACc,CAAC,GAAGrB,OAAO,CAACO,IAAI,CAACuB,MAAM,GAAGvD,SAAS,CAACkB,OAAO,CAACW,MAAM,EAAE;QACnEvB,QAAQ,CAACkD,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;QACpB,IAAInD,KAAK,GAAG,CAAC,EAAE;UACboB,OAAO,CAACO,IAAI,CAACyB,KAAK,CAAC,CAAC;QACtB,CAAC,MAAM;UACL7C,aAAa,CAAC,IAAI,CAAC;QACrB;MACF;;MAEA;MACA,IAAIa,OAAO,CAACU,MAAM,CAACuB,KAAK,CAACrB,KAAK,IAAIA,KAAK,CAACC,WAAW,CAAC,CAAC,CAAC,EAAE;QACtD,IAAI/B,YAAY,GAAGQ,eAAe,CAACG,OAAO,CAACyC,WAAW,CAAC,CAAC,EAAE;UACxDnD,eAAe,CAACgD,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;UAC3B/B,OAAO,CAACO,IAAI,CAACyB,KAAK,CAAC,CAAC;UACpBhC,OAAO,CAACK,MAAM,CAAC2B,KAAK,CAAC,CAAC;UACtBhC,OAAO,CAACU,MAAM,GAAGpB,eAAe,CAACG,OAAO,CAAC0C,SAAS,CAACrD,YAAY,GAAG,CAAC,CAAC,CAAC4B,MAAM;QAC7E,CAAC,MAAM;UACLrB,YAAY,CAAC,IAAI,CAAC;UAClBF,aAAa,CAAC,IAAI,CAAC;QACrB;MACF;IACF;IAEAV,YAAY,CAACgB,OAAO,CAACI,EAAE,GAAGC,qBAAqB,CAACP,QAAQ,CAAC;EAC3D,CAAC,EAAE,CAACP,QAAQ,EAAEE,UAAU,EAAEN,KAAK,EAAEE,YAAY,EAAEJ,KAAK,CAAC,CAAC,CAAC,CAAC;;EAExD;EACA,MAAM0D,aAAa,GAAGxE,WAAW,CAAEyE,CAAC,IAAK;IAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;IACvC,IAAI,CAACxD,QAAQ,IAAI,CAACE,UAAU,EAAE;MAC5B,QAAQmD,CAAC,CAACI,GAAG,CAACC,WAAW,CAAC,CAAC;QACzB,KAAK,GAAG;QACR,KAAK,WAAW;UACd,KAAAJ,qBAAA,GAAI9D,cAAc,CAACiB,OAAO,cAAA6C,qBAAA,eAAtBA,qBAAA,CAAwBjC,MAAM,EAAE;YAClC7B,cAAc,CAACiB,OAAO,CAACY,MAAM,CAACsC,QAAQ,CAAC,CAAC;UAC1C;UACA;QACF,KAAK,GAAG;QACR,KAAK,YAAY;UACf,KAAAJ,sBAAA,GAAI/D,cAAc,CAACiB,OAAO,cAAA8C,sBAAA,eAAtBA,sBAAA,CAAwBlC,MAAM,EAAE;YAClC7B,cAAc,CAACiB,OAAO,CAACY,MAAM,CAACuC,SAAS,CAAC,CAAC;UAC3C;UACA;QACF,KAAK,GAAG;UACN,IAAI,CAAAJ,sBAAA,GAAAhE,cAAc,CAACiB,OAAO,cAAA+C,sBAAA,eAAtBA,sBAAA,CAAwBjC,IAAI,IAAI,CAAC/B,cAAc,CAACiB,OAAO,CAACc,IAAI,CAACC,UAAU,EAAE;YAC3EhC,cAAc,CAACiB,OAAO,CAACc,IAAI,CAACsC,MAAM,CAAC,CAAC;UACtC;UACA;QACF,KAAK,QAAQ;UACX5D,WAAW,CAAC6D,IAAI,IAAI,CAACA,IAAI,CAAC;UAC1B;QACF;UACE;MACJ;IACF;EACF,CAAC,EAAE,CAAC9D,QAAQ,EAAEE,UAAU,CAAC,CAAC;EAE1B,MAAM6D,WAAW,GAAGnF,WAAW,CAAEyE,CAAC,IAAK;IAAA,IAAAW,sBAAA,EAAAC,sBAAA;IACrC,IAAI,CAACjE,QAAQ,IAAI,CAACE,UAAU,EAAE;MAC5B,QAAQmD,CAAC,CAACI,GAAG,CAACC,WAAW,CAAC,CAAC;QACzB,KAAK,GAAG;QACR,KAAK,WAAW;UACd,KAAAM,sBAAA,GAAIxE,cAAc,CAACiB,OAAO,cAAAuD,sBAAA,eAAtBA,sBAAA,CAAwB3C,MAAM,EAAE;YAClC7B,cAAc,CAACiB,OAAO,CAACY,MAAM,CAAC6C,QAAQ,CAAC,CAAC;UAC1C;UACA;QACF,KAAK,GAAG;QACR,KAAK,YAAY;UACf,KAAAD,sBAAA,GAAIzE,cAAc,CAACiB,OAAO,cAAAwD,sBAAA,eAAtBA,sBAAA,CAAwB5C,MAAM,EAAE;YAClC7B,cAAc,CAACiB,OAAO,CAACY,MAAM,CAAC8C,SAAS,CAAC,CAAC;UAC3C;UACA;QACF;UACE;MACJ;IACF;EACF,CAAC,EAAE,CAACnE,QAAQ,EAAEE,UAAU,CAAC,CAAC;;EAE1B;EACAxB,SAAS,CAAC,MAAM;IACd,MAAM0F,MAAM,GAAG7E,SAAS,CAACkB,OAAO;IAChC,IAAI,CAAC2D,MAAM,EAAE;;IAEb;IACAA,MAAM,CAACjD,KAAK,GAAG,GAAG;IAClBiD,MAAM,CAAChD,MAAM,GAAG,GAAG;;IAEnB;IACA,IAAI,CAAC5B,cAAc,CAACiB,OAAO,EAAE;MAC3BjB,cAAc,CAACiB,OAAO,GAAG;QACvBc,IAAI,EAAE,IAAIzC,IAAI,CAACsF,MAAM,CAACjD,KAAK,GAAG,CAAC,EAAEiD,MAAM,CAAChD,MAAM,GAAG,EAAE,CAAC;QACpDC,MAAM,EAAE,IAAItC,MAAM,CAACqF,MAAM,CAACjD,KAAK,GAAG,CAAC,GAAG,EAAE,EAAEiD,MAAM,CAAChD,MAAM,GAAG,EAAE,CAAC;QAC7DM,MAAM,EAAEpB,eAAe,CAACG,OAAO,CAAC0C,SAAS,CAACrD,YAAY,CAAC,CAAC4B;MAC1D,CAAC;IACH;;IAEA;IACAjC,YAAY,CAACgB,OAAO,GAAG;MACrBI,EAAE,EAAE,IAAI;MACRD,QAAQ,EAAE;IACZ,CAAC;IAEDwD,MAAM,CAACC,QAAQ,GAAG,CAAC;IACnBD,MAAM,CAACE,KAAK,CAAC,CAAC;IACdF,MAAM,CAACG,gBAAgB,CAAC,SAAS,EAAEnB,aAAa,CAAC;IACjDgB,MAAM,CAACG,gBAAgB,CAAC,OAAO,EAAER,WAAW,CAAC;;IAE7C;IACAtE,YAAY,CAACgB,OAAO,CAACI,EAAE,GAAGC,qBAAqB,CAACP,QAAQ,CAAC;IAEzD,OAAO,MAAM;MACX,IAAId,YAAY,CAACgB,OAAO,CAACI,EAAE,EAAE;QAC3B2D,oBAAoB,CAAC/E,YAAY,CAACgB,OAAO,CAACI,EAAE,CAAC;MAC/C;MACAuD,MAAM,CAACK,mBAAmB,CAAC,SAAS,EAAErB,aAAa,CAAC;MACpDgB,MAAM,CAACK,mBAAmB,CAAC,OAAO,EAAEV,WAAW,CAAC;IAClD,CAAC;EACH,CAAC,EAAE,CAACxD,QAAQ,EAAE6C,aAAa,EAAEW,WAAW,EAAEjE,YAAY,EAAEE,QAAQ,EAAEE,UAAU,CAAC,CAAC;EAE9E,MAAMwE,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIlF,cAAc,CAACiB,OAAO,EAAE;MAC1BjB,cAAc,CAACiB,OAAO,CAACc,IAAI,CAACyB,KAAK,CAAC,CAAC;MACnCxD,cAAc,CAACiB,OAAO,CAACY,MAAM,CAAC2B,KAAK,CAAC,CAAC;MACrCxD,cAAc,CAACiB,OAAO,CAACiB,MAAM,GAAGpB,eAAe,CAACG,OAAO,CAAC0C,SAAS,CAAC,CAAC,CAAC,CAACzB,MAAM;MAC3E/B,QAAQ,CAAC,CAAC,CAAC;MACXE,QAAQ,CAAC,CAAC,CAAC;MACXE,eAAe,CAAC,CAAC,CAAC;MAClBI,aAAa,CAAC,KAAK,CAAC;MACpBE,YAAY,CAAC,KAAK,CAAC;MACnBJ,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC;EAED,MAAM0E,QAAQ,GAAG9F,WAAW,CAAC,CAAC;EAC9B,MAAM+F,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAInF,YAAY,CAACgB,OAAO,CAACI,EAAE,EAAE;MAC3B2D,oBAAoB,CAAC/E,YAAY,CAACgB,OAAO,CAACI,EAAE,CAAC;IAC/C;IACA8D,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,oBACEvF,OAAA;IAAKyF,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B1F,OAAA;MACE2F,GAAG,EAAExF,SAAU;MACfsF,SAAS,EAAC;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,EACDnF,QAAQ,IAAI,CAACE,UAAU,iBACtBd,OAAA,CAACJ,SAAS;MACRoG,QAAQ,EAAEA,CAAA,KAAMnF,WAAW,CAAC,KAAK,CAAE;MACnCoF,SAAS,EAAEX,aAAc;MACzBY,UAAU,EAAEV;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CACF,EACAjF,UAAU,iBACTd,OAAA,CAACH,QAAQ;MACPS,KAAK,EAAEA,KAAM;MACb6F,KAAK,EAAEzF,YAAa;MACpBM,SAAS,EAAEA,SAAU;MACrBiF,SAAS,EAAEX,aAAc;MACzBY,UAAU,EAAEV;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC7F,EAAA,CA3PID,UAAU;EAAA,QA2NGR,WAAW;AAAA;AAAA2G,EAAA,GA3NxBnG,UAAU;AA6PhB,eAAeA,UAAU;AAAC,IAAAmG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}