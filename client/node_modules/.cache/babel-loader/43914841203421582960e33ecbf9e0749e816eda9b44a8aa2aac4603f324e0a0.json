{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\noahm\\\\OneDrive\\\\Desktop\\\\Coding\\\\brick_blaster2\\\\client\\\\src\\\\components\\\\Game\\\\GameCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useCallback, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport PauseMenu from '../UI/PauseMenu';\nimport GameOver from '../UI/GameOver';\nimport LevelManager from './LevelManager';\nimport { useGameLoop } from './GameLoop';\nimport '../../styles/components/GameCanvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameCanvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const gameObjectsRef = useRef(null);\n  const requestIdRef = useRef({\n    id: null,\n    lastTime: null\n  });\n  const {\n    isRunning,\n    isPaused,\n    isGameOver,\n    setScore,\n    score,\n    lives,\n    setLives,\n    currentLevel,\n    setIsPaused,\n    setIsGameOver,\n    setIsVictory\n  } = useGameLoop();\n\n  // Create levelManager ref to avoid dependency issues\n  const levelManagerRef = useRef(new LevelManager());\n\n  // Draw HUD function\n  const drawHUD = useCallback(ctx => {\n    ctx.font = '16px Arial';\n    ctx.fillStyle = '#00FF00';\n    ctx.textAlign = 'left';\n    ctx.fillText(`Score: ${score}`, 10, 30);\n    ctx.textAlign = 'center';\n    ctx.fillText(`Level: ${currentLevel}`, canvasRef.current.width / 2, 30);\n    ctx.textAlign = 'right';\n    ctx.fillText(`Lives: ${lives}`, canvasRef.current.width - 10, 30);\n  }, [score, lives, currentLevel]);\n\n  // Handle ball out of bounds\n  const handleBallOut = useCallback(objects => {\n    setLives(l => l - 1);\n    if (lives > 1) {\n      objects.ball.reset();\n    } else {\n      setIsGameOver(true);\n    }\n  }, [lives, setLives, setIsGameOver]);\n\n  // Game loop\n  const gameLoop = useCallback(timestamp => {\n    if (!canvasRef.current) return;\n    const ctx = canvasRef.current.getContext('2d', {\n      alpha: false\n    });\n    if (!requestIdRef.current.lastTime) {\n      requestIdRef.current.lastTime = timestamp;\n      requestIdRef.current.id = requestAnimationFrame(gameLoop);\n      return;\n    }\n\n    // Use actual deltaTime but with a reasonable cap\n    const deltaTime = Math.min((timestamp - requestIdRef.current.lastTime) / 1000, 0.05);\n    requestIdRef.current.lastTime = timestamp;\n    if (!isPaused && !isGameOver) {\n      const objects = gameObjectsRef.current;\n\n      // Clear canvas without alpha\n      ctx.fillStyle = '#000000';\n      ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n      // Update game objects\n      objects.paddle.update(deltaTime);\n      if (!objects.ball.isLaunched) {\n        objects.ball.stickToPaddle(objects.paddle);\n      } else {\n        objects.ball.update(deltaTime);\n      }\n\n      // Draw game objects\n      objects.bricks.forEach(brick => {\n        if (!brick.isDestroyed()) {\n          brick.draw(ctx);\n        }\n      });\n      objects.ball.draw(ctx);\n      objects.paddle.draw(ctx);\n\n      // Draw HUD\n      drawHUD(ctx);\n\n      // Handle collisions\n      if (objects.ball.checkPaddleCollision(objects.paddle)) {\n        objects.ball.bounceOffPaddle(objects.paddle);\n      }\n      objects.bricks.forEach(brick => {\n        if (!brick.isDestroyed() && objects.ball.checkBrickCollision(brick)) {\n          objects.ball.bounceOffBrick(brick);\n          if (brick.hit()) {\n            setScore(s => s + 100);\n          }\n        }\n      });\n\n      // Check if ball is out of bounds\n      if (objects.ball.isLaunched && objects.ball.y > canvasRef.current.height) {\n        handleBallOut(objects);\n      }\n    }\n    requestIdRef.current.id = requestAnimationFrame(gameLoop);\n  }, [isPaused, isGameOver, handleBallOut, drawHUD]);\n\n  // Memoize keyboard handlers to avoid recreating them on every render\n  const handleKeyDown = useCallback(e => {\n    var _gameObjectsRef$curre, _gameObjectsRef$curre2, _gameObjectsRef$curre3;\n    if (!isPaused && !isGameOver) {\n      switch (e.key.toLowerCase()) {\n        case 'a':\n        case 'arrowleft':\n          if ((_gameObjectsRef$curre = gameObjectsRef.current) !== null && _gameObjectsRef$curre !== void 0 && _gameObjectsRef$curre.paddle) {\n            gameObjectsRef.current.paddle.moveLeft();\n          }\n          break;\n        case 'd':\n        case 'arrowright':\n          if ((_gameObjectsRef$curre2 = gameObjectsRef.current) !== null && _gameObjectsRef$curre2 !== void 0 && _gameObjectsRef$curre2.paddle) {\n            gameObjectsRef.current.paddle.moveRight();\n          }\n          break;\n        case ' ':\n          if ((_gameObjectsRef$curre3 = gameObjectsRef.current) !== null && _gameObjectsRef$curre3 !== void 0 && _gameObjectsRef$curre3.ball && !gameObjectsRef.current.ball.isLaunched) {\n            gameObjectsRef.current.ball.launch();\n          }\n          break;\n        case 'escape':\n          setIsPaused(prev => !prev);\n          break;\n        default:\n          break;\n      }\n    }\n  }, [isPaused, isGameOver, setIsPaused]);\n  const handleKeyUp = useCallback(e => {\n    var _gameObjectsRef$curre4, _gameObjectsRef$curre5;\n    if (!isPaused && !isGameOver) {\n      switch (e.key.toLowerCase()) {\n        case 'a':\n        case 'arrowleft':\n          if ((_gameObjectsRef$curre4 = gameObjectsRef.current) !== null && _gameObjectsRef$curre4 !== void 0 && _gameObjectsRef$curre4.paddle) {\n            gameObjectsRef.current.paddle.stopLeft();\n          }\n          break;\n        case 'd':\n        case 'arrowright':\n          if ((_gameObjectsRef$curre5 = gameObjectsRef.current) !== null && _gameObjectsRef$curre5 !== void 0 && _gameObjectsRef$curre5.paddle) {\n            gameObjectsRef.current.paddle.stopRight();\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }, [isPaused, isGameOver]);\n\n  // Initialize game objects and setup effect\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Set canvas size\n    canvas.width = 800;\n    canvas.height = 600;\n\n    // Initialize game objects if not already initialized\n    if (!gameObjectsRef.current) {\n      gameObjectsRef.current = {\n        ball: new Ball(canvas.width / 2, canvas.height - 30),\n        paddle: new Paddle(canvas.width / 2 - 50, canvas.height - 20),\n        bricks: levelManagerRef.current.loadLevel(currentLevel).bricks\n      };\n    }\n\n    // Initialize requestIdRef with timing info\n    requestIdRef.current = {\n      id: null,\n      lastTime: 0\n    };\n    canvas.tabIndex = 0;\n    canvas.focus();\n    canvas.addEventListener('keydown', handleKeyDown);\n    canvas.addEventListener('keyup', handleKeyUp);\n\n    // Start game loop\n    requestIdRef.current.id = requestAnimationFrame(gameLoop);\n    return () => {\n      if (requestIdRef.current.id) {\n        cancelAnimationFrame(requestIdRef.current.id);\n      }\n      canvas.removeEventListener('keydown', handleKeyDown);\n      canvas.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [gameLoop, handleKeyDown, handleKeyUp, currentLevel, isPaused, isGameOver]);\n  const handleRestart = () => {\n    if (gameObjectsRef.current) {\n      gameObjectsRef.current.ball.reset();\n      gameObjectsRef.current.paddle.reset();\n      gameObjectsRef.current.bricks = levelManagerRef.current.loadLevel(1).bricks;\n      setScore(0);\n      setLives(3);\n      setIsGameOver(false);\n      setIsVictory(false);\n      setIsPaused(false);\n    }\n  };\n  const navigate = useNavigate();\n  const handleMainMenu = () => {\n    if (requestIdRef.current.id) {\n      cancelAnimationFrame(requestIdRef.current.id);\n    }\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"game-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), isPaused && !isGameOver && /*#__PURE__*/_jsxDEV(PauseMenu, {\n      onResume: () => setIsPaused(false),\n      onRestart: handleRestart,\n      onMainMenu: handleMainMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }, this), isGameOver && /*#__PURE__*/_jsxDEV(GameOver, {\n      score: score,\n      level: currentLevel,\n      isVictory: false,\n      onRestart: handleRestart,\n      onMainMenu: handleMainMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 223,\n    columnNumber: 5\n  }, this);\n};\n_s(GameCanvas, \"r/PqQfyohKzjez99PKHF72sTMRU=\", false, function () {\n  return [useGameLoop, useNavigate];\n});\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useCallback","useState","useNavigate","Ball","Paddle","PauseMenu","GameOver","LevelManager","useGameLoop","jsxDEV","_jsxDEV","GameCanvas","_s","canvasRef","gameObjectsRef","requestIdRef","id","lastTime","isRunning","isPaused","isGameOver","setScore","score","lives","setLives","currentLevel","setIsPaused","setIsGameOver","setIsVictory","levelManagerRef","drawHUD","ctx","font","fillStyle","textAlign","fillText","current","width","handleBallOut","objects","l","ball","reset","gameLoop","timestamp","getContext","alpha","requestAnimationFrame","deltaTime","Math","min","fillRect","height","paddle","update","isLaunched","stickToPaddle","bricks","forEach","brick","isDestroyed","draw","checkPaddleCollision","bounceOffPaddle","checkBrickCollision","bounceOffBrick","hit","s","y","handleKeyDown","e","_gameObjectsRef$curre","_gameObjectsRef$curre2","_gameObjectsRef$curre3","key","toLowerCase","moveLeft","moveRight","launch","prev","handleKeyUp","_gameObjectsRef$curre4","_gameObjectsRef$curre5","stopLeft","stopRight","canvas","loadLevel","tabIndex","focus","addEventListener","cancelAnimationFrame","removeEventListener","handleRestart","navigate","handleMainMenu","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onResume","onRestart","onMainMenu","level","isVictory","_c","$RefreshReg$"],"sources":["C:/Users/noahm/OneDrive/Desktop/Coding/brick_blaster2/client/src/components/Game/GameCanvas.js"],"sourcesContent":["import React, { useRef, useEffect, useCallback, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Ball from './entities/Ball';\nimport Paddle from './entities/Paddle';\nimport PauseMenu from '../UI/PauseMenu';\nimport GameOver from '../UI/GameOver';\nimport LevelManager from './LevelManager';\nimport { useGameLoop } from './GameLoop';\nimport '../../styles/components/GameCanvas.css';\n\nconst GameCanvas = () => {\n  const canvasRef = useRef(null);\n  const gameObjectsRef = useRef(null);\n  const requestIdRef = useRef({ id: null, lastTime: null });\n  const { isRunning, isPaused, isGameOver, setScore, score, lives, setLives, currentLevel, setIsPaused, setIsGameOver, setIsVictory } = useGameLoop();\n\n  // Create levelManager ref to avoid dependency issues\n  const levelManagerRef = useRef(new LevelManager());\n\n  // Draw HUD function\n  const drawHUD = useCallback((ctx) => {\n    ctx.font = '16px Arial';\n    ctx.fillStyle = '#00FF00';\n    ctx.textAlign = 'left';\n    ctx.fillText(`Score: ${score}`, 10, 30);\n    ctx.textAlign = 'center';\n    ctx.fillText(`Level: ${currentLevel}`, canvasRef.current.width / 2, 30);\n    ctx.textAlign = 'right';\n    ctx.fillText(`Lives: ${lives}`, canvasRef.current.width - 10, 30);\n  }, [score, lives, currentLevel]);\n\n  // Handle ball out of bounds\n  const handleBallOut = useCallback((objects) => {\n    setLives(l => l - 1);\n    if (lives > 1) {\n      objects.ball.reset();\n    } else {\n      setIsGameOver(true);\n    }\n  }, [lives, setLives, setIsGameOver]);\n\n  // Game loop\n  const gameLoop = useCallback((timestamp) => {\n    if (!canvasRef.current) return;\n    const ctx = canvasRef.current.getContext('2d', { alpha: false });\n\n    if (!requestIdRef.current.lastTime) {\n      requestIdRef.current.lastTime = timestamp;\n      requestIdRef.current.id = requestAnimationFrame(gameLoop);\n      return;\n    }\n    \n    // Use actual deltaTime but with a reasonable cap\n    const deltaTime = Math.min((timestamp - requestIdRef.current.lastTime) / 1000, 0.05);\n    requestIdRef.current.lastTime = timestamp;\n\n    if (!isPaused && !isGameOver) {\n      const objects = gameObjectsRef.current;\n      \n      // Clear canvas without alpha\n      ctx.fillStyle = '#000000';\n      ctx.fillRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n      // Update game objects\n      objects.paddle.update(deltaTime);\n      \n      if (!objects.ball.isLaunched) {\n        objects.ball.stickToPaddle(objects.paddle);\n      } else {\n        objects.ball.update(deltaTime);\n      }\n\n      // Draw game objects\n      objects.bricks.forEach(brick => {\n        if (!brick.isDestroyed()) {\n          brick.draw(ctx);\n        }\n      });\n\n      objects.ball.draw(ctx);\n      objects.paddle.draw(ctx);\n\n      // Draw HUD\n      drawHUD(ctx);\n\n      // Handle collisions\n      if (objects.ball.checkPaddleCollision(objects.paddle)) {\n        objects.ball.bounceOffPaddle(objects.paddle);\n      }\n\n      objects.bricks.forEach((brick) => {\n        if (!brick.isDestroyed() && objects.ball.checkBrickCollision(brick)) {\n          objects.ball.bounceOffBrick(brick);\n          if (brick.hit()) {\n            setScore(s => s + 100);\n          }\n        }\n      });\n\n      // Check if ball is out of bounds\n      if (objects.ball.isLaunched && objects.ball.y > canvasRef.current.height) {\n        handleBallOut(objects);\n      }\n    }\n\n    requestIdRef.current.id = requestAnimationFrame(gameLoop);\n  }, [isPaused, isGameOver, handleBallOut, drawHUD]);\n\n  // Memoize keyboard handlers to avoid recreating them on every render\n  const handleKeyDown = useCallback((e) => {\n    if (!isPaused && !isGameOver) {\n      switch (e.key.toLowerCase()) {\n        case 'a':\n        case 'arrowleft':\n          if (gameObjectsRef.current?.paddle) {\n            gameObjectsRef.current.paddle.moveLeft();\n          }\n          break;\n        case 'd':\n        case 'arrowright':\n          if (gameObjectsRef.current?.paddle) {\n            gameObjectsRef.current.paddle.moveRight();\n          }\n          break;\n        case ' ':\n          if (gameObjectsRef.current?.ball && !gameObjectsRef.current.ball.isLaunched) {\n            gameObjectsRef.current.ball.launch();\n          }\n          break;\n        case 'escape':\n          setIsPaused(prev => !prev);\n          break;\n        default:\n          break;\n      }\n    }\n  }, [isPaused, isGameOver, setIsPaused]);\n\n  const handleKeyUp = useCallback((e) => {\n    if (!isPaused && !isGameOver) {\n      switch (e.key.toLowerCase()) {\n        case 'a':\n        case 'arrowleft':\n          if (gameObjectsRef.current?.paddle) {\n            gameObjectsRef.current.paddle.stopLeft();\n          }\n          break;\n        case 'd':\n        case 'arrowright':\n          if (gameObjectsRef.current?.paddle) {\n            gameObjectsRef.current.paddle.stopRight();\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }, [isPaused, isGameOver]);\n\n  // Initialize game objects and setup effect\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Set canvas size\n    canvas.width = 800;\n    canvas.height = 600;\n    \n    // Initialize game objects if not already initialized\n    if (!gameObjectsRef.current) {\n      gameObjectsRef.current = {\n        ball: new Ball(canvas.width / 2, canvas.height - 30),\n        paddle: new Paddle(canvas.width / 2 - 50, canvas.height - 20),\n        bricks: levelManagerRef.current.loadLevel(currentLevel).bricks\n      };\n    }\n\n    // Initialize requestIdRef with timing info\n    requestIdRef.current = {\n      id: null,\n      lastTime: 0\n    };\n\n    canvas.tabIndex = 0;\n    canvas.focus();\n    canvas.addEventListener('keydown', handleKeyDown);\n    canvas.addEventListener('keyup', handleKeyUp);\n\n    // Start game loop\n    requestIdRef.current.id = requestAnimationFrame(gameLoop);\n\n    return () => {\n      if (requestIdRef.current.id) {\n        cancelAnimationFrame(requestIdRef.current.id);\n      }\n      canvas.removeEventListener('keydown', handleKeyDown);\n      canvas.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [gameLoop, handleKeyDown, handleKeyUp, currentLevel, isPaused, isGameOver]);\n\n  const handleRestart = () => {\n    if (gameObjectsRef.current) {\n      gameObjectsRef.current.ball.reset();\n      gameObjectsRef.current.paddle.reset();\n      gameObjectsRef.current.bricks = levelManagerRef.current.loadLevel(1).bricks;\n      setScore(0);\n      setLives(3);\n      setIsGameOver(false);\n      setIsVictory(false);\n      setIsPaused(false);\n    }\n  };\n\n  const navigate = useNavigate();\n  const handleMainMenu = () => {\n    if (requestIdRef.current.id) {\n      cancelAnimationFrame(requestIdRef.current.id);\n    }\n    navigate('/');\n  };\n\n  return (\n    <div className=\"game-container\">\n      <canvas\n        ref={canvasRef}\n        className=\"game-canvas\"\n      />\n      {isPaused && !isGameOver && (\n        <PauseMenu\n          onResume={() => setIsPaused(false)}\n          onRestart={handleRestart}\n          onMainMenu={handleMainMenu}\n        />\n      )}\n      {isGameOver && (\n        <GameOver\n          score={score}\n          level={currentLevel}\n          isVictory={false}\n          onRestart={handleRestart}\n          onMainMenu={handleMainMenu}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default GameCanvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}