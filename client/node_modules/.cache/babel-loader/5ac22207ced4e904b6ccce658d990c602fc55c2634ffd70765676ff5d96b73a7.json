{"ast":null,"code":"class Brick {\n  constructor(x, y, width, height, type = 'standard') {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.type = type;\n    this.broken = false;\n    this.hitPoints = this.getInitialHitPoints();\n    this.color = this.getColor();\n  }\n  getInitialHitPoints() {\n    switch (this.type) {\n      case 'durable':\n        return 2;\n      case 'unbreakable':\n        return Infinity;\n      default:\n        return 1;\n    }\n  }\n  getColor() {\n    switch (this.type) {\n      case 'durable':\n        return '#FF9900';\n      case 'unbreakable':\n        return '#666666';\n      case 'explosive':\n        return '#FF0000';\n      default:\n        return '#0095DD';\n    }\n  }\n  hit() {\n    if (this.type !== 'unbreakable') {\n      this.hitPoints--;\n      if (this.hitPoints <= 0) {\n        this.broken = true;\n      }\n      // For durable bricks, update color based on damage\n      if (this.type === 'durable') {\n        this.color = this.hitPoints === 1 ? '#FFC266' : '#FF9900';\n      }\n    }\n    return this.broken;\n  }\n  checkCollision(ball) {\n    return ball.x + ball.radius > this.x && ball.x - ball.radius < this.x + this.width && ball.y + ball.radius > this.y && ball.y - ball.radius < this.y + this.height;\n  }\n  draw(ctx) {\n    if (!this.broken) {\n      ctx.beginPath();\n      ctx.rect(this.x, this.y, this.width, this.height);\n      ctx.fillStyle = this.color;\n      ctx.fill();\n      ctx.strokeStyle = '#000000';\n      ctx.strokeRect(this.x, this.y, this.width, this.height);\n      ctx.closePath();\n    }\n  }\n}\nexport default Brick;","map":{"version":3,"names":["Brick","constructor","x","y","width","height","type","broken","hitPoints","getInitialHitPoints","color","getColor","Infinity","hit","checkCollision","ball","radius","draw","ctx","beginPath","rect","fillStyle","fill","strokeStyle","strokeRect","closePath"],"sources":["c:/Users/noahm/OneDrive/Desktop/Coding/brick_blaster2/client/src/components/Game/entities/Brick.js"],"sourcesContent":["class Brick {\n  constructor(x, y, width, height, type = 'standard') {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.type = type;\n    this.broken = false;\n    this.hitPoints = this.getInitialHitPoints();\n    this.color = this.getColor();\n  }\n\n  getInitialHitPoints() {\n    switch (this.type) {\n      case 'durable':\n        return 2;\n      case 'unbreakable':\n        return Infinity;\n      default:\n        return 1;\n    }\n  }\n\n  getColor() {\n    switch (this.type) {\n      case 'durable':\n        return '#FF9900';\n      case 'unbreakable':\n        return '#666666';\n      case 'explosive':\n        return '#FF0000';\n      default:\n        return '#0095DD';\n    }\n  }\n\n  hit() {\n    if (this.type !== 'unbreakable') {\n      this.hitPoints--;\n      if (this.hitPoints <= 0) {\n        this.broken = true;\n      }\n      // For durable bricks, update color based on damage\n      if (this.type === 'durable') {\n        this.color = this.hitPoints === 1 ? '#FFC266' : '#FF9900';\n      }\n    }\n    return this.broken;\n  }\n\n  checkCollision(ball) {\n    return (\n      ball.x + ball.radius > this.x &&\n      ball.x - ball.radius < this.x + this.width &&\n      ball.y + ball.radius > this.y &&\n      ball.y - ball.radius < this.y + this.height\n    );\n  }\n\n  draw(ctx) {\n    if (!this.broken) {\n      ctx.beginPath();\n      ctx.rect(this.x, this.y, this.width, this.height);\n      ctx.fillStyle = this.color;\n      ctx.fill();\n      ctx.strokeStyle = '#000000';\n      ctx.strokeRect(this.x, this.y, this.width, this.height);\n      ctx.closePath();\n    }\n  }\n}\n\nexport default Brick;\n"],"mappings":"AAAA,MAAMA,KAAK,CAAC;EACVC,WAAWA,CAACC,CAAC,EAAEC,CAAC,EAAEC,KAAK,EAAEC,MAAM,EAAEC,IAAI,GAAG,UAAU,EAAE;IAClD,IAAI,CAACJ,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,MAAM,GAAG,KAAK;IACnB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACC,mBAAmB,CAAC,CAAC;IAC3C,IAAI,CAACC,KAAK,GAAG,IAAI,CAACC,QAAQ,CAAC,CAAC;EAC9B;EAEAF,mBAAmBA,CAAA,EAAG;IACpB,QAAQ,IAAI,CAACH,IAAI;MACf,KAAK,SAAS;QACZ,OAAO,CAAC;MACV,KAAK,aAAa;QAChB,OAAOM,QAAQ;MACjB;QACE,OAAO,CAAC;IACZ;EACF;EAEAD,QAAQA,CAAA,EAAG;IACT,QAAQ,IAAI,CAACL,IAAI;MACf,KAAK,SAAS;QACZ,OAAO,SAAS;MAClB,KAAK,aAAa;QAChB,OAAO,SAAS;MAClB,KAAK,WAAW;QACd,OAAO,SAAS;MAClB;QACE,OAAO,SAAS;IACpB;EACF;EAEAO,GAAGA,CAAA,EAAG;IACJ,IAAI,IAAI,CAACP,IAAI,KAAK,aAAa,EAAE;MAC/B,IAAI,CAACE,SAAS,EAAE;MAChB,IAAI,IAAI,CAACA,SAAS,IAAI,CAAC,EAAE;QACvB,IAAI,CAACD,MAAM,GAAG,IAAI;MACpB;MACA;MACA,IAAI,IAAI,CAACD,IAAI,KAAK,SAAS,EAAE;QAC3B,IAAI,CAACI,KAAK,GAAG,IAAI,CAACF,SAAS,KAAK,CAAC,GAAG,SAAS,GAAG,SAAS;MAC3D;IACF;IACA,OAAO,IAAI,CAACD,MAAM;EACpB;EAEAO,cAAcA,CAACC,IAAI,EAAE;IACnB,OACEA,IAAI,CAACb,CAAC,GAAGa,IAAI,CAACC,MAAM,GAAG,IAAI,CAACd,CAAC,IAC7Ba,IAAI,CAACb,CAAC,GAAGa,IAAI,CAACC,MAAM,GAAG,IAAI,CAACd,CAAC,GAAG,IAAI,CAACE,KAAK,IAC1CW,IAAI,CAACZ,CAAC,GAAGY,IAAI,CAACC,MAAM,GAAG,IAAI,CAACb,CAAC,IAC7BY,IAAI,CAACZ,CAAC,GAAGY,IAAI,CAACC,MAAM,GAAG,IAAI,CAACb,CAAC,GAAG,IAAI,CAACE,MAAM;EAE/C;EAEAY,IAAIA,CAACC,GAAG,EAAE;IACR,IAAI,CAAC,IAAI,CAACX,MAAM,EAAE;MAChBW,GAAG,CAACC,SAAS,CAAC,CAAC;MACfD,GAAG,CAACE,IAAI,CAAC,IAAI,CAAClB,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,KAAK,EAAE,IAAI,CAACC,MAAM,CAAC;MACjDa,GAAG,CAACG,SAAS,GAAG,IAAI,CAACX,KAAK;MAC1BQ,GAAG,CAACI,IAAI,CAAC,CAAC;MACVJ,GAAG,CAACK,WAAW,GAAG,SAAS;MAC3BL,GAAG,CAACM,UAAU,CAAC,IAAI,CAACtB,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,KAAK,EAAE,IAAI,CAACC,MAAM,CAAC;MACvDa,GAAG,CAACO,SAAS,CAAC,CAAC;IACjB;EACF;AACF;AAEA,eAAezB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}